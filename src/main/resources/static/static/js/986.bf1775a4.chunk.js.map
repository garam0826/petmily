{"version":3,"file":"static/js/986.bf1775a4.chunk.js","mappings":"uLA2EA,QArEA,WACI,MAAMA,GAAWC,EAAAA,EAAAA,OACX,IAAEC,IAAQC,EAAAA,EAAAA,MACTC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,CAAC,GA+BpC,OA9BiBC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,YAE5CC,EAAAA,EAAAA,YAAU,KACNC,EAAAA,EAAMC,IAAI,sBAADC,OAAuBX,IAC3BY,MAAKC,IACF,MAAMC,EAAOD,EAASC,KACtBX,EAASW,EAAKC,SAAS,IAE1BC,OAAMC,IACHC,QAAQD,MAAM,4CAA6CA,EAAM,GACnE,GACP,CAACjB,KAoBAmB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACID,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iBAAgBD,SAAA,EAC3BE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,qCACJD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,kBACNE,EAAAA,EAAAA,KAAA,SACIC,KAAK,QACLC,KAAK,OACLC,MAAOvB,EAAMwB,OAAS,GACtBC,SAAWC,GAAMzB,EAAS,IAAID,EAAOwB,MAAOE,EAAEC,OAAOJ,QACrDK,UAAQ,WAIpBR,EAAAA,EAAAA,KAAA,UACAH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,aAAYD,SAAA,EACvBE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,kBACNE,EAAAA,EAAAA,KAAA,YACIC,KAAK,UACLQ,KAAK,KACLC,KAAK,KACLP,MAAOvB,EAAM+B,SAAW,GACxBN,SAAWC,GAAMzB,EAAS,IAAID,EAAO+B,QAASL,EAAEC,OAAOJ,cAG/DH,EAAAA,EAAAA,KAAA,UACAH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,mBAAkBD,SAAA,EAC7BE,EAAAA,EAAAA,KAAA,UAAQY,QA7CDC,UACf,UAKU1B,EAAAA,EAAM2B,IAAI,qBAAsBlC,GACjCU,MAAKC,IACFK,QAAQmB,IAAI,gDAAcxB,EAASC,MACnChB,EAAS,cAAc,GAEnC,CAAE,MAAMmB,GACAC,QAAQD,MAAM,gDAAcA,GAC5BqB,MAAMrB,EACd,GA+BoCG,SAAC,+BAC7BE,EAAAA,EAAAA,KAAA,UAAQY,QAASA,IAAMpC,EAAS,eAAesB,SAAC,sBAIhE,C","sources":["board/EditContent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './board.css';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction EditContent() {\r\n    const navigate = useNavigate();\r\n    const { idx } = useParams();\r\n    const [board, setBoard] = useState({});\r\n    const userData = useSelector(state => state.userData);\r\n\r\n    useEffect(() => {\r\n        axios.get(`/board/Content?idx=${idx}`)\r\n            .then(response => {\r\n                const data = response.data;\r\n                setBoard(data.boardDTO);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"There was an error retrieving the board: \", error);\r\n            });\r\n    }, [idx]);\r\n\r\n    const handleEdit = async () => {\r\n        try {\r\n            /*if (board.reg_name !== reg_name) {\r\n                alert(\"본인의 글만 수정할 수 있습니다.\");\r\n                return;\r\n            }*/\r\n            await axios.put(`/board/UpdateBoard`, board)\r\n                .then(response => {\r\n                    console.log('게시글 수정 성공:', response.data);\r\n                    navigate('/board/list');\r\n                })\r\n        } catch(error) {\r\n                console.error('게시글 수정 실패:', error);\r\n                alert(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"form-container\">\r\n                <h2>게시글 수정</h2>\r\n                <div>\r\n                    <span>제목</span>\r\n                    <input\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        value={board.title || ''}\r\n                        onChange={(e) => setBoard({...board, title: e.target.value})}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n            <br/>\r\n            <div className=\"form-group\">\r\n                <span>내용</span>\r\n                <textarea\r\n                    name=\"content\"\r\n                    cols=\"30\"\r\n                    rows=\"20\"\r\n                    value={board.content || ''}\r\n                    onChange={(e) => setBoard({...board, content: e.target.value})}\r\n                ></textarea>\r\n            </div>\r\n            <br/>\r\n            <div className=\"button-container\">\r\n                <button onClick={handleEdit}>수정 완료</button>\r\n                <button onClick={() => navigate('/board/list')}>취소</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditContent;\r\n"],"names":["navigate","useNavigate","idx","useParams","board","setBoard","useState","useSelector","state","userData","useEffect","axios","get","concat","then","response","data","boardDTO","catch","error","console","_jsxs","children","className","_jsx","name","type","value","title","onChange","e","target","required","cols","rows","content","onClick","async","put","log","alert"],"sourceRoot":""}