{"version":3,"file":"static/js/79.13c1c7b8.chunk.js","mappings":"4KAqKA,QAzEA,WACI,MAAMA,GAAWC,EAAAA,EAAAA,OACVC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,IAGjCG,GAAWC,EAAAA,EAAAA,KAAYC,GAASA,EAAMF,WAyB5C,OACIG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qCACJD,EAAAA,EAAAA,MAAA,QAAMG,SA1BQC,IAClBA,EAAMC,iBAEN,MAAMC,EAAWT,EAAWA,EAASU,OAAS,GACxCC,GAAc,IAAIC,MAAOC,cAE/BC,EAAAA,EAAMC,KAAK,oBAAqB,CAC5BpB,MAAOA,EACPG,QAASA,EACTW,SAAUA,EACVO,IAAK,EACLC,OAAQN,EACRO,OAAQP,IAEPQ,MAAKC,IACFC,QAAQC,IAAI,gDAAcF,EAASG,MACnC9B,EAAS,cAAc,IAE1B+B,OAAMC,IACHJ,QAAQI,MAAM,gDAAcA,EAAM,GACpC,EAM2BrB,SAAA,EACzBD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACPC,EAAAA,EAAAA,KAAA,SACIqB,KAAK,QACLC,KAAK,OACLC,MAAOjC,EACPkC,SAAWC,GAAMlC,EAASkC,EAAEC,OAAOH,OACnCI,UAAQ,QAGhB7B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,wBACPC,EAAAA,EAAAA,KAAA,SACIqB,KAAK,WACLC,KAAK,OACLC,MAAO5B,EAAWA,EAASU,OAAS,GACpCuB,UAAQ,QAGhB5B,EAAAA,EAAAA,KAAA,UACAF,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACPC,EAAAA,EAAAA,KAAA,YACIqB,KAAK,UACLQ,KAAK,KACLC,KAAK,KACLP,MAAO9B,EACP+B,SAAWC,GAAM/B,EAAW+B,EAAEC,OAAOH,OACrCI,UAAQ,QAGhB3B,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAAQsB,KAAK,SAAQvB,SAAC,sBAItC,C","sources":["board/WriteContent.js"],"sourcesContent":["/*\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useSelector } from \"react-redux\";\r\nimport store from \"../member/Store\";\r\n\r\nfunction WriteContent() {\r\n    const navigate = useNavigate();\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    //const [idx, setIdx] = useState(null);\r\n    //const userData = useSelector((state) => state.user.userData);\r\n\r\n    const userData = useSelector((state) => state.userData);\r\n\r\n/!*    const state = store.getState();\r\n    const id = state.isLoggedIn ? state.userData.mem_id : null;*!/\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const reg_name = userData ? userData.mem_id : '';\r\n        const currentTime = new Date().toISOString();\r\n\r\n        axios.post('/board/WriteBoard', {\r\n            //idx: idx,\r\n            title: title,\r\n            content: content,\r\n            reg_name: reg_name,\r\n            hit: 0,\r\n            w_date: currentTime,\r\n            u_date: currentTime,\r\n        })\r\n            .then(response => {\r\n                console.log('게시글 작성 성공:', response.data);\r\n                navigate('/board/list');\r\n            })\r\n            .catch(error => {\r\n                console.error('게시글 작성 실패:', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>게시글 작성</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>제목</label>\r\n                    <input\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>작성자</label>\r\n                    <input\r\n                        name=\"reg_name\"\r\n                        type=\"text\"\r\n                        value={userData ? userData.mem_id : ''}\r\n                        readOnly\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <label>내용</label>\r\n                    <textarea\r\n                        name=\"content\"\r\n                        cols=\"30\"\r\n                        rows=\"20\"\r\n                        value={content}\r\n                        onChange={(e) => setContent(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <button type=\"submit\">저장</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WriteContent;\r\n*/\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction WriteContent() {\r\n    const navigate = useNavigate();\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n\r\n    // Redux 스토어에서 userData를 가져옴\r\n    const userData = useSelector(state => state.userData);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const reg_name = userData ? userData.mem_id : '';\r\n        const currentTime = new Date().toISOString();\r\n\r\n        axios.post('/board/WriteBoard', {\r\n            title: title,\r\n            content: content,\r\n            reg_name: reg_name,\r\n            hit: 0,\r\n            w_date: currentTime,\r\n            u_date: currentTime,\r\n        })\r\n            .then(response => {\r\n                console.log('게시글 작성 성공:', response.data);\r\n                navigate('/board/list');\r\n            })\r\n            .catch(error => {\r\n                console.error('게시글 작성 실패:', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>게시글 작성</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>제목</label>\r\n                    <input\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>작성자</label>\r\n                    <input\r\n                        name=\"reg_name\"\r\n                        type=\"text\"\r\n                        value={userData ? userData.mem_id : ''}\r\n                        readOnly\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <label>내용</label>\r\n                    <textarea\r\n                        name=\"content\"\r\n                        cols=\"30\"\r\n                        rows=\"20\"\r\n                        value={content}\r\n                        onChange={(e) => setContent(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <button type=\"submit\">저장</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WriteContent;\r\n\r\n"],"names":["navigate","useNavigate","title","setTitle","useState","content","setContent","userData","useSelector","state","_jsxs","children","_jsx","onSubmit","event","preventDefault","reg_name","mem_id","currentTime","Date","toISOString","axios","post","hit","w_date","u_date","then","response","console","log","data","catch","error","name","type","value","onChange","e","target","required","readOnly","cols","rows"],"sourceRoot":""}