{"version":3,"file":"static/js/8.6fb8ac86.chunk.js","mappings":"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","sources":["Menu.jsx","member/MyContent.jsx"],"sourcesContent":["import React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport store from \"./member/Store\";\r\nimport {logout} from \"./member/Reducer\";\r\nimport menustyle from \"./css/menu.css\"\r\nfunction Memu() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const state = store.getState();\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n        navigate(\"/main\");\r\n    };\r\n    return(\r\n        <div className=\"menubar\">\r\n            {state.isLoggedIn ? (\r\n                <button className=\"login\" onClick={handleLogout}>로그아웃</button>\r\n            ) : (\r\n                <button className=\"login\" onClick={() => navigate(\"/member/login\")}>로그인</button>\r\n            )}\r\n\r\n            <ul>\r\n                <li onClick={() => navigate(\"/main\")}>홈</li>\r\n                <li onClick={() => navigate(\"/animal\")}>보호 중인 동물</li>\r\n                <li onClick={() => navigate(\"/recommend\")}>반려견 추천</li>\r\n                <li onClick={() => navigate(\"/board/list\")}>게시판</li>\r\n                <li className=\"dropdown\">\r\n                    <span>회원 정보</span>\r\n                    <div className=\"dropdown-content\">\r\n                        <Link to=\"/member/mypage\">정보 확인 및 수정</Link>\r\n                        <Link to=\"/member/mypage/mycart\">찜 목록</Link>\r\n                        <Link to=\"/member/mypage/mycontent\">내가 작성한 글과 댓글</Link>\r\n                        <Link to=\"/member/mypage/imgUpload\">이미지 업로드</Link>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Memu;","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Menu from \"../Menu\";\r\nimport '../css/mycontent.css';\r\n\r\nfunction MyContent() {\r\n    const [posts, setPosts] = useState([]);\r\n    const [comments, setComments] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const userData = useSelector((state) => state.userData);\r\n    const userId = userData ? userData.mem_id : '';\r\n\r\n    // 서버에서 게시글과 댓글 데이터를 가져오는 함수\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await axios.get(`/board/List`);\r\n            const data = response.data;\r\n\r\n            console.log(\"API Response:\", data); // 서버 응답 데이터 전체 확인\r\n\r\n            if (data && Array.isArray(data.b_List)) {\r\n                // 사용자 ID로 게시글 필터링\r\n                const userPosts = data.b_List.filter(post => post.reg_name === userId);\r\n\r\n                // 모든 게시글에서 댓글과 대댓글 추출\r\n                const userComments = data.b_List.flatMap(post => {\r\n                    const allComments = [];\r\n                    // 댓글이 존재하면 추가\r\n                    if (Array.isArray(post.r_List)) {\r\n                        post.r_List.forEach(comment => {\r\n                            if (comment.reg_name === userId) {\r\n                                allComments.push({\r\n                                    ...comment,\r\n                                    isReply: false, // 댓글임을 표시\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                    return allComments;\r\n                });\r\n\r\n                setPosts(userPosts);\r\n                setComments(userComments);\r\n\r\n                console.log(\"Filtered User Posts:\", userPosts);\r\n                console.log(\"Filtered User Comments:\", userComments);\r\n            } else {\r\n                console.error('Unexpected response data:', data);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (userId) {\r\n            fetchData();\r\n        } else {\r\n            console.log(\"User ID is not available\");\r\n            setLoading(false);\r\n        }\r\n    }, [userId]);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Menu />\r\n            <div className=\"user-content-container\">\r\n                <h2>{userData?.mem_id || '사용자'}의 작성 글</h2>\r\n                <div className=\"user-posts\">\r\n                    {posts.length > 0 ? (\r\n                        posts.map((post) => (\r\n                            <div key={post.idx} className=\"post-item\">\r\n                                <h3>{post.title}</h3>\r\n                                <p>{post.content}</p>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <p>작성한 글이 없습니다.</p>\r\n                    )}\r\n                </div>\r\n\r\n                <h2>{userData?.mem_id || '사용자'}의 작성 댓글</h2>\r\n                <div className=\"user-comments\">\r\n                    {comments.length > 0 ? (\r\n                        comments.map((comment) => (\r\n                            <div\r\n                                key={comment.idx || comment.reply_idx}\r\n                                className={`comment-item ${comment.isReply ? 'reply' : ''}`}>\r\n                                <p>{comment.content}</p>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <p>작성한 댓글이 없습니다.</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyContent;"],"names":["navigate","useNavigate","dispatch","useDispatch","state","store","getState","_jsxs","className","children","isLoggedIn","_jsx","onClick","handleLogout","logout","Link","to","posts","setPosts","useState","comments","setComments","loading","setLoading","userData","useSelector","userId","mem_id","useEffect","async","data","axios","get","console","log","Array","isArray","b_List","userPosts","filter","post","reg_name","userComments","flatMap","allComments","r_List","forEach","comment","push","isReply","error","fetchData","Menu","length","map","title","content","idx","concat","reply_idx"],"sourceRoot":""}