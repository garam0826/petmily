{"version":3,"file":"static/js/721.077ab4bc.chunk.js","mappings":"qKAsDA,QAlDA,WACI,MACMA,GADWC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,WACpBC,QACjBC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KAE3CC,EAAAA,EAAAA,YAAU,KACFR,GACAS,EAAaT,EACjB,GACD,CAACA,IAGJ,MAAMS,EAAgBT,IAClBU,EAAAA,EAAMC,IAAI,yBAADC,OAA0BZ,IAC9Ba,MAAKC,IACFR,EAAaQ,EAASC,KAAK,IAE9BC,OAAMC,IACHC,QAAQD,MAAM,6BAA8BA,EAAM,GACpD,EAgBV,OACIE,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAAA,MAAAD,SACKf,EAAUiB,KAAIC,IACXJ,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,QAAAD,SAAOG,EAASC,eAChBH,EAAAA,EAAAA,KAAA,UAAQI,QAASA,KAAMC,OAnBnBF,EAmBkCD,EAASC,iBAlB/Dd,EAAAA,EAAMiB,OAAO,2BAADf,OAA4BZ,EAAM,iBAAAY,OAAgBY,IACzDX,MAAKC,IACFI,QAAQU,IAAI,iCAEZnB,EAAaT,EAAO,IAEvBgB,OAAMC,IACHC,QAAQD,MAAM,4BAA6BA,EAAM,IARrCO,KAmBwD,EAAAJ,SAAC,0BAFxDG,EAASM,UAQtC,C","sources":["member/Favorite.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nfunction Favorite() {\r\n    const userData = useSelector(state => state.userData); // 사용자 데이터를 스토어에서 가져옴.\r\n    const userId = userData.mem_id;\r\n    const [favorites, setFavorites] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (userId) {\r\n            getFavorites(userId); // 사용자 아이디가 있을 때에만 찜 목록을 가져옴.\r\n        }\r\n    }, [userId]);\r\n\r\n    // 찜 목록 불러오기\r\n    const getFavorites = (userId) => {\r\n        axios.get(`/favorites/list?memId=${userId}`)\r\n            .then(response => {\r\n                setFavorites(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error fetching favorites: \", error);\r\n            });\r\n    };\r\n\r\n    // 찜 제거 함수\r\n    const removeFavorite = (desertionNo) => {\r\n        axios.delete(`/favorites/remove?memId=${userId}&desertionNo=${desertionNo}`)\r\n            .then(response => {\r\n                console.log(\"Favorite removed successfully\");\r\n                // 찜 제거 후 찜 목록 다시 불러오기\r\n                getFavorites(userId);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error removing favorite: \", error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>찜 목록</h2>\r\n            <ul>\r\n                {favorites.map(favorite => (\r\n                    <li key={favorite.id}>\r\n                        <span>{favorite.desertionNo}</span>\r\n                        <button onClick={() => removeFavorite(favorite.desertionNo)}>찜 제거</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Favorite;\r\n"],"names":["userId","useSelector","state","userData","mem_id","favorites","setFavorites","useState","useEffect","getFavorites","axios","get","concat","then","response","data","catch","error","console","_jsxs","children","_jsx","map","favorite","desertionNo","onClick","removeFavorite","delete","log","id"],"sourceRoot":""}