{"version":3,"file":"static/js/721.1eedbc13.chunk.js","mappings":"0LA0CA,QApCA,WACI,MAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQC,EAAAA,EAAMC,WAKpB,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,CACnBL,EAAMM,YACHC,EAAAA,EAAAA,KAAA,UAAQH,UAAU,QAAQI,QAPjBC,KACjBX,GAASY,EAAAA,EAAAA,OACTd,EAAS,QAAQ,EAKuCS,SAAC,8BAEjDE,EAAAA,EAAAA,KAAA,UAAQH,UAAU,QAAQI,QAASA,IAAMZ,EAAS,iBAAiBS,SAAC,wBAGxEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,MAAIC,QAASA,IAAMZ,EAAS,SAASS,SAAC,YACtCE,EAAAA,EAAAA,KAAA,MAAIC,QAASA,IAAMZ,EAAS,WAAWS,SAAC,4CACxCE,EAAAA,EAAAA,KAAA,MAAIC,QAASA,IAAMZ,EAAS,cAAcS,SAAC,qCAC3CE,EAAAA,EAAAA,KAAA,MAAIC,QAASA,IAAMZ,EAAS,eAAeS,SAAC,wBAC5CE,EAAAA,EAAAA,KAAA,MAAIC,QAASA,IAAMZ,EAAS,KAAKS,SAAC,kDAClCF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,WAAUC,SAAA,EACpBE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,+BACNF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BE,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,iBAAgBP,SAAC,mDAC1BE,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,wBAAuBP,SAAC,yBACjCE,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,iBAAgBP,SAAC,yEAMlD,C,4FCgBA,QAnDA,WACI,MACMQ,GADWC,EAAAA,EAAAA,KAAYd,GAASA,EAAMe,WACpBC,QACjBC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KAE3CC,EAAAA,EAAAA,YAAU,KACFP,GACAQ,EAAaR,EACjB,GACD,CAACA,IAGJ,MAAMQ,EAAgBR,IAClBS,EAAAA,EAAMC,IAAI,yBAADC,OAA0BX,IAC9BY,MAAKC,IACFR,EAAaQ,EAASC,KAAK,IAE9BC,OAAMC,IACHC,QAAQD,MAAM,6BAA8BA,EAAM,GACpD,EAgBV,OACI1B,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIE,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,KACLxB,EAAAA,EAAAA,KAAA,MAAAF,SAAI,yBACJE,EAAAA,EAAAA,KAAA,MAAAF,SACKY,EAAUe,KAAIC,IACX9B,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIE,EAAAA,EAAAA,KAAA,QAAAF,SAAO4B,EAASC,eAChB3B,EAAAA,EAAAA,KAAA,UAAQC,QAASA,KAAM2B,OApBnBD,EAoBkCD,EAASC,iBAnB/DZ,EAAAA,EAAMc,OAAO,2BAADZ,OAA4BX,EAAM,iBAAAW,OAAgBU,IACzDT,MAAKC,IACFI,QAAQO,IAAI,iCAEZhB,EAAaR,EAAO,IAEvBe,OAAMC,IACHC,QAAQD,MAAM,4BAA6BA,EAAM,IARrCK,KAoBwD,EAAA7B,SAAC,0BAFxD4B,EAASK,UAQtC,C","sources":["Menu.jsx","member/Favorite.jsx"],"sourcesContent":["import React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport store from \"./member/Store\";\r\nimport {logout} from \"./member/Reducer\";\r\nimport menustyle from \"./css/menu.css\"\r\nfunction Memu() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const state = store.getState();\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n        navigate(\"/main\");\r\n    };\r\n    return(\r\n        <div className=\"menubar\">\r\n            {state.isLoggedIn ? (\r\n                <button className=\"login\" onClick={handleLogout}>로그아웃</button>\r\n            ) : (\r\n                <button className=\"login\" onClick={() => navigate(\"/member/login\")}>로그인</button>\r\n            )}\r\n\r\n            <ul>\r\n                <li onClick={() => navigate(\"/main\")}>홈</li>\r\n                <li onClick={() => navigate(\"/animal\")}>보호 중인 동물</li>\r\n                <li onClick={() => navigate(\"/recommend\")}>반려견 추천</li>\r\n                <li onClick={() => navigate(\"/board/list\")}>게시판</li>\r\n                <li onClick={() => navigate(\"/\")}>유기견 입양 과정</li>\r\n                <li className=\"dropdown\">\r\n                    <span>회원 정보</span>\r\n                    <div className=\"dropdown-content\">\r\n                        <Link to=\"/member/mypage\">정보 확인 및 수정</Link>\r\n                        <Link to=\"/member/mypage/mycart\">찜 목록</Link>\r\n                        <Link to=\"/member/mypage\">내가 작성한 글과 댓글</Link>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Memu;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Menu from \"../Menu\";\r\n\r\nfunction Favorite() {\r\n    const userData = useSelector(state => state.userData); // 사용자 데이터를 스토어에서 가져옴.\r\n    const userId = userData.mem_id;\r\n    const [favorites, setFavorites] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (userId) {\r\n            getFavorites(userId); // 사용자 아이디가 있을 때에만 찜 목록을 가져옴.\r\n        }\r\n    }, [userId]);\r\n\r\n    // 찜 목록 불러오기\r\n    const getFavorites = (userId) => {\r\n        axios.get(`/favorites/list?memId=${userId}`)\r\n            .then(response => {\r\n                setFavorites(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error fetching favorites: \", error);\r\n            });\r\n    };\r\n\r\n    // 찜 제거 함수\r\n    const removeFavorite = (desertionNo) => {\r\n        axios.delete(`/favorites/remove?memId=${userId}&desertionNo=${desertionNo}`)\r\n            .then(response => {\r\n                console.log(\"Favorite removed successfully\");\r\n                // 찜 제거 후 찜 목록 다시 불러오기\r\n                getFavorites(userId);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error removing favorite: \", error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Menu />\r\n            <h2>찜 목록</h2>\r\n            <ul>\r\n                {favorites.map(favorite => (\r\n                    <li key={favorite.id}>\r\n                        <span>{favorite.desertionNo}</span>\r\n                        <button onClick={() => removeFavorite(favorite.desertionNo)}>찜 제거</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Favorite;\r\n"],"names":["navigate","useNavigate","dispatch","useDispatch","state","store","getState","_jsxs","className","children","isLoggedIn","_jsx","onClick","handleLogout","logout","Link","to","userId","useSelector","userData","mem_id","favorites","setFavorites","useState","useEffect","getFavorites","axios","get","concat","then","response","data","catch","error","console","Menu","map","favorite","desertionNo","removeFavorite","delete","log","id"],"sourceRoot":""}