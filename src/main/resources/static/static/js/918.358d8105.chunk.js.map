{"version":3,"file":"static/js/918.358d8105.chunk.js","mappings":"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","sources":["Menu.jsx","member/Favorite_Result.jsx","member/Favorite.jsx","webpack://frontend/./src/css/recommend.css?6bff"],"sourcesContent":["import React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport store from \"./member/Store\";\r\nimport {logout} from \"./member/Reducer\";\r\nimport menustyle from \"./css/menu.css\"\r\nfunction Memu() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const state = store.getState();\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n        navigate(\"/main\");\r\n    };\r\n    return(\r\n        <div className=\"menubar\">\r\n            {state.isLoggedIn ? (\r\n                <button className=\"login\" onClick={handleLogout}>로그아웃</button>\r\n            ) : (\r\n                <button className=\"login\" onClick={() => navigate(\"/member/login\")}>로그인</button>\r\n            )}\r\n\r\n            <ul>\r\n                <li onClick={() => navigate(\"/main\")}>홈</li>\r\n                <li onClick={() => navigate(\"/animal\")}>보호 중인 동물</li>\r\n                <li onClick={() => navigate(\"/recommend\")}>반려견 추천</li>\r\n                <li onClick={() => navigate(\"/board/list\")}>게시판</li>\r\n                <li onClick={() => navigate(\"/\")}>유기견 입양 과정</li>\r\n                <li className=\"dropdown\">\r\n                    <span>회원 정보</span>\r\n                    <div className=\"dropdown-content\">\r\n                        <Link to=\"/member/mypage\">정보 확인 및 수정</Link>\r\n                        <Link to=\"/member/mypage/mycart\">찜 목록</Link>\r\n                        <Link to=\"/member/mypage\">내가 작성한 글과 댓글</Link>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Memu;","/*\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport store from \"../member/Store\";\r\nimport \"../css/recommend.css\"\r\n\r\nimport '../css/menu.css';\r\nimport '../css/result.css';\r\n\r\nconst Favorite_Result = ({ matches, loading, error, removeFavorite, getMembersByDesertionNo }) => {\r\n    const state = store.getState();\r\n    const userId = state.isLoggedIn ? state.userData.mem_id : null;\r\n\r\n    //const [matches, setMatches] = useState([]);\r\n    //const [loading, setLoading] = useState(true);\r\n    //const [error, setError] = useState(null);\r\n\r\n    const [animalInfos, setAnimalInfos] = useState({});\r\n    const [analysisResults, setAnalysisResults] = useState({});\r\n    const [fetchDataError, setFetchDataError] = useState(null);\r\n\r\n    // 매치된 반려동물 정보를 가져오는 useEffect\r\n    useEffect(() => {\r\n        const fetchData = async (desertionNo) => {\r\n            try {\r\n                const response = await axios.get(`/api/animal/${desertionNo}`);\r\n                setAnimalInfos(prevState => ({\r\n                    ...prevState,\r\n                    [desertionNo]: response.data\r\n                }));\r\n                await handleAnalysis(desertionNo, response.data.popfile);\r\n            } catch (error) {\r\n                console.error('Error fetching animal info:', error);\r\n                setFetchDataError('Error fetching animal info');\r\n            }\r\n        };\r\n\r\n        matches.forEach(match => {\r\n            if (!animalInfos[match.desertionNo]) {\r\n                fetchData(match.desertionNo);\r\n            }\r\n        });\r\n    }, [matches]);\r\n\r\n    const handleAnalysis = async (desertionNo, imageUrl) => {\r\n        try {\r\n            const response = await axios.get(`/api/animal/analyze?desertionNo=${desertionNo}&popfile=${imageUrl}`);\r\n            setAnalysisResults(prevState => ({\r\n                ...prevState,\r\n                [desertionNo]: response.data\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error analyzing image:', error);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    if (fetchDataError) {\r\n        return <div>{fetchDataError}</div>;\r\n    }\r\n\r\n    const formatDate = (dateStr) => {\r\n        if (!dateStr) return '날짜 정보 없음'; // dateStr이 정의되지 않은 경우 대체 문자열 반환\r\n        const year = dateStr.substring(0, 4);\r\n        const month = dateStr.substring(4, 6);\r\n        const day = dateStr.substring(6, 8);\r\n        return `${year}년 ${parseInt(month, 10)}월 ${parseInt(day, 10)}일`;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <main className=\"container\">\r\n                <div data-case=\"text79\" className=\"userEL15637124\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\" data-matrix-loop=\"true\" data-matrix-column=\"1\">\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 item\">\r\n                                <div className=\"cl_caption\" data-edit=\"true\" data-selector=\".cl_caption\">\r\n                                    <hr className=\"fr-hr\"\r\n                                        style={{borderBottom: '2px solid #d6d7d8', width: '35px', margin: '0 auto'}}\r\n                                        align=\"center\"/>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}><br/></span></span>\r\n                                    </div>\r\n                                    <div><span\r\n                                        style={{fontFamily: \"'Seoul Namsan'\", fontSize: '30px'}}>찜 목록</span>\r\n                                    </div>\r\n                                    <div><span className=\"fsize13\"><span style={{\r\n                                        color: 'rgb(138, 139, 142)',\r\n                                        fontFamily: \"'Nanum Barun Gothic'\"\r\n                                    }}>​</span></span></div>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}>(사진 위에 마우스를 올리면, 더 자세한 정보를 보실 수 있습니다.)<br/><br/></span></span>\r\n                                    </div>\r\n                                    <hr className=\"fr-hr\"\r\n                                        style={{borderBottom: '2px solid #d6d7d8', width: '35px', margin: '0 auto'}}\r\n                                        align=\"center\"/>\r\n                                    <div><br/></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {matches.length === 0 ? (\r\n                    <div>No matches found</div>\r\n                ) : (\r\n                    <div className=\"grid-container\">\r\n                        {matches.map((match, index) => (\r\n                            <div className=\"card\" key={match.desertionNo}>\r\n                                {animalInfos[match.desertionNo] && (\r\n                                    <div>\r\n                                        <img src={animalInfos[match.desertionNo].popfile} alt=\"Animal\"/>\r\n                                        <div className=\"analysis-results\">\r\n                                            <br/>\r\n                                            {/!* 확인용 <p>유기 번호: {animalInfos[match.desertionNo].desertionNo}</p>*!/}\r\n                                            <p>나이: {animalInfos[match.desertionNo].age}</p>\r\n                                            <p>무게: {animalInfos[match.desertionNo].weight}</p>\r\n                                            <p>공고 시작 날짜: {formatDate(animalInfos[match.desertionNo].noticeSdt)}</p>\r\n                                            <p>공고 종료 날짜: {formatDate(animalInfos[match.desertionNo].noticeEdt)}</p>\r\n                                            <p>성별: {animalInfos[match.desertionNo].sexCd}</p>\r\n                                            <p>중성화 여부: {animalInfos[match.desertionNo].neuterYn}</p>\r\n                                            <p>특징: {animalInfos[match.desertionNo].specialMark}</p>\r\n                                            <p>보호소 이름: {animalInfos[match.desertionNo].careNm}</p>\r\n                                            <button onClick={() => removeFavorite(match.desertionNo)}>찜 제거</button>\r\n                                            <button onClick={() => getMembersByDesertionNo(match.desertionNo)}>찜한 사용자 보기</button>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Favorite_Result;\r\n*/\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport store from \"../member/Store\";\r\nimport Menu from \"../Menu\";\r\nimport \"../css/recommend.css\"\r\n\r\nimport '../css/menu.css';\r\nimport '../css/result.css';\r\n\r\nconst Favorite_Result = ({ matches, loading, error, title, removeFavorite, getMembersByDesertionNo }) => {\r\n    const state = store.getState();\r\n    const userId = state.isLoggedIn ? state.userData.mem_id : null;\r\n\r\n    //const [matches, setMatches] = useState([]);\r\n    //const [loading, setLoading] = useState(true);\r\n    //const [error, setError] = useState(null);\r\n    console.log(matches);\r\n\r\n    const [animalInfos, setAnimalInfos] = useState({});\r\n    const [analysisResults, setAnalysisResults] = useState({});\r\n    const [fetchDataError, setFetchDataError] = useState(null);\r\n\r\n    // 매치된 반려동물 정보를 가져오는 useEffect\r\n    useEffect(() => {\r\n        const fetchData = async (desertionNo) => {\r\n            try {\r\n                const response = await axios.get(`/api/animal/${desertionNo}`);\r\n                setAnimalInfos(prevState => ({\r\n                    ...prevState,\r\n                    [desertionNo]: response.data\r\n                }));\r\n                await handleAnalysis(desertionNo, response.data.popfile);\r\n            } catch (error) {\r\n                console.error('Error fetching animal info:', error);\r\n                setFetchDataError('Error fetching animal info');\r\n            }\r\n        };\r\n\r\n        matches.forEach(desertionNo => {\r\n            if (!animalInfos[desertionNo]) {\r\n                fetchData(desertionNo);\r\n            }\r\n        });\r\n    }, [matches]);\r\n\r\n    const handleAnalysis = async (desertionNo, imageUrl) => {\r\n        try {\r\n            const response = await axios.get(`/api/animal/analyze?desertionNo=${desertionNo}&popfile=${imageUrl}`);\r\n            setAnalysisResults(prevState => ({\r\n                ...prevState,\r\n                [desertionNo]: response.data\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error analyzing image:', error);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    if (fetchDataError) {\r\n        return <div>{fetchDataError}</div>;\r\n    }\r\n\r\n    const formatDate = (dateStr) => {\r\n        if (!dateStr) return '날짜 정보 없음'; // dateStr이 정의되지 않은 경우 대체 문자열 반환\r\n        const year = dateStr.substring(0, 4);\r\n        const month = dateStr.substring(4, 6);\r\n        const day = dateStr.substring(6, 8);\r\n        return `${year}년 ${parseInt(month, 10)}월 ${parseInt(day, 10)}일`;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <main className=\"container\">\r\n                <div data-case=\"text79\" className=\"userEL15637124\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\" data-matrix-loop=\"true\" data-matrix-column=\"1\">\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 item\">\r\n                                <div className=\"cl_caption\" data-edit=\"true\" data-selector=\".cl_caption\">\r\n                                    <hr className=\"fr-hr\"\r\n                                        style={{borderBottom: '2px solid #d6d7d8', width: '35px', margin: '0 auto'}}\r\n                                        align=\"center\"/>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}><br/></span></span>\r\n                                    </div>\r\n                                    <div><span\r\n                                        style={{fontFamily: \"'Seoul Namsan'\", fontSize: '30px'}}>유기견 {title} 추천 결과</span>\r\n                                    </div>\r\n                                    <div><span className=\"fsize13\"><span style={{\r\n                                        color: 'rgb(138, 139, 142)',\r\n                                        fontFamily: \"'Nanum Barun Gothic'\"\r\n                                    }}>​</span></span></div>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}>사용자의 취향에 맞는 유기견 5마리입니다.</span></span>\r\n                                    </div>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}>(사진 위에 마우스를 올리면, 더 자세한 정보를 보실 수 있습니다.)<br/><br/></span></span>\r\n                                    </div>\r\n                                    <hr className=\"fr-hr\"\r\n                                        style={{borderBottom: '2px solid #d6d7d8', width: '35px', margin: '0 auto'}}\r\n                                        align=\"center\"/>\r\n                                    <div><br/></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {matches.length === 0 ? (\r\n                    <div>No matches found</div>\r\n                ) : (\r\n                    <div className=\"grid-container\">\r\n                        {matches.map((desertionNo) => (\r\n                            <div className=\"card\" key={desertionNo}>\r\n                                {animalInfos && (\r\n                                    <div>\r\n                                        <img src={animalInfos[desertionNo]?.popfile} alt=\"Animal\"/>\r\n                                        {analysisResults[desertionNo] && (\r\n                                            <div>\r\n                                                <hr/>\r\n                                                <p>[ 품종 비율 1순위 ]<br/>{analysisResults[desertionNo].className1}<br/>({analysisResults[desertionNo].probability1}%)</p>\r\n                                                <p>[ 품종 비율 2순위 ]<br/>{analysisResults[desertionNo].className2}<br/>({analysisResults[desertionNo].probability2}%)</p>\r\n                                                <p>[ 품종 비율 3순위 ]<br/>{analysisResults[desertionNo].className3}<br/>({analysisResults[desertionNo].probability3}%)</p>\r\n                                            </div>\r\n                                        )}\r\n                                        <div className=\"analysis-results\">\r\n                                            <br/>\r\n                                            {/* 확인용 <p>유기 번호: {animalInfos[match.desertionNo].desertionNo}</p>*/}\r\n                                            <p>발견 날짜: {animalInfos[desertionNo]?.happenDt}</p>\r\n                                            <p>발견 장소: {animalInfos[desertionNo]?.happenPlace}</p>\r\n                                            <p>나이: {animalInfos[desertionNo]?.age}</p>\r\n                                            <p>무게: {animalInfos[desertionNo]?.weight}</p>\r\n                                            <p>공고 시작 날짜: {animalInfos[desertionNo]?.noticeSdt}</p>\r\n                                            <p>공고 종료 날짜: {animalInfos[desertionNo]?.noticeEdt}</p>\r\n                                            <p>성별: {animalInfos[desertionNo]?.sexCd}</p>\r\n                                            <p>중성화 여부: {animalInfos[desertionNo]?.neuterYn}</p>\r\n                                            <button onClick={() => removeFavorite(animalInfos[desertionNo])}>찜 제거</button>\r\n                                            <button onClick={() => getMembersByDesertionNo(animalInfos.desertionNo)}>찜한 사용자 보기</button>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Favorite_Result;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Menu from \"../Menu\";\r\n\r\nimport '../css/menu.css';\r\nimport '../css/result.css';\r\nimport '../css/member.css';\r\nimport Favorite_Result from \"./Favorite_Result\";\r\n\r\nfunction Favorite() {\r\n    const userData = useSelector(state => state.userData); // 사용자 데이터를 스토어에서 가져옴.\r\n    const userId = userData ? userData.mem_id : '';\r\n    const [favorites, setFavorites] = useState([]);\r\n    const [members, setMembers] = useState([]);\r\n    const [selectedDesertionNo, setSelectedDesertionNo] = useState('');\r\n    const [userFavorites, setUserFavorites] = useState({});\r\n\r\n    const [matches, setMatches] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        if (userId) {\r\n            getFavorites(userId); // 사용자 아이디가 있을 때에만 찜 목록을 가져옴.\r\n        }\r\n    }, [userId]);\r\n\r\n    useEffect(() => {\r\n        const fetchMatches = async () => {\r\n            try {\r\n                const response = await axios.get(`/favorites/list?memId=${userId}`);\r\n                setMatches(response.data);\r\n            } catch (err) {\r\n                setError('Failed to fetch matches');\r\n                console.error(err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        if (userId) {\r\n            fetchMatches();\r\n        }\r\n    }, [userId]);\r\n\r\n    // 찜 목록 불러오기\r\n    const getFavorites = (userId) => {\r\n        axios.get(`/favorites/list?memId=${userId}`)\r\n            .then(response => {\r\n                setFavorites(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error fetching favorites: \", error);\r\n            });\r\n    };\r\n\r\n    // 특정 고유번호를 찜 한 사용자 목록 불러오기\r\n    const getMembersDesertionNo = (desertionNo) => {\r\n        axios.get(`/favorites/members/${desertionNo}`)\r\n            .then(response => {\r\n                setMembers(response.data);\r\n                setSelectedDesertionNo(desertionNo);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error fetching members: \", error);\r\n            });\r\n    };\r\n\r\n    // 특정 사용자의 찜 목록 불러오기\r\n    const getMemberFavorites = (memId) => {\r\n        axios.get(`/favorites/list?memId=${memId}`)\r\n            .then(response => {\r\n                setUserFavorites(prevState => ({\r\n                    ...prevState,\r\n                    [memId]: response.data\r\n                }));\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error fetching member's favorites: \", error);\r\n            });\r\n    };\r\n\r\n    // 찜 제거 함수\r\n    const removeFavorite = (desertionNo) => {\r\n        axios.delete(`/favorites/remove?memId=${userId}&desertionNo=${desertionNo}`)\r\n            .then(response => {\r\n                console.log(\"Favorite removed successfully\");\r\n                // 찜 제거 후 찜 목록 다시 불러오기\r\n                getFavorites(userId);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error removing favorite: \", error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <Menu/>\r\n            </header>\r\n            <div>\r\n                {favorites.map(favorite => (\r\n                    <div key={favorite.id}>\r\n                        <Favorite_Result matches={matches} loading={loading} error={error}\r\n                                         removeFavorite={removeFavorite} getMembersDesertionNo={getMembersDesertionNo}/>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {selectedDesertionNo && (\r\n                <div>\r\n                    <h3>찜한 다른 사용자 목록</h3>\r\n                    <div>\r\n                        {members.map(member => (\r\n                            <div key={member}>\r\n                                <div>\r\n                                    <span>{member}</span>\r\n                                    <button className=\"signup custom-button\" onClick={() => getMemberFavorites(member)}>\r\n                                        이 사용자의 찜 목록 보기\r\n                                    </button>\r\n                                </div>\r\n                                {userFavorites[member] && (\r\n                                    <div>\r\n                                        {userFavorites[member].map(fav => (\r\n                                            <div key={fav.id}><Favorite_Result matches={matches} loading={loading} error={error}/></div>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                                {userFavorites[member] && userFavorites[member].length === 0 && (\r\n                                    <div>찜 목록이 없습니다.</div>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Favorite;\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["navigate","useNavigate","dispatch","useDispatch","state","store","getState","_jsxs","className","children","isLoggedIn","_jsx","onClick","handleLogout","logout","Link","to","_ref","matches","loading","error","title","removeFavorite","getMembersByDesertionNo","userData","mem_id","console","log","animalInfos","setAnimalInfos","useState","analysisResults","setAnalysisResults","fetchDataError","setFetchDataError","useEffect","forEach","desertionNo","async","response","axios","get","concat","prevState","data","handleAnalysis","popfile","fetchData","imageUrl","style","borderBottom","width","margin","align","color","fontFamily","fontSize","length","map","_animalInfos$desertio","_animalInfos$desertio2","_animalInfos$desertio3","_animalInfos$desertio4","_animalInfos$desertio5","_animalInfos$desertio6","_animalInfos$desertio7","_animalInfos$desertio8","_animalInfos$desertio9","src","alt","className1","probability1","className2","probability2","className3","probability3","happenDt","happenPlace","age","weight","noticeSdt","noticeEdt","sexCd","neuterYn","useSelector","userId","favorites","setFavorites","members","setMembers","selectedDesertionNo","setSelectedDesertionNo","userFavorites","setUserFavorites","setMatches","setLoading","setError","getFavorites","err","fetchMatches","then","catch","getMembersDesertionNo","delete","Menu","favorite","Favorite_Result","id","member","getMemberFavorites","memId","fav"],"sourceRoot":""}