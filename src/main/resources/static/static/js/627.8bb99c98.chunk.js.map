{"version":3,"file":"static/js/627.8bb99c98.chunk.js","mappings":"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","sources":["animal/AnimalInfo.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AnimalInfo = () => {\r\n    const [animalInfos, setAnimalInfos] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [analysisloading, setAnalysisloading] = useState(false);\r\n\r\n    const [error, setError] = useState(null);\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [kind, setKind] = useState('');\r\n    const [uprCd, setUprCd] = useState('');\r\n    const [orgCd, setOrgCd] = useState('');\r\n\r\n    //const [desertionNo, setDesertionNo] = useState('');\r\n    //const [imageUrl, setImageUrl] = useState('');\r\n    const [analysisResults, setAnalysisResults] = useState([]);\r\n\r\n    // 이전 상태를 가져와서 새로운 값을 추가하는 함수\r\n    const addAnalysisResult = (newResult) => {\r\n        setAnalysisResults(prevAnalysisResults => [...prevAnalysisResults, newResult]);\r\n    }\r\n\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const response = await axios.get(`/api/animal/info?startDate=${startDate}&endDate=${endDate}&kind=${kind}&uprCd=${uprCd}&orgCd=${orgCd}`);\r\n            setAnimalInfos(response.data);\r\n            for (const animalInfo of response.data) {\r\n                await handleAnalysis(animalInfo.desertionNo, animalInfo.popfile);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching animal info:', error);\r\n            setError(error);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n\r\n    const handleAnalysis = async (desertionNo, imageUrl) => {\r\n        try {\r\n            setAnalysisloading(true);\r\n            console.log(desertionNo, true);\r\n            console.log(desertionNo, imageUrl);\r\n            const response = await axios.get(`/api/animal/analyze?desertionNo=${desertionNo}&popfile=${imageUrl}`);\r\n            // 새로운 값을 analysisResults에 추가\r\n            addAnalysisResult(response.data);\r\n            console.log(response.data);\r\n            setError(null);\r\n        } catch (error) {\r\n            console.error('Error analyzing image:', error);\r\n            setError('An error occurred while analyzing the image.');\r\n\r\n            addAnalysisResult('error');\r\n        }\r\n        setAnalysisloading(false);\r\n        console.log(desertionNo, false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {loading && <div>Loading...</div>}\r\n            {error && <div>Error: {error.message}</div>}\r\n            <div>\r\n                <label>Start Date:</label>\r\n                <input type=\"text\" value={startDate} onChange={(e) => setStartDate(e.target.value)}/>\r\n            </div>\r\n            <div>\r\n                <label>End Date:</label>\r\n                <input type=\"text\" value={endDate} onChange={(e) => setEndDate(e.target.value)}/>\r\n            </div>\r\n            <div>\r\n                <label>Kind:</label>\r\n                <input type=\"text\" value={kind} onChange={(e) => setKind(e.target.value)}/>\r\n            </div>\r\n            <div>\r\n                <label>UprCd:</label>\r\n                <input type=\"text\" value={uprCd} onChange={(e) => setUprCd(e.target.value)}/>\r\n            </div>\r\n            <div>\r\n                <label>OrgCd:</label>\r\n                <input type=\"text\" value={orgCd} onChange={(e) => setOrgCd(e.target.value)}/>\r\n            </div>\r\n            <button onClick={fetchData}>Fetch Animal Info</button>\r\n            {animalInfos.length === 0 && !loading && !error && <div>No data available</div>}\r\n            <ul>\r\n                {animalInfos.map((animalInfo, index) => (\r\n                    <li key={index}>\r\n                        <hr/>\r\n                        <p>Desertion No: {animalInfo.desertionNo}</p>\r\n                        <p>File Name: <img src={animalInfo.filename} alt=\"Animal\"/></p>\r\n                        <p>Happen Date: {animalInfo.happenDt}</p>\r\n                        <p>Happen Place: {animalInfo.happenPlace}</p>\r\n                        <p>KindCd: {animalInfo.kindCd}</p>\r\n                        <p>ColorCd: {animalInfo.colorCd}</p>\r\n                        <p>Age: {animalInfo.age}</p>\r\n                        <p>Weight: {animalInfo.weight}</p>\r\n                        <p>Notice No: {animalInfo.noticeNo}</p>\r\n                        <p>Notice Start Date: {animalInfo.noticeSdt}</p>\r\n                        <p>Notice End Date: {animalInfo.noticeEdt}</p>\r\n                        <p>Popfile: <img src={animalInfo.popfile} alt=\"Animal\"/></p>\r\n                        <p>Popfile 경로: {animalInfo.popfile}</p>\r\n                        <p>Process State: {animalInfo.processState}</p>\r\n                        <p>SexCd: {animalInfo.sexCd}</p>\r\n                        <p>NeuterYn: {animalInfo.neuterYn}</p>\r\n                        <p>Special Mark: {animalInfo.specialMark}</p>\r\n                        <p>Care Name: {animalInfo.careNm}</p>\r\n                        <p>Care Tel: {animalInfo.careTel}</p>\r\n                        <p>Care Address: {animalInfo.careAddr}</p>\r\n                        <p>Org Name: {animalInfo.orgNm}</p>\r\n                        <p>Charge Name: {animalInfo.chargeNm}</p>\r\n                        <p>Office Tel: {animalInfo.officetel}</p>\r\n                        <hr/>\r\n                        {analysisResults.length > index && (\r\n                            <div>\r\n                                <p>[1] ClassName: {analysisResults[index].className1} /\r\n                                    Probability: {analysisResults[index].probability1}</p>\r\n                                <p>[2] ClassName: {analysisResults[index].className2} /\r\n                                    Probability: {analysisResults[index].probability2}</p>\r\n                                <p>[3] ClassName: {analysisResults[index].className3} /\r\n                                    Probability: {analysisResults[index].probability3}</p>\r\n                            </div>\r\n                        )}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnimalInfo;\r\n"],"names":["AnimalInfo","animalInfos","setAnimalInfos","useState","loading","setLoading","analysisloading","setAnalysisloading","error","setError","startDate","setStartDate","endDate","setEndDate","kind","setKind","uprCd","setUprCd","orgCd","setOrgCd","analysisResults","setAnalysisResults","addAnalysisResult","newResult","prevAnalysisResults","handleAnalysis","async","desertionNo","imageUrl","console","log","response","axios","get","concat","data","_jsxs","children","_jsx","message","type","value","onChange","e","target","onClick","animalInfo","popfile","length","map","index","src","filename","alt","happenDt","happenPlace","kindCd","colorCd","age","weight","noticeNo","noticeSdt","noticeEdt","processState","sexCd","neuterYn","specialMark","careNm","careTel","careAddr","orgNm","chargeNm","officetel","className1","probability1","className2","probability2","className3","probability3"],"sourceRoot":""}