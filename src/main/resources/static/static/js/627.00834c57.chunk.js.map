{"version":3,"file":"static/js/627.00834c57.chunk.js","mappings":"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","sources":["Menu.jsx","animal/AnimalInfo.jsx"],"sourcesContent":["import React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport store from \"./member/Store\";\r\nimport {logout} from \"./member/Reducer\";\r\n\r\nfunction Menu() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const state = store.getState();\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n        navigate(\"/main\");\r\n    };\r\n    return(\r\n        <div className=\"menubar\">\r\n            {state.isLoggedIn ? (\r\n                <button className=\"login\" onClick={handleLogout}>로그아웃</button>\r\n            ) : (\r\n                <button className=\"login\" onClick={() => navigate(\"/member/login\")}>로그인</button>\r\n            )}\r\n\r\n            <ul>\r\n                <li onClick={() => navigate(\"/main\")}>홈</li>\r\n                <li onClick={() => navigate(\"/animal\")}>보호 중인 동물</li>\r\n                <li onClick={() => navigate(\"/recommend\")}>반려견 추천</li>\r\n                <li onClick={() => navigate(\"/board/list\")}>게시판</li>\r\n                <li onClick={() => navigate(\"/\")}>유기견 입양 과정</li>\r\n                <li className=\"dropdown\">\r\n                    <span>회원 정보</span>\r\n                    <div className=\"dropdown-content\">\r\n                        <Link to=\"/member/mypage\">정보 확인 및 수정</Link>\r\n                        <Link to=\"/member/mypage\">찜 목록</Link>\r\n                        <Link to=\"/member/mypage\">내가 작성한 글과 댓글</Link>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Menu from \"../Menu\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst AnimalInfo = () => {\r\n    const [animalInfos, setAnimalInfos] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [analysisloading, setAnalysisloading] = useState(false);\r\n\r\n    const [error, setError] = useState(null);\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [kind, setKind] = useState('');\r\n    const [uprCd, setUprCd] = useState('');\r\n    const [orgCd, setOrgCd] = useState('');\r\n\r\n    //const [desertionNo, setDesertionNo] = useState('');\r\n    //const [imageUrl, setImageUrl] = useState('');\r\n    const [analysisResults, setAnalysisResults] = useState([]);\r\n\r\n    // 이전 상태를 가져와서 새로운 값을 추가하는 함수\r\n    const addAnalysisResult = (newResult) => {\r\n        setAnalysisResults(prevAnalysisResults => [...prevAnalysisResults, newResult]);\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const response = await axios.get(`/api/animal/info?startDate=${startDate}&endDate=${endDate}&kind=${kind}&uprCd=${uprCd}&orgCd=${orgCd}`);\r\n            setAnimalInfos(response.data);\r\n            for (const animalInfo of response.data) {\r\n                await handleAnalysis(animalInfo.desertionNo, animalInfo.popfile);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching animal info:', error);\r\n            setError(error);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n\r\n    const handleAnalysis = async (desertionNo, imageUrl) => {\r\n        try {\r\n            setAnalysisloading(true);\r\n            console.log(desertionNo, true);\r\n            console.log(desertionNo, imageUrl);\r\n            const response = await axios.get(`/api/animal/analyze?desertionNo=${desertionNo}&popfile=${imageUrl}`);\r\n            // 새로운 값을 analysisResults에 추가\r\n            addAnalysisResult(response.data);\r\n            console.log(response.data);\r\n            setError(null);\r\n        } catch (error) {\r\n            console.error('Error analyzing image:', error);\r\n            setError('An error occurred while analyzing the image.');\r\n\r\n            addAnalysisResult('error');\r\n        }\r\n        setAnalysisloading(false);\r\n        console.log(desertionNo, false);\r\n    };\r\n\r\n    const userData = useSelector(state => state.userData); // 사용자 데이터를 스토어에서 가져옵니다.\r\n    const userId = userData.mem_id; // 사용자 아이디를 추출합니다.\r\n    const currentTime = new Date().toISOString();\r\n    const { idx } = useParams();\r\n\r\n    const addFavorite = (desertionNo) => {\r\n        axios.post(`/favorites/add?memId=${userId}&desertionNo=${desertionNo}`, {\r\n            mem_id: userId,\r\n            desertionNo: desertionNo,\r\n            created_at: currentTime,\r\n        })\r\n            .then(response => {\r\n                console.log(\"Favorite added successfully\");\r\n                // 찜 추가 후 찜 목록 다시 불러오기\r\n                //getFavorites(userId);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error adding favorite: \", error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Menu />\r\n            {loading && <div>Loading...</div>}\r\n            {error && <div>Error: {error.message}</div>}\r\n            <div>\r\n                <label>Start Date:</label>\r\n                <input type=\"text\" value={startDate} onChange={(e) => setStartDate(e.target.value)}/>\r\n            </div>\r\n            <div>\r\n                <label>End Date:</label>\r\n                <input type=\"text\" value={endDate} onChange={(e) => setEndDate(e.target.value)}/>\r\n            </div>\r\n            <div>\r\n                <label>Kind:</label>\r\n                <input type=\"text\" value={kind} onChange={(e) => setKind(e.target.value)}/>\r\n            </div>\r\n            <div>\r\n                <label>UprCd:</label>\r\n                <input type=\"text\" value={uprCd} onChange={(e) => setUprCd(e.target.value)}/>\r\n            </div>\r\n            <div>\r\n                <label>OrgCd:</label>\r\n                <input type=\"text\" value={orgCd} onChange={(e) => setOrgCd(e.target.value)}/>\r\n            </div>\r\n            <button onClick={fetchData}>Fetch Animal Info</button>\r\n            {animalInfos.length === 0 && !loading && !error && <div>No data available</div>}\r\n            <ul>\r\n                {animalInfos.map((animalInfo, index) => (\r\n                    <li key={index}>\r\n                        <hr/>\r\n                        <p>Desertion No: {animalInfo.desertionNo}</p>\r\n                        <p>File Name: <img src={animalInfo.filename} alt=\"Animal\"/></p>\r\n                        <p>Happen Date: {animalInfo.happenDt}</p>\r\n                        <p>Happen Place: {animalInfo.happenPlace}</p>\r\n                        <p>KindCd: {animalInfo.kindCd}</p>\r\n                        <p>ColorCd: {animalInfo.colorCd}</p>\r\n                        <p>Age: {animalInfo.age}</p>\r\n                        <p>Weight: {animalInfo.weight}</p>\r\n                        <p>Notice No: {animalInfo.noticeNo}</p>\r\n                        <p>Notice Start Date: {animalInfo.noticeSdt}</p>\r\n                        <p>Notice End Date: {animalInfo.noticeEdt}</p>\r\n                        <p>Popfile: <img src={animalInfo.popfile} alt=\"Animal\"/></p>\r\n                        <p>Popfile 경로: {animalInfo.popfile}</p>\r\n                        <p>Process State: {animalInfo.processState}</p>\r\n                        <p>SexCd: {animalInfo.sexCd}</p>\r\n                        <p>NeuterYn: {animalInfo.neuterYn}</p>\r\n                        <p>Special Mark: {animalInfo.specialMark}</p>\r\n                        <p>Care Name: {animalInfo.careNm}</p>\r\n                        <p>Care Tel: {animalInfo.careTel}</p>\r\n                        <p>Care Address: {animalInfo.careAddr}</p>\r\n                        <p>Org Name: {animalInfo.orgNm}</p>\r\n                        <p>Charge Name: {animalInfo.chargeNm}</p>\r\n                        <p>Office Tel: {animalInfo.officetel}</p>\r\n                        <button onClick={() => addFavorite(animalInfo.desertionNo)}>찜 추가</button>\r\n                        <hr/>\r\n                        {analysisResults.map((analysisresult, index) => (\r\n                            <div>\r\n                                {analysisresult.desertionNo === animalInfo.desertionNo && (\r\n                                    <div>\r\n                                        <p>[1] ClassName: {analysisresult.className1} /\r\n                                            Probability: {analysisresult.probability1}</p>\r\n                                        <p>[2] ClassName: {analysisresult.className2} /\r\n                                            Probability: {analysisresult.probability2}</p>\r\n                                        <p>[3] ClassName: {analysisresult.className3} /\r\n                                            Probability: {analysisresult.probability3}</p>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnimalInfo;\r\n\r\n/*\r\n\r\n                        <div>\r\n                            <button onClick={() => addFavorite(desertionNo)}>찜 추가</button>\r\n                        </div>\r\n\r\n */"],"names":["navigate","useNavigate","dispatch","useDispatch","state","store","getState","_jsxs","className","children","isLoggedIn","_jsx","onClick","handleLogout","logout","Link","to","AnimalInfo","animalInfos","setAnimalInfos","useState","loading","setLoading","analysisloading","setAnalysisloading","error","setError","startDate","setStartDate","endDate","setEndDate","kind","setKind","uprCd","setUprCd","orgCd","setOrgCd","analysisResults","setAnalysisResults","addAnalysisResult","newResult","prevAnalysisResults","handleAnalysis","async","desertionNo","imageUrl","console","log","response","axios","get","concat","data","userId","useSelector","userData","mem_id","currentTime","Date","toISOString","idx","useParams","Menu","message","type","value","onChange","e","target","animalInfo","popfile","length","map","index","src","filename","alt","happenDt","happenPlace","kindCd","colorCd","age","weight","noticeNo","noticeSdt","noticeEdt","processState","sexCd","neuterYn","specialMark","careNm","careTel","careAddr","orgNm","chargeNm","officetel","addFavorite","post","created_at","then","catch","analysisresult","className1","probability1","className2","probability2","className3","probability3"],"sourceRoot":""}