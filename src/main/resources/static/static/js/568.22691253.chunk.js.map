{"version":3,"file":"static/js/568.22691253.chunk.js","mappings":"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","sources":["Menu.jsx","../node_modules/@mui/material/NativeSelect/NativeSelect.js","member/MyEdit.jsx","webpack://frontend/./src/css/recommend.css?6bff"],"sourcesContent":["import React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport store from \"./member/Store\";\r\nimport {logout} from \"./member/Reducer\";\r\nimport menustyle from \"./css/menu.css\"\r\n\r\nimport logo from \"./logo/simple.png\"; //logo\r\nimport Button from '@mui/material/Button';\r\nfunction Memu() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const state = store.getState();\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n        navigate(\"/main\");\r\n    };\r\n    return(\r\n        <div className=\"menubar\">\r\n            {state.isLoggedIn ? (\r\n                <button className=\"login\" onClick={handleLogout}>로그아웃</button>\r\n            ) : (\r\n                <button className=\"login\" onClick={() => navigate(\"/member/login\")}>로그인</button>\r\n            )}\r\n\r\n            <ul>\r\n                {/* <li onClick={() => navigate(\"/main\")}>홈</li> */}\r\n                <li onClick={() => navigate(\"/main\")}>\r\n                    <img src={logo} style={{width: '150px', height: 'auto', marginTop: '-20px', marginLeft: '10px'}}/>\r\n                </li>\r\n                <li onClick={() => navigate(\"/animal\")}>보호 중인 동물</li>\r\n                <li onClick={() => navigate(\"/recommend\")}>반려견 추천</li>\r\n                <li onClick={() => navigate(\"/board/list\")}>자유게시판</li>\r\n                <li className=\"dropdown\">\r\n                    <span>회원 정보</span>\r\n                    <div className=\"dropdown-content\">\r\n                        <Link to=\"/member/mypage\">정보 확인 및 수정</Link>\r\n                        <Link to=\"/member/mypage/mycart\">찜 목록</Link>\r\n                        <Link to=\"/member/mypage/mycontent\">내가 작성한 글과 댓글</Link>\r\n                        <Link to=\"/member/mypage/imgUpload\">이미지 업로드</Link>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Memu;","'use client';\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport NativeSelectInput from \"./NativeSelectInput.js\";\nimport formControlState from \"../FormControl/formControlState.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport ArrowDropDownIcon from \"../internal/svg-icons/ArrowDropDown.js\";\nimport Input from \"../Input/index.js\";\nimport useThemeProps from \"../styles/useThemeProps.js\";\nimport { getNativeSelectUtilityClasses } from \"./nativeSelectClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getNativeSelectUtilityClasses, classes);\n};\nconst defaultInput = /*#__PURE__*/_jsx(Input, {});\n/**\n * An alternative to `<Select native />` with a much smaller bundle size footprint.\n */\nconst NativeSelect = /*#__PURE__*/React.forwardRef(function NativeSelect(inProps, ref) {\n  const props = useThemeProps({\n    name: 'MuiNativeSelect',\n    props: inProps\n  });\n  const {\n    className,\n    children,\n    classes: classesProp = {},\n    IconComponent = ArrowDropDownIcon,\n    input = defaultInput,\n    inputProps,\n    variant,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['variant']\n  });\n  const ownerState = {\n    ...props,\n    classes: classesProp\n  };\n  const classes = useUtilityClasses(ownerState);\n  const {\n    root,\n    ...otherClasses\n  } = classesProp;\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(input, {\n      // Most of the logic is implemented in `NativeSelectInput`.\n      // The `Select` component is a simple API wrapper to expose something better to play with.\n      inputComponent: NativeSelectInput,\n      inputProps: {\n        children,\n        classes: otherClasses,\n        IconComponent,\n        variant: fcs.variant,\n        type: undefined,\n        // We render a select. We can ignore the type provided by the `Input`.\n        ...inputProps,\n        ...(input ? input.props.inputProps : {})\n      },\n      ref,\n      ...other,\n      className: clsx(classes.root, input.props.className, className)\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? NativeSelect.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<option>` elements.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * @default {}\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon that displays the arrow.\n   * @default ArrowDropDownIcon\n   */\n  IconComponent: PropTypes.elementType,\n  /**\n   * An `Input` element; does not have to be a material-ui specific `Input`.\n   * @default <Input />\n   */\n  input: PropTypes.element,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attributes) applied to the `select` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {React.ChangeEvent<HTMLSelectElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The `input` value. The DOM API casts this to a string.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nNativeSelect.muiName = 'Select';\nexport default NativeSelect;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport store from \"./Store\";\r\nimport Menu from \"../Menu\";\r\nimport \"../css/recommend.css\"\r\nimport \"../css/member.css\"\r\nimport TextField from \"@mui/material/TextField\";\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\n\r\nimport NativeSelect from '@mui/material/NativeSelect';\r\nimport Button from '@mui/material/Button';\r\n\r\nfunction MyEdit() {\r\n    const [error, setError] = useState(null);\r\n    const [newMemberInfo, setNewMemberInfo] = useState({\r\n        mem_id: '',\r\n        mem_pw: '',\r\n        nickname: '',\r\n        email: '',\r\n        region: '',\r\n        county_district: '',\r\n        reg_date: '',\r\n        edit_date: ''\r\n    });\r\n    const [updateMessage, setUpdateMessage] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const state = store.getState();\r\n    const userId = state.isLoggedIn ? state.userData.mem_id : null;\r\n\r\n    const [select_region, setRegion] = useState('');\r\n    const [country_district, setCountry_district] = useState('');\r\n    const [regionList, setRegionList] = useState([]);\r\n    const [districtList, setDistrictList] = useState([]);\r\n    const [selectedRegion, setSelectedRegion] = useState('');\r\n\r\n    // 입력받은 수정 정보 처리\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        // Update the new member info state based on input changes\r\n        setNewMemberInfo(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n\r\n        console.log(newMemberInfo);\r\n    };\r\n\r\n    // 회원 정보 가져오기\r\n    const fetchMemberInfo = async () => {\r\n        try {\r\n            const response = await axios.get(`/member/MyPage?mem_id=${userId}`);\r\n            setNewMemberInfo(response.data);\r\n            console.log(userId);\r\n            setError(null);\r\n        } catch (error) {\r\n            setError('사용자 정보를 가져오는 중에 오류가 발생했습니다.');\r\n        }\r\n    };\r\n\r\n    // 컴포넌트가 마운트될 때 회원 정보 가져오기\r\n    useEffect(() => {\r\n        fetchMemberInfo();\r\n        // 페이지가 처음 로드될 때 지역 목록을 가져오는 함수\r\n        const fetchRegionList = async () => {\r\n            try {\r\n                const response = await axios.get('/member/SignUp'); // 백엔드 SignUp 엔드포인트 호출\r\n                setRegionList(response.data); // 가져온 데이터를 상태에 설정\r\n            } catch (error) {\r\n                console.error('Error fetching region list:', error);\r\n            }\r\n        };\r\n\r\n        fetchRegionList(); // 함수 호출\r\n    }, []); // 빈 배열을 전달하여 페이지가 처음 로드될 때만 실행되도록 설정\r\n\r\n    const handleRegionChange = async (event) => {\r\n        const selectedRegion = event.target.value; // 선택된 지역 이름 가져오기\r\n        setSelectedRegion(selectedRegion); // 선택된 지역을 상태에 설정\r\n        setRegion(selectedRegion);\r\n        try {\r\n            const response = await axios.get(`/member/SearchDistrict?reg_name=${selectedRegion}`); // 백엔드 searchDistrict 엔드포인트 호출\r\n            setDistrictList(response.data); // 가져온 데이터를 상태에 설정\r\n        } catch (error) {\r\n            console.error('Error fetching district list:', error);\r\n        }\r\n    };\r\n    const handleDistrictChange = async (event) => {\r\n        const selectedDistrict = event.target.value; // 선택된 지역 이름 가져오기\r\n        setCountry_district(selectedDistrict);\r\n    };\r\n\r\n    // 회원 정보 수정\r\n    const handleUpdateMember = async () => {\r\n        console.log(newMemberInfo);\r\n        try {\r\n            const response = await axios.put('/member/MyPage/Update', newMemberInfo);\r\n            alert('회원정보 수정 성공!');\r\n        } catch (error) {\r\n            console.\r\n            error('Error updating member info:', error);\r\n            alert(error);\r\n            setUpdateMessage('회원정보 수정 실패');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* <header>\r\n                <Menu />\r\n            </header> */}\r\n            <main>\r\n                {/*\r\n                <div data-case=\"text79\" className=\"userEL15637124\">\r\n                    <div className=\"container_result\">\r\n                        <div className=\"row\" data-matrix-loop=\"true\" data-matrix-column=\"1\">\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 item\">\r\n                                <div className=\"cl_caption\" data-edit=\"true\" data-selector=\".cl_caption\">\r\n                                    <hr className=\"fr-hr\"\r\n                                        style={{borderBottom: '2px solid #d6d7d8', width: '35px', margin: '0 auto'}}\r\n                                        align=\"center\"/>\r\n                                    <br/><br/>\r\n                                    <div><span\r\n                                        style={{\r\n                                            fontFamily: \"'Seoul Namsan'\",\r\n                                            fontSize: '30px'\r\n                                        }}> 정보 수정 </span>\r\n                                    </div>\r\n                                    <br/><br/>\r\n                                    <hr className=\"fr-hr\"\r\n                                        style={{borderBottom: '2px solid #d6d7d8', width: '35px', margin: '0 auto'}}\r\n                                        align=\"center\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                */}\r\n                <form className=\"form\" style={{marginTop: '-15px'}}>\r\n                    <h2>회원 정보 확인 및 수정</h2>\r\n                    <TextField id=\"standard-basic\" label=\"비밀번호\" variant=\"standard\" name=\"mem_pw\"\r\n                               value={newMemberInfo.mem_pw} style={{marginTop: '20px', width: '300px', height: 'auto'}}\r\n                               onChange={handleInputChange}/>\r\n                    <TextField id=\"standard-basic\" label=\"닉네임\" variant=\"standard\" name=\"nickname\"\r\n                               value={newMemberInfo.nickname}\r\n                               style={{marginTop: '20px', width: '300px', height: 'auto'}}\r\n                               onChange={handleInputChange}/>\r\n                    <TextField id=\"standard-basic\" label=\"이메일\" variant=\"standard\" name=\"email\"\r\n                               value={newMemberInfo.email} style={{marginTop: '20px', width: '300px', height: 'auto'}}\r\n                               onChange={handleInputChange}/>\r\n                    <FormControl fullWidth style={{marginTop: '20px', width: '300px', height: 'auto'}}>\r\n                        <InputLabel variant=\"standard\" htmlFor=\"uncontrolled-native\">\r\n                            지역(도/특별시)\r\n                        </InputLabel>\r\n                        <NativeSelect\r\n                            defaultValue={100}\r\n                            onChange={handleRegionChange}\r\n                        >\r\n                            <option value={100}>{newMemberInfo.region}</option>\r\n                            {regionList.map((region) => (\r\n                                <option key={region.reg_code} value={region.reg_name}>{region.reg_name}</option>\r\n                            ))}\r\n                        </NativeSelect>\r\n                    </FormControl>\r\n                    <FormControl fullWidth style={{marginTop: '20px', width: '300px', height: 'auto'}}>\r\n                        <InputLabel variant=\"standard\" htmlFor=\"uncontrolled-native\">\r\n                            지역(시/군)\r\n                        </InputLabel>\r\n                        <NativeSelect\r\n                            defaultValue={100}\r\n                            onChange={handleDistrictChange}\r\n                        >\r\n                            <option value={100}>{newMemberInfo.county_district}</option>\r\n                            {districtList.map((district) => (\r\n                                <option key={district.dist_code}\r\n                                        value={district.dist_name}>{district.dist_name}</option>\r\n                            ))}\r\n                        </NativeSelect>\r\n                    </FormControl>\r\n                    <Button variant=\"outlined\" style={{marginTop: '20px', width: '300px'}} onClick={handleUpdateMember}>수정\r\n                        완료하기</Button>\r\n                </form>\r\n                {updateMessage && <p>{updateMessage}</p>}\r\n\r\n            </main>\r\n\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default MyEdit;\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["navigate","useNavigate","dispatch","useDispatch","state","store","getState","_jsxs","className","children","isLoggedIn","_jsx","onClick","handleLogout","logout","src","logo","style","width","height","marginTop","marginLeft","Link","to","defaultInput","Input","NativeSelect","React","inProps","ref","props","useThemeProps","name","classes","classesProp","IconComponent","ArrowDropDownIcon","input","inputProps","variant","other","muiFormControl","useFormControl","fcs","formControlState","states","ownerState","composeClasses","root","getNativeSelectUtilityClasses","useUtilityClasses","otherClasses","inputComponent","NativeSelectInput","type","undefined","clsx","muiName","error","setError","useState","newMemberInfo","setNewMemberInfo","mem_id","mem_pw","nickname","email","region","county_district","reg_date","edit_date","updateMessage","setUpdateMessage","message","setMessage","userId","userData","select_region","setRegion","country_district","setCountry_district","regionList","setRegionList","districtList","setDistrictList","selectedRegion","setSelectedRegion","handleInputChange","e","value","target","prevState","console","log","useEffect","async","response","axios","get","concat","data","fetchMemberInfo","fetchRegionList","TextField","id","label","onChange","FormControl","fullWidth","InputLabel","htmlFor","defaultValue","event","map","reg_name","reg_code","selectedDistrict","district","dist_name","dist_code","Button","put","alert"],"sourceRoot":""}