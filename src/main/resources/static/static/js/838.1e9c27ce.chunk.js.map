{"version":3,"file":"static/js/838.1e9c27ce.chunk.js","mappings":"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","sources":["member/no_redux/MemberInfo.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nfunction MemberInfo() {\r\n    const [memId, setMemId] = useState('');\r\n    const [memberInfo, setMemberInfo] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [newMemberInfo, setNewMemberInfo] = useState({\r\n        mem_id: '',\r\n        mem_pw: '',\r\n        mem_name: '',\r\n        birth: '',\r\n        phone: '',\r\n        email: ''\r\n    });\r\n    const [updateMessage, setUpdateMessage] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // 입력받은 id 처리\r\n    const handleIdChange = (event) => {\r\n        setMemId(event.target.value);\r\n    };\r\n\r\n    // 입력받은 수정 정보 처리\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        // Update the new member info state based on input changes\r\n        setNewMemberInfo(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n\r\n    // api - 회원 정보 가져오기\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            const response = await axios.get(`/member/mypage/myinfo/${memId}`);\r\n            setMemberInfo(response.data);\r\n            setNewMemberInfo(response.data);\r\n            setError(null);\r\n        } catch (error) {\r\n            setError('사용자 정보를 가져오는 중에 오류가 발생했습니다.');\r\n            setMemberInfo(null);\r\n        }\r\n    };\r\n\r\n    // api - 회원 정보 수정\r\n    const handleUpdateMember = async () => {\r\n        try {\r\n            const response = await axios.put('/member/mypage/myedit', newMemberInfo);\r\n            setUpdateMessage(response.data);\r\n            alert('회원정보 수정 성공!');\r\n        } catch (error) {\r\n            console.error('Error updating member info:', error);\r\n            alert(error);\r\n            setUpdateMessage('회원정보 수정 실패');\r\n        }\r\n    };\r\n\r\n    // api - 회원 탈퇴\r\n    const handleResign = async () => {\r\n        try {\r\n            const response = await axios.post('/member/mypage/resign', { mem_id: memId });\r\n            if (response.status === 200) {\r\n                alert('회원 탈퇴 성공!');\r\n                setMemberInfo(null);\r\n                setNewMemberInfo({\r\n                    mem_id: '',\r\n                    mem_pw: '',\r\n                    mem_name: '',\r\n                    birth: '',\r\n                    phone: '',\r\n                    email: ''\r\n                });\r\n            } else {\r\n                setMessage('회원 탈퇴에 실패했습니다.');\r\n            }\r\n        } catch (error) {\r\n            setMessage('회원 탈퇴에 실패했습니다.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    사용자 ID:\r\n                    <input type=\"text\" value={memId} onChange={handleIdChange}/>\r\n                </label>\r\n                <button type=\"submit\">정보 가져오기</button>\r\n            </form>\r\n\r\n            {error && <p>{error}</p>}\r\n\r\n            {memberInfo && (\r\n                <div>\r\n                    <h2>사용자 정보</h2>\r\n                    <p>ID: {memberInfo.mem_id}</p>\r\n                    <p>PW: {memberInfo.mem_pw}</p>\r\n                    <p>Name: {memberInfo.mem_name}</p>\r\n                    <p>Birth: {memberInfo.birth}</p>\r\n                    <p>Phone: {memberInfo.phone}</p>\r\n                    <p>Email: {memberInfo.email}</p>\r\n\r\n                    <form>\r\n                        <h2>회원 정보 수정</h2>\r\n                        <label>\r\n                            PW:\r\n                            <input type=\"text\" placeholder=\"새 비번\" name=\"mem_pw\" value={newMemberInfo.mem_pw}\r\n                                   onChange={handleInputChange}/>\r\n                        </label>\r\n                        <label>\r\n                            Name:\r\n                            <input type=\"text\" placeholder=\"새 이름\" name=\"mem_name\" value={newMemberInfo.mem_name}\r\n                                   onChange={handleInputChange}/>\r\n                        </label>\r\n                        <label>\r\n                            Birth:\r\n                            <input type=\"text\" placeholder=\"새 생일\" name=\"birth\" value={newMemberInfo.birth}\r\n                                   onChange={handleInputChange}/>\r\n                        </label>\r\n                        <label>\r\n                            Phone:\r\n                            <input type=\"text\" placeholder=\"새 핸드폰 번호\" name=\"phone\" value={newMemberInfo.phone}\r\n                                   onChange={handleInputChange}/>\r\n                        </label>\r\n                        <label>\r\n                            Email:\r\n                            <input type=\"text\" placeholder=\"새 이메일\" name=\"email\" value={newMemberInfo.email}\r\n                                   onChange={handleInputChange}/>\r\n                        </label>\r\n\r\n                        <button onClick={handleUpdateMember}>수정</button>\r\n                        {updateMessage && <p>{updateMessage}</p>}\r\n                    </form>\r\n                    <hr/>\r\n                    <form>\r\n                        <h2>회원 탈퇴</h2>\r\n                        <button type=\"button\" onClick={handleResign}>회원 탈퇴</button>\r\n                        {message && <p>{message}</p>}\r\n                        {error && <p>{error}</p>}\r\n                    </form>\r\n                    <hr/>\r\n                    <button type=\"button\" onClick={(e) => navigate(\"/\")}>메인화면으로</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MemberInfo;\r\n"],"names":["memId","setMemId","useState","memberInfo","setMemberInfo","error","setError","newMemberInfo","setNewMemberInfo","mem_id","mem_pw","mem_name","birth","phone","email","updateMessage","setUpdateMessage","message","setMessage","navigate","useNavigate","handleInputChange","e","name","value","target","prevState","_jsxs","children","onSubmit","async","event","preventDefault","response","axios","get","concat","data","_jsx","type","onChange","placeholder","onClick","put","alert","console","post","status"],"sourceRoot":""}