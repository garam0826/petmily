{"version":3,"file":"static/js/832.45d69bc3.chunk.js","mappings":"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","sources":["Menu.jsx","animal/AnimalInfo.jsx","webpack://frontend/./src/css/recommend.css?6bff"],"sourcesContent":["import React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport store from \"./member/Store\";\r\nimport {logout} from \"./member/Reducer\";\r\nimport menustyle from \"./css/menu.css\"\r\nfunction Memu() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const state = store.getState();\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n        navigate(\"/main\");\r\n    };\r\n    return(\r\n        <div className=\"menubar\">\r\n            {state.isLoggedIn ? (\r\n                <button className=\"login\" onClick={handleLogout}>로그아웃</button>\r\n            ) : (\r\n                <button className=\"login\" onClick={() => navigate(\"/member/login\")}>로그인</button>\r\n            )}\r\n\r\n            <ul>\r\n                <li onClick={() => navigate(\"/main\")}>홈</li>\r\n                <li onClick={() => navigate(\"/animal\")}>보호 중인 동물</li>\r\n                <li onClick={() => navigate(\"/recommend\")}>반려견 추천</li>\r\n                <li onClick={() => navigate(\"/board/list\")}>게시판</li>\r\n                <li onClick={() => navigate(\"/\")}>유기견 입양 과정</li>\r\n                <li className=\"dropdown\">\r\n                    <span>회원 정보</span>\r\n                    <div className=\"dropdown-content\">\r\n                        <Link to=\"/member/mypage\">정보 확인 및 수정</Link>\r\n                        <Link to=\"/member/mypage/mycart\">찜 목록</Link>\r\n                        <Link to=\"/member/mypage\">내가 작성한 글과 댓글</Link>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Memu;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Menu from \"../Menu\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../css/search.css\";\r\nimport buttonsytle from \"../css/member.css\";\r\nimport \"../css/menu.css\"\r\nimport styles from \"../css/recommend.css\"\r\nimport store from \"../member/Store\";\r\n\r\nconst formatDate = (dateString) => {\r\n    const year = dateString.substring(0, 4);\r\n    const month = dateString.substring(4, 6);\r\n    const day = dateString.substring(6, 8);\r\n    return `${year}년 ${month}월 ${day}일`;\r\n};\r\n\r\nconst AnimalInfo = () => {\r\n    const [animalInfos, setAnimalInfos] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [analysisloading, setAnalysisloading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [kind, setKind] = useState('');\r\n    const [uprCd, setUprCd] = useState('');\r\n    const [orgCd, setOrgCd] = useState('');\r\n    const [analysisResults, setAnalysisResults] = useState([]);\r\n\r\n\r\n    const [regionList, setRegionList] = useState([]);\r\n    const [districtList, setDistrictList] = useState([]);\r\n    const [selectedRegion, setSelectedRegion] = useState('');\r\n\r\n    const addAnalysisResult = (newResult) => {\r\n        setAnalysisResults(prevAnalysisResults => [...prevAnalysisResults, newResult]);\r\n    };\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const response = await axios.get(`/api/animal/info?startDate=${startDate}&endDate=${endDate}&kind=${kind}&uprCd=${uprCd}&orgCd=${orgCd}`);\r\n            setAnimalInfos(response.data);\r\n            for (const animalInfo of response.data) {\r\n                await handleAnalysis(animalInfo.desertionNo, animalInfo.popfile);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching animal info:', error);\r\n            setError(error);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchRegionList = async () => {\r\n            try {\r\n                const response = await axios.get('/api/animal/SlctReg_code');\r\n                setRegionList(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching region list:', error);\r\n            }\r\n        };\r\n\r\n        fetchRegionList();\r\n    }, []);\r\n    const handleAnalysis = async (desertionNo, imageUrl) => {\r\n        try {\r\n            setAnalysisloading(true);\r\n            const response = await axios.get(`/api/animal/analyze?desertionNo=${desertionNo}&popfile=${imageUrl}`);\r\n            addAnalysisResult(response.data);\r\n            setError(null);\r\n        } catch (error) {\r\n            console.error('Error analyzing image:', error);\r\n            setError('An error occurred while analyzing the image.');\r\n            addAnalysisResult('error');\r\n        }\r\n        setAnalysisloading(false);\r\n    };\r\n\r\n    const handleRegionChange = async (event) => {\r\n        const selectedRegion = event.target.value;\r\n        setSelectedRegion(selectedRegion);\r\n        setUprCd(selectedRegion);\r\n        console.log(uprCd);\r\n        try {\r\n            const response = await axios.get(`/api/animal/SlctDist_code?reg_name=${selectedRegion}`);\r\n            setDistrictList(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching district list:', error);\r\n        }\r\n    };\r\n\r\n    const handleDistrictChange = (event) => {\r\n        const selectedDistrict = event.target.value;\r\n        setOrgCd(selectedDistrict);\r\n    };\r\n\r\n    const state = store.getState();\r\n    const navigate = useNavigate();\r\n\r\n    const userId = state.isLoggedIn ? state.userData.mem_id : null;\r\n    const currentTime = new Date().toISOString();\r\n    const { idx } = useParams();\r\n\r\n    const addFavorite = (desertionNo) => {\r\n        axios.post(`/favorites/add?memId=${userId}&desertionNo=${desertionNo}`, {\r\n            mem_id: userId,\r\n            desertionNo: desertionNo,\r\n            created_at: currentTime,\r\n        })\r\n            .then(response => {\r\n                console.log(\"Favorite added successfully\");\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error adding favorite: \", error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <Menu />\r\n            </header>\r\n            <main>\r\n                <div data-case=\"text79\" className=\"userEL15637124\">\r\n                    <div style={styles.container}>\r\n                        <div className=\"row\" data-matrix-loop=\"true\" data-matrix-column=\"1\">\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 item\">\r\n                                <div className=\"cl_caption\" data-edit=\"true\" data-selector=\".cl_caption\">\r\n                                    <hr className=\"fr-hr\"\r\n                                        style={{borderBottom: '2px solid #d6d7d8', width: '35px', margin: '0 auto'}}\r\n                                        align=\"center\"/>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}><br/></span></span>\r\n                                    </div>\r\n                                    <div><span\r\n                                        style={{fontFamily: \"'Seoul Namsan'\", fontSize: '30px'}}>유기견 검색</span>\r\n                                    </div>\r\n                                    <div><span className=\"fsize13\"><span style={{\r\n                                        color: 'rgb(138, 139, 142)',\r\n                                        fontFamily: \"'Nanum Barun Gothic'\"\r\n                                    }}>​</span></span></div>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}>공고 시작일, 종료일, 종료, 지역(도/특별시), (시/군)으로 옵션을 선택하여 검색하실 수 있습니다.</span></span>\r\n                                    </div>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}>(사진 위에 마우스를 올리면, 더 자세한 정보를 보실 수 있습니다.)<br/><br/></span></span>\r\n                                    </div>\r\n                                    <hr className=\"fr-hr\"\r\n                                        style={{borderBottom: '2px solid #d6d7d8', width: '35px', margin: '0 auto'}}\r\n                                        align=\"center\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {state.isLoggedIn ? (\r\n                    <div>\r\n                        <div className=\"container\">\r\n                            <div className=\"contentContainer\">\r\n                                <label>공고 시작일: </label>\r\n                                <input type=\"text\" value={startDate} onChange={(e) => setStartDate(e.target.value)}/>\r\n                            </div>\r\n                            <div className=\"contentContainer\">\r\n                                <label>공고 종료일: </label>\r\n                                <input type=\"text\" value={endDate} onChange={(e) => setEndDate(e.target.value)}/>\r\n                            </div>\r\n                            <div className=\"contentContainer\">\r\n                                <label>품종: </label>\r\n                                <input type=\"text\" value={kind} onChange={(e) => setKind(e.target.value)}/>\r\n                            </div>\r\n                            <div className=\"contentContainer\">\r\n                                <label htmlFor=\"region\">지역(도/특별시):</label>\r\n                                <select id=\"region\" onChange={handleRegionChange}>\r\n                                    <option value=\"\">지역(도/특별시)</option>\r\n                                    {regionList.map((region) => (\r\n                                        <option key={region.reg_code} value={region.reg_name}>{region.reg_name}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"contentContainer\">\r\n                                <label htmlFor=\"district\">지역(시/군):</label>\r\n                                <select id=\"district\" onChange={handleDistrictChange}>\r\n                                    <option value=\"\">지역(시/군)</option>\r\n                                    {districtList.map((district) => (\r\n                                        <option key={district.dist_code}\r\n                                                value={district.dist_name}>{district.dist_name}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <button onClick={fetchData} style={{width: '350px'}}>Fetch Animal Info</button>\r\n                        </div>\r\n                        {animalInfos.length === 0 && !loading && !error && <div>No data available</div>}\r\n                        <div className=\"grid-container\">\r\n                            {animalInfos.map((animalInfo, index) => (\r\n                                <div className=\"card\" key={index}>\r\n                                    <div className=\"card-image\">\r\n                                        <img src={animalInfo.popfile} alt=\"Animal\"/>\r\n                                    </div>\r\n                                    <div className=\"card-content\">\r\n                                    </div>\r\n                                    {analysisResults.map((analysisresult, index) => (\r\n                                        <div key={index}\r\n                                             className={analysisresult.desertionNo === animalInfo.desertionNo ? \"analysis-info\" : \"\"}>\r\n                                            {analysisresult.desertionNo === animalInfo.desertionNo && (\r\n                                                <div>\r\n                                                    <p>[ 품종 비율 1순위\r\n                                                        ]<br/>{analysisresult.className1} ({analysisresult.probability1.toFixed(2)}%)\r\n                                                    </p>\r\n                                                    <p>[ 품종 비율 2순위\r\n                                                        ]<br/>{analysisresult.className2} ({analysisresult.probability2.toFixed(2)}%)\r\n                                                    </p>\r\n                                                    <p>[ 품종 비율 3순위\r\n                                                        ]<br/>{analysisresult.className3} ({analysisresult.probability3.toFixed(2)}%)\r\n                                                    </p>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    ))}\r\n                                    <button onClick={() => addFavorite(animalInfo.desertionNo)}\r\n                                            style={{width: '100%'}}>찜 추가\r\n                                    </button>\r\n                                    <div className=\"analysis-results\">\r\n                                        <br/>\r\n                                        {/* 확인용 <p>유기 번호: {animalInfos[match.desertionNo].desertionNo}</p>*/}\r\n                                        <p>발견 날짜: {formatDate(animalInfo.happenDt)}</p>\r\n                                        <p>발견 장소: {animalInfo.happenPlace}</p>\r\n                                        <p>나이: {animalInfo.age}</p>\r\n                                        <p>무게: {animalInfo.weight}</p>\r\n                                        <p>공고 시작 날짜: {formatDate(animalInfo.noticeSdt)}</p>\r\n                                        <p>공고 종료 날짜: {formatDate(animalInfo.noticeEdt)}</p>\r\n                                        <p>성별: {animalInfo.sexCd}</p>\r\n                                        <p>중성화 여부: {animalInfo.neuterYn}</p>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {loading && <div>Loading...</div>}\r\n                        {error && <div>Error: {error.message}</div>}\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <h2>(현재 찜 기능으로 인해) 해당 화면은 로그인이 필요한 화면입니다.</h2>\r\n                        <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                            <button className=\"signup custom-button\" onClick={() => navigate(\"/member/SignUp\")}>회원가입 >\r\n                            </button>\r\n                            <button className=\"login custom-button\" onClick={() => navigate(\"/member/login\")}>로그인 >\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnimalInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["navigate","useNavigate","dispatch","useDispatch","state","store","getState","_jsxs","className","children","isLoggedIn","_jsx","onClick","handleLogout","logout","Link","to","formatDate","dateString","year","substring","month","day","concat","AnimalInfo","animalInfos","setAnimalInfos","useState","loading","setLoading","analysisloading","setAnalysisloading","error","setError","startDate","setStartDate","endDate","setEndDate","kind","setKind","uprCd","setUprCd","orgCd","setOrgCd","analysisResults","setAnalysisResults","regionList","setRegionList","districtList","setDistrictList","selectedRegion","setSelectedRegion","addAnalysisResult","newResult","prevAnalysisResults","useEffect","async","response","axios","get","data","console","fetchRegionList","handleAnalysis","desertionNo","imageUrl","userId","userData","mem_id","currentTime","Date","toISOString","idx","useParams","Menu","style","styles","container","borderBottom","width","margin","align","color","fontFamily","fontSize","type","value","onChange","e","target","htmlFor","id","event","log","map","region","reg_name","reg_code","selectedDistrict","district","dist_name","dist_code","animalInfo","popfile","length","index","src","alt","analysisresult","className1","probability1","toFixed","className2","probability2","className3","probability3","addFavorite","post","created_at","then","catch","happenDt","happenPlace","age","weight","noticeSdt","noticeEdt","sexCd","neuterYn","message","display","justifyContent"],"sourceRoot":""}