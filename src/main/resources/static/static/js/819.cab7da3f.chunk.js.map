{"version":3,"file":"static/js/819.cab7da3f.chunk.js","mappings":"kNASA,MAgDA,EAhDuBA,KACnB,MAAMC,EAAQC,EAAAA,EAAMC,WACdC,EAASH,EAAMI,WAAaJ,EAAMK,SAASC,OAAS,MAEnDC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAG5BK,EAASC,IAAcN,EAAAA,EAAAA,UAAS,IA2BvC,OAxBAO,EAAAA,EAAAA,YAAU,KAaFb,GAZiBc,WACjB,IACI,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,6BAADC,OAA8BlB,IAC9DK,EAAWU,EAASI,KACxB,CAAE,MAAOC,GACLV,EAAS,2BACTW,QAAQZ,MAAMW,EAClB,CAAC,QACGZ,GAAW,EACf,GAIAc,EACJ,GACD,CAACtB,KAEJa,EAAAA,EAAAA,YAAU,KAEN,MAAMU,EAAenB,EAAQoB,KAAIC,GAASA,EAAMC,cAChDd,EAAWW,EAAa,GACzB,CAACnB,KAGAuB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,UAAAD,UACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,OAETD,EAAAA,EAAAA,KAAA,QAAAD,UACIC,EAAAA,EAAAA,KAACE,EAAAA,EAAgB,CAAC3B,QAASO,EAASJ,QAASA,EAASE,MAAOA,EAAOuB,MAAO,qBAE7E,C","sources":["recommend/QuestionResult.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport store from \"../member/Store\";\r\nimport Menu from \"../Menu\";\r\n\r\nimport '../css/menu.css';\r\nimport '../css/result.css';\r\nimport Recommend_Result from \"./Recommend_Result\";\r\n\r\nconst QuestionResult = () => {\r\n    const state = store.getState();\r\n    const userId = state.isLoggedIn ? state.userData.mem_id : null;\r\n\r\n    const [matches, setMatches] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    const [animals, setAnimals] = useState([]);\r\n\r\n    // 추천 매치 데이터를 가져오는 useEffect\r\n    useEffect(() => {\r\n        const fetchMatches = async () => {\r\n            try {\r\n                const response = await axios.get(`/member/profile/recommend/${userId}`);\r\n                setMatches(response.data);\r\n            } catch (err) {\r\n                setError('Failed to fetch matches');\r\n                console.error(err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        if (userId) {\r\n            fetchMatches();\r\n        }\r\n    }, [userId]);\r\n\r\n    useEffect(() => {\r\n        // Extract desertionNo from matches and set to animals state\r\n        const desertionNos = matches.map(match => match.desertionNo);\r\n        setAnimals(desertionNos);\r\n    }, [matches]);\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <Menu />\r\n            </header>\r\n            <main>\r\n                <Recommend_Result matches={animals} loading={loading} error={error} title={\"질문\"}/>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuestionResult;\r\n"],"names":["QuestionResult","state","store","getState","userId","isLoggedIn","userData","mem_id","matches","setMatches","useState","loading","setLoading","error","setError","animals","setAnimals","useEffect","async","response","axios","get","concat","data","err","console","fetchMatches","desertionNos","map","match","desertionNo","_jsxs","children","_jsx","Menu","Recommend_Result","title"],"sourceRoot":""}