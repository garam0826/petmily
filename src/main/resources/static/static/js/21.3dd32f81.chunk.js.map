{"version":3,"file":"static/js/21.3dd32f81.chunk.js","mappings":"mKAoEA,QA/DA,WACI,MAAOA,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,OAC1CC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,MAGjCG,GAAWC,EAAAA,EAAAA,KAAYC,GAASA,EAAMF,WACtCG,EAASH,EAAWA,EAASI,OAAS,GA+C5C,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2CACJC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,SA/CDC,IACtB,MAAMC,EAAOD,EAAME,OAAOC,MAAM,GAChClB,EAAgBgB,GAGhB,MAAMG,EAAS,IAAIC,WACnBD,EAAOE,UAAY,KACflB,EAAWgB,EAAOG,OAAO,EAEzBN,GACAG,EAAOI,cAAcP,EACzB,IAqCKd,IAAWU,EAAAA,EAAAA,KAAA,OAAKY,IAAKtB,EAASuB,IAAI,2BAAOC,MAAO,CAAEC,MAAO,QAASC,OAAQ,YAC3EhB,EAAAA,EAAAA,KAAA,UAAQiB,QAlCSC,KACrB,IAAK/B,EAED,YADAgC,MAAM,4DAIV,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,SAAUnC,GAC1BiC,EAASE,OAAO,SAAU3B,GAE1B4B,EAAAA,EAAMC,KAAK,sCAAuCJ,EAAU,CACxDK,QAAS,CACL,eAAgB,yBAGnBC,MAAKC,IACFC,QAAQC,IAAIF,EAASG,MACjBH,EAASG,KACTX,MAAM,sDAENA,MAAM,qDACV,IAEHY,OAAMC,IACHJ,QAAQI,MAAM,0EAAoBA,GAClCb,MAAM,yEAAkB,GAC1B,EAQgCpB,SAAC,yBAG/C,C","sources":["member/ImageUpload.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport '../css/imgupload.css';\r\n\r\nfunction ImageUpload() {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [preview, setPreview] = useState(null);\r\n\r\n    // 스토어에서 사용자 데이터 가져오기\r\n    const userData = useSelector(state => state.userData);\r\n    const userId = userData ? userData.mem_id : '';\r\n\r\n    // 파일 선택 핸들러\r\n    const imgSelectHandler = (event) => {\r\n        const file = event.target.files[0];\r\n        setSelectedFile(file);\r\n\r\n        // 미리보기 설정\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            setPreview(reader.result);\r\n        };\r\n        if (file) {\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    // 파일 업로드 핸들러\r\n    const imgUploadHandler = () => {\r\n        if (!selectedFile) {\r\n            alert('이미지를 선택하세요.');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('images', selectedFile);\r\n        formData.append('mem_id', userId); // 스토어에서 가져온 사용자 ID 사용\r\n\r\n        axios.post('http://localhost:8001/member/PetImg', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log(response.data);\r\n                if (response.data) {\r\n                    alert('이미지 업로드 성공');\r\n                } else {\r\n                    alert('이미지 업로드 실패');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('이미지 업로드 중 오류 발생:', error);\r\n                alert('이미지 업로드 중 오류 발생');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"upload-container\">\r\n            <h2>이미지 업로드</h2>\r\n            <input type=\"file\" onChange={imgSelectHandler} />\r\n            {preview && <img src={preview} alt=\"미리보기\" style={{ width: '750px', height: '750px' }} />}\r\n            <button onClick={imgUploadHandler}>업로드</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageUpload;\r\n"],"names":["selectedFile","setSelectedFile","useState","preview","setPreview","userData","useSelector","state","userId","mem_id","_jsxs","className","children","_jsx","type","onChange","event","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","src","alt","style","width","height","onClick","imgUploadHandler","alert","formData","FormData","append","axios","post","headers","then","response","console","log","data","catch","error"],"sourceRoot":""}