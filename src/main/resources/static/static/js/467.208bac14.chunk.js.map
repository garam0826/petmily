{"version":3,"file":"static/js/467.208bac14.chunk.js","mappings":"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","sources":["MainPage/SlideBanner.jsx","MainPage/mainpage_animal.jsx","Mainpage.js","Menu.jsx","animal/Pagination.jsx","webpack://frontend/./src/css/recommend.css?6bff"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport '../css/slidebanner.css';\r\n\r\nconst NextArrow = (props) => {\r\n    const { className, style, onClick } = props;\r\n    return (\r\n        <div\r\n            className={className}\r\n            style={{ ...style, display: 'block', right: '10px' }}\r\n            onClick={onClick}\r\n        />\r\n    );\r\n};\r\n\r\nconst PrevArrow = (props) => {\r\n    const { className, style, onClick } = props;\r\n    return (\r\n        <div\r\n            className={className}\r\n            style={{ ...style, display: 'block', left: '10px', zIndex: 1 }}\r\n            onClick={onClick}\r\n        />\r\n    );\r\n};\r\n\r\nconst SlideBanner = () => {\r\n    const navigate = useNavigate();\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        autoplay: true,\r\n        autoplaySpeed: 3000,\r\n        arrows: true,\r\n        nextArrow: <NextArrow/>,\r\n        prevArrow: <PrevArrow/>,\r\n    };\r\n\r\n    const recommendations = [\r\n        {\r\n            image: 'https://cdn.vectorstock.com/i/2000v/61/88/group-of-dog-breeds-vector-20466188.avif',\r\n            title: '개인 선호도 프로필을 통한 추천 기능',\r\n            description: '질문을 통해 사용자에게 추천해 드립니다.',\r\n            link: \"/recommend/question\", // 추천 페이지로의 링크\r\n        },\r\n        {\r\n            image: 'https://cdn.vectorstock.com/i/1000x1000/70/70/people-training-playing-pet-on-walk-at-playground-vector-34167070.webp',\r\n            title: '키워드 선택을 통한 추천 기능',\r\n            description: '사용자가 선택한 키워드를 기반으로 추천해 드립니다.',\r\n            link: \"/recommend/keyword\", // 추천 페이지로의 링크\r\n        },\r\n        {\r\n            image: 'https://cdn.vectorstock.com/i/2000v/88/14/cat-or-dog-paw-pet-foot-trail-print-vector-27948814.avif',\r\n            title: '보호 중인 동물 탐색',\r\n            description: '현재 보호 중인 유기견들을 보실 수 있습니다.',\r\n            link: \"/animal\",\r\n        },\r\n    ];\r\n\r\n    console.log('slider rendered', recommendations);\r\n\r\n    return (\r\n        <div className=\"recommend-slide\">\r\n            <Slider {...settings}>\r\n                {recommendations.map((item, index) => (\r\n                    <div key={index} className=\"slide-item\">\r\n                        <img src={item.image} alt={item.title} />\r\n                        <h3>{item.title}</h3>\r\n                        <p>{item.description}</p>\r\n                        <button\r\n                            className=\"slide-banner-button\"\r\n                            onClick={() => navigate(item.link)}\r\n                        >\r\n                            자세히 보기\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </Slider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SlideBanner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Menu from \"../Menu\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../css/search.css\";\r\nimport buttonsytle from \"../css/member.css\";\r\nimport \"../css/menu.css\"\r\nimport styles from \"../css/recommend.css\" //멘트\r\nimport store from \"../member/Store\";\r\nimport Pagination from \"../animal/Pagination\"\r\n\r\nconst formatDate = (dateString) => {\r\n    if (!dateString) return '';\r\n    const year = dateString.substring(0, 4);\r\n    const month = dateString.substring(4, 6);\r\n    const day = dateString.substring(6, 8);\r\n    return `${year}년 ${month}월 ${day}일`;\r\n};\r\n\r\nconst MainAnimal = () => {\r\n    const [animalInfos, setAnimalInfos] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [analysisloading, setAnalysisloading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [kind, setKind] = useState('');\r\n    const [uprCd, setUprCd] = useState('');\r\n    const [orgCd, setOrgCd] = useState('');\r\n    const [analysisResults, setAnalysisResults] = useState([]);\r\n    const [regionList, setRegionList] = useState([]);\r\n    const [districtList, setDistrictList] = useState([]);\r\n    const [selectedRegion, setSelectedRegion] = useState('');\r\n\r\n    const limit = 4;\r\n\r\n    const addAnalysisResult = (newResult) => {\r\n        setAnalysisResults(prevAnalysisResults => [...prevAnalysisResults, newResult]);\r\n    };\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const response = await axios.get(`/api/animal/info?startDate=${startDate}&endDate=${endDate}&kind=${kind}&uprCd=${uprCd}&orgCd=${orgCd}`);\r\n            setAnimalInfos(response.data);\r\n            for (const animalInfo of response.data) {\r\n                await handleAnalysis(animalInfo.desertionNo, animalInfo.popfile);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching animal info:', error);\r\n            setError(error);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const fetchRandomAnimals = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const response = await axios.get('/api/animal/random-desertionNos');\r\n            const desertionNos = response.data;\r\n            const animalInfoPromises = desertionNos.map(desertionNo => axios.get(`/api/animal/${desertionNo}`));\r\n            const animalInfoResponses = await Promise.all(animalInfoPromises);\r\n            const animalInfos = animalInfoResponses.map(res => res.data);\r\n            setAnimalInfos(animalInfos);\r\n            for (const animalInfo of animalInfos) {\r\n                await handleAnalysis(animalInfo.desertionNo, animalInfo.popfile);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching random animals:', error);\r\n            setError(error);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchRandomAnimals();\r\n\r\n        const fetchRegionList = async () => {\r\n            try {\r\n                const response = await axios.get('/api/animal/SlctReg_code');\r\n                setRegionList(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching region list:', error);\r\n            }\r\n        };\r\n\r\n        fetchRegionList();\r\n    }, []);\r\n\r\n    const handleAnalysis = async (desertionNo, imageUrl) => {\r\n        try {\r\n            setAnalysisloading(true);\r\n            const response = await axios.get(`/api/animal/analyze?desertionNo=${desertionNo}&popfile=${imageUrl}`);\r\n            addAnalysisResult(response.data);\r\n            setError(null);\r\n        } catch (error) {\r\n            console.error('Error analyzing image:', error);\r\n            setError('An error occurred while analyzing the image.');\r\n            addAnalysisResult('error');\r\n        }\r\n        setAnalysisloading(false);\r\n    };\r\n\r\n    const handleRegionChange = async (event) => {\r\n        const selectedRegion = event.target.value;\r\n        setSelectedRegion(selectedRegion);\r\n        setUprCd(selectedRegion);\r\n        try {\r\n            const response = await axios.get(`/api/animal/SlctDist_code?reg_name=${selectedRegion}`);\r\n            setDistrictList(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching district list:', error);\r\n        }\r\n    };\r\n\r\n    const handleDistrictChange = (event) => {\r\n        const selectedDistrict = event.target.value;\r\n        setOrgCd(selectedDistrict);\r\n    };\r\n\r\n    const state = store.getState();\r\n    const navigate = useNavigate();\r\n\r\n    const userId = state.isLoggedIn ? state.userData.mem_id : null;\r\n    const currentTime = new Date().toISOString();\r\n    const { idx } = useParams();\r\n\r\n    const addFavorite = (desertionNo) => {\r\n        axios.post(`/favorites/add?memId=${userId}&desertionNo=${desertionNo}`, {\r\n            mem_id: userId,\r\n            desertionNo: desertionNo,\r\n            created_at: currentTime,\r\n        })\r\n            .then(response => {\r\n                console.log(\"Favorite added successfully\");\r\n                alert(\"찜 목록에 담겼습니다!\");\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error adding favorite: \", error);\r\n            });\r\n    };\r\n\r\n    const handleDetailAnimal = (animalInfo) => {\r\n        const state = {\r\n            url: '/animal/info',\r\n            desertionNo: animalInfo.desertionNo,\r\n            test: animalInfo.desertionNo,\r\n        };\r\n        navigate('/animal/detail', { state });\r\n    };\r\n\r\n    const getNeuterYnText = (neuterYn) => {\r\n        switch (neuterYn) {\r\n            case 'Y':\r\n                return 'O';\r\n            case 'N':\r\n                return 'X';\r\n            case 'U':\r\n                return '모름';\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n\r\n    const getSexCdText = (sexCd) => {\r\n        switch (sexCd) {\r\n            case 'M':\r\n                return '수컷';\r\n            case 'F':\r\n                return '암컷';\r\n            case 'Q':\r\n                return '미상';\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <main>\r\n                <div>\r\n                    {animalInfos.length === 0 && !loading && !error && <div>No data available</div>}\r\n                    <div className=\"grid-container\">\r\n                        {animalInfos.slice(0, limit).map((animalInfo, index) => (\r\n                            <div className=\"card\" key={index}>\r\n                                <div className=\"card-image\">\r\n                                    <img src={animalInfo.popfile} alt=\"Animal\"/>\r\n                                </div>\r\n                                <div className=\"card-content\">\r\n                                </div>\r\n                                {analysisloading ? (\r\n                                    <div>Analysis Loading...</div>\r\n                                ) : (\r\n                                    analysisResults.map((analysisresult, index) => (\r\n                                        <div key={index}\r\n                                             className={analysisresult.desertionNo === animalInfo.desertionNo ? \"analysis-info\" : \"\"}>\r\n                                            {analysisresult.desertionNo === animalInfo.desertionNo && (\r\n                                                <div>\r\n                                                    <p>[ 품종 비율 1순위\r\n                                                        ]<br/>{analysisresult.className1} ({(analysisresult.probability1 * 100).toFixed(2)}%)\r\n                                                    </p>\r\n                                                    <p>[ 품종 비율 2순위\r\n                                                        ]<br/>{analysisresult.className2} ({(analysisresult.probability2 * 100).toFixed(2)}%)\r\n                                                    </p>\r\n                                                    <p>[ 품종 비율 3순위\r\n                                                        ]<br/>{analysisresult.className3} ({(analysisresult.probability3 * 100).toFixed(2)}%)\r\n                                                    </p>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    ))\r\n                                )}\r\n                                <div className=\"analysis\" onClick={() => handleDetailAnimal(animalInfo)}>\r\n                                    <br/>\r\n                                    <p>발견 날짜: {formatDate(animalInfo.happenDt)}</p>\r\n                                    <p>발견 장소: {animalInfo.happenPlace}</p>\r\n                                    <p>나이: {animalInfo.age}</p>\r\n                                    <p>무게: {animalInfo.weight}</p>\r\n                                    <p>공고 시작 날짜: {formatDate(animalInfo.noticeSdt)}</p>\r\n                                    <p>공고 종료 날짜: {formatDate(animalInfo.noticeEdt)}</p>\r\n                                    <p>성별: {getSexCdText(animalInfo.sexCd)}</p>\r\n                                    <p>중성화 여부: {getNeuterYnText(animalInfo.neuterYn)}</p>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n            </main>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainAnimal;\r\n","import React, {useState} from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport store from \"./member/Store\";\r\nimport \"./css/menu.css\"\r\nimport './App.css';\r\nimport \"../src/css/main.css\"\r\nimport {logout} from \"./member/Reducer\";\r\nimport { useDispatch } from 'react-redux';\r\nimport SlideBanner from \"./MainPage/SlideBanner\";\r\nimport MainAnimal from \"./MainPage/mainpage_animal\";\r\n\r\nconst Mainpage = () => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const state = store.getState();\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n        navigate(\"/main\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"menubar\">\r\n                {state.isLoggedIn ? (\r\n                    <button className=\"login\" onClick={handleLogout}>로그아웃</button>\r\n                ) : (\r\n                    <button className=\"login\" onClick={() => navigate(\"/member/login\")}>로그인</button>\r\n                )}\r\n\r\n                <ul>\r\n                    <li onClick={() => navigate(\"/main\")}>홈</li>\r\n                    <li onClick={() => navigate(\"/animal\")}>보호 중인 동물</li>\r\n                    <li onClick={() => navigate(\"/recommend\")}>반려견 추천</li>\r\n                    <li onClick={() => navigate(\"/board/list\")}>게시판</li>\r\n                    <li className=\"dropdown\">\r\n                        <span>회원 정보</span>\r\n                        <div className=\"dropdown-content\">\r\n                            <Link to=\"/member/mypage\">정보 확인 및 수정</Link>\r\n                            <Link to=\"/member/mypage/mycart\">찜 목록</Link>\r\n                            <Link to=\"/member/mypage/mycontent\">내가 작성한 글과 댓글</Link>\r\n                            <Link to=\"/member/mypage/imgUpload\">이미지 업로드</Link>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"info-header\">\r\n                <h1>나에게 맞는 강아지를 추천받다</h1>\r\n                <p>어떤 유기견을 입양해야 할지 고민 중이신가요</p>\r\n                <p>저희 서비스만의 추천 기능을 통해 유기견 친구들을 찾아보세요!</p>\r\n            </div>\r\n            <div className=\"banner-content\">\r\n                <SlideBanner/>\r\n            </div>\r\n            <div className=\"main_animal\">\r\n                <h1>보호 중인 유기견</h1>\r\n                <button className=\"more-button\" onClick={() => navigate(\"/animal\")}>더보기</button>\r\n            </div>\r\n            <hr/>\r\n            <MainAnimal/>\r\n        </div>\r\n    );\r\n};\r\nexport default Mainpage;","import React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport store from \"./member/Store\";\r\nimport {logout} from \"./member/Reducer\";\r\nimport menustyle from \"./css/menu.css\"\r\nfunction Memu() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const state = store.getState();\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n        navigate(\"/main\");\r\n    };\r\n    return(\r\n        <div className=\"menubar\">\r\n            {state.isLoggedIn ? (\r\n                <button className=\"login\" onClick={handleLogout}>로그아웃</button>\r\n            ) : (\r\n                <button className=\"login\" onClick={() => navigate(\"/member/login\")}>로그인</button>\r\n            )}\r\n\r\n            <ul>\r\n                <li onClick={() => navigate(\"/main\")}>홈</li>\r\n                <li onClick={() => navigate(\"/animal\")}>보호 중인 동물</li>\r\n                <li onClick={() => navigate(\"/recommend\")}>반려견 추천</li>\r\n                <li onClick={() => navigate(\"/board/list\")}>게시판</li>\r\n                <li onClick={() => navigate(\"/\")}>유기견 입양 과정</li>\r\n                <li className=\"dropdown\">\r\n                    <span>회원 정보</span>\r\n                    <div className=\"dropdown-content\">\r\n                        <Link to=\"/member/mypage\">정보 확인 및 수정</Link>\r\n                        <Link to=\"/member/mypage/mycart\">찜 목록</Link>\r\n                        <Link to=\"/member/mypage\">내가 작성한 글과 댓글</Link>\r\n                        <Link to=\"/member/mypage/imgUpload\">이미지 업로드</Link>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Memu;","import React from 'react';\r\nimport '../css/paginaion.css'; // 위에서 변환한 CSS 파일을 import 합니다.\r\n\r\nfunction Pagination({ total, limit, page, setPage }) {\r\n    const numPages = Math.ceil(total / limit);\r\n\r\n    return (\r\n        <div className=\"Nav_pagination\">\r\n            <button\r\n                className=\"Button_pagination\"\r\n                onClick={() => setPage(page - 1)}\r\n                disabled={page === 1}\r\n            >\r\n                &lt;\r\n            </button>\r\n            {Array(numPages)\r\n                .fill()\r\n                .map((_, i) => (\r\n                    <button\r\n                        className=\"Button_pagination\"\r\n                        key={i + 1}\r\n                        onClick={() => setPage(i + 1)}\r\n                        aria-current={page === i + 1 ? \"page\" : undefined}\r\n                    >\r\n                        {i + 1}\r\n                    </button>\r\n                ))}\r\n            <button\r\n                className=\"Button_pagination\"\r\n                onClick={() => setPage(page + 1)}\r\n                disabled={page === numPages}\r\n            >\r\n                &gt;\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pagination;\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["NextArrow","props","className","style","onClick","_jsx","display","right","PrevArrow","left","zIndex","SlideBanner","navigate","useNavigate","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","arrows","nextArrow","prevArrow","recommendations","image","title","description","link","console","log","children","Slider","map","item","index","_jsxs","src","alt","formatDate","dateString","year","substring","month","day","concat","MainAnimal","animalInfos","setAnimalInfos","useState","loading","setLoading","analysisloading","setAnalysisloading","error","setError","startDate","setStartDate","endDate","setEndDate","kind","setKind","uprCd","setUprCd","orgCd","setOrgCd","analysisResults","setAnalysisResults","regionList","setRegionList","districtList","setDistrictList","selectedRegion","setSelectedRegion","addAnalysisResult","newResult","prevAnalysisResults","useEffect","async","animalInfoPromises","axios","get","data","desertionNo","Promise","all","res","animalInfo","handleAnalysis","popfile","fetchRandomAnimals","response","fetchRegionList","imageUrl","state","store","getState","idx","isLoggedIn","userData","mem_id","Date","toISOString","useParams","getNeuterYnText","neuterYn","getSexCdText","sexCd","length","slice","analysisresult","className1","probability1","toFixed","className2","probability2","className3","probability3","url","test","handleDetailAnimal","happenDt","happenPlace","age","weight","noticeSdt","noticeEdt","Mainpage","dispatch","useDispatch","handleLogout","logout","Link","to","_ref","total","limit","page","setPage","numPages","Math","ceil","disabled","Array","fill","_","i","undefined"],"sourceRoot":""}