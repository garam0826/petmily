{"version":3,"file":"static/js/21.44a7217d.chunk.js","mappings":"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","sources":["Menu.jsx","member/ImageUpload.jsx"],"sourcesContent":["import React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport store from \"./member/Store\";\r\nimport {logout} from \"./member/Reducer\";\r\nimport menustyle from \"./css/menu.css\"\r\nfunction Memu() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const state = store.getState();\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n        navigate(\"/main\");\r\n    };\r\n    return(\r\n        <div className=\"menubar\">\r\n            {state.isLoggedIn ? (\r\n                <button className=\"login\" onClick={handleLogout}>로그아웃</button>\r\n            ) : (\r\n                <button className=\"login\" onClick={() => navigate(\"/member/login\")}>로그인</button>\r\n            )}\r\n\r\n            <ul>\r\n                <li onClick={() => navigate(\"/main\")}>홈</li>\r\n                <li onClick={() => navigate(\"/animal\")}>보호 중인 동물</li>\r\n                <li onClick={() => navigate(\"/recommend\")}>반려견 추천</li>\r\n                <li onClick={() => navigate(\"/board/list\")}>게시판</li>\r\n                <li onClick={() => navigate(\"/\")}>유기견 입양 과정</li>\r\n                <li className=\"dropdown\">\r\n                    <span>회원 정보</span>\r\n                    <div className=\"dropdown-content\">\r\n                        <Link to=\"/member/mypage\">정보 확인 및 수정</Link>\r\n                        <Link to=\"/member/mypage/mycart\">찜 목록</Link>\r\n                        <Link to=\"/member/mypage\">내가 작성한 글과 댓글</Link>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Memu;","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport '../css/imgupload.css';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Menu from \"../Menu\";\r\n\r\nfunction ImageUpload() {\r\n    const navigate = useNavigate();\r\n\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [preview, setPreview] = useState(null);\r\n    const [analysis, setAnalysis] = useState('');\r\n\r\n    // 스토어에서 사용자 데이터 가져오기\r\n    const userData = useSelector(state => state.userData);\r\n    const userId = userData ? userData.mem_id : '';\r\n\r\n    // 파일 선택 핸들러\r\n    const imgSelectHandler = (event) => {\r\n        const file = event.target.files[0];\r\n        setSelectedFile(file);\r\n\r\n        // 미리보기 설정\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            setPreview(reader.result);\r\n        };\r\n        if (file) {\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    // 파일 업로드 핸들러\r\n    const imgUploadHandler = () => {\r\n        if (!selectedFile) {\r\n            alert('이미지를 선택하세요.');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('images', selectedFile);\r\n        formData.append('mem_id', userId); // 스토어에서 가져온 사용자 ID 사용\r\n\r\n        axios.post('/member/PetImg', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log(response.data);\r\n                if (response.data) {\r\n                    alert('이미지 업로드 성공');\r\n                    analyzeResult();\r\n                } else {\r\n                    alert('이미지 업로드 실패');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error('이미지 업로드 중 오류 발생:', error);\r\n                alert('이미지 업로드 중 오류 발생');\r\n            });\r\n    };\r\n\r\n    // 이미지 분석 요청 핸들러\r\n    const analyzeResult = () => {\r\n        axios.get(`/member/images/analyze/${userId}`)\r\n            .then(response => {\r\n                console.log('분석 결과:', response.data);\r\n                setAnalysis(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('이미지 분석 중 오류 발생:', error);\r\n                alert('이미지 분석 중 오류 발생');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Menu/>\r\n            <div className=\"upload-container\">\r\n                <h2>이미지 업로드</h2>\r\n                <input type=\"file\" onChange={imgSelectHandler}/>\r\n                {preview && <img src={preview} alt=\"미리보기\" style={{width: '750px', height: '750px'}}/>}\r\n                <button onClick={imgUploadHandler}>업로드</button>\r\n                {analysis && (\r\n                    <div>\r\n                        <h3>분석 결과:</h3>\r\n                        <p>{analysis}</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageUpload;\r\n"],"names":["navigate","useNavigate","dispatch","useDispatch","state","store","getState","_jsxs","className","children","isLoggedIn","_jsx","onClick","handleLogout","logout","Link","to","selectedFile","setSelectedFile","useState","preview","setPreview","analysis","setAnalysis","userData","useSelector","userId","mem_id","analyzeResult","axios","get","concat","then","response","console","log","data","catch","error","alert","Menu","type","onChange","event","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","src","alt","style","width","height","imgUploadHandler","formData","FormData","append","post","headers"],"sourceRoot":""}