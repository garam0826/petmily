{"version":3,"file":"static/js/64.535fa2e3.chunk.js","mappings":"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","sources":["Menu.jsx","member/ImageAnalyze.jsx","webpack://frontend/./src/css/recommend.css?6bff"],"sourcesContent":["import React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport store from \"./member/Store\";\r\nimport {logout} from \"./member/Reducer\";\r\nimport menustyle from \"./css/menu.css\"\r\nfunction Memu() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const state = store.getState();\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n        navigate(\"/main\");\r\n    };\r\n    return(\r\n        <div className=\"menubar\">\r\n            {state.isLoggedIn ? (\r\n                <button className=\"login\" onClick={handleLogout}>로그아웃</button>\r\n            ) : (\r\n                <button className=\"login\" onClick={() => navigate(\"/member/login\")}>로그인</button>\r\n            )}\r\n\r\n            <ul>\r\n                <li onClick={() => navigate(\"/main\")}>홈</li>\r\n                <li onClick={() => navigate(\"/animal\")}>보호 중인 동물</li>\r\n                <li onClick={() => navigate(\"/recommend\")}>반려견 추천</li>\r\n                <li onClick={() => navigate(\"/board/list\")}>게시판</li>\r\n                <li onClick={() => navigate(\"/\")}>유기견 입양 과정</li>\r\n                <li className=\"dropdown\">\r\n                    <span>회원 정보</span>\r\n                    <div className=\"dropdown-content\">\r\n                        <Link to=\"/member/mypage\">정보 확인 및 수정</Link>\r\n                        <Link to=\"/member/mypage/mycart\">찜 목록</Link>\r\n                        <Link to=\"/member/mypage\">내가 작성한 글과 댓글</Link>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Memu;","/*\r\nimport React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport '../css/imgupload.css';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Menu from \"../Menu\";\r\n\r\nfunction ImageAnalyze() {\r\n    const [analysis, setAnalysis] = useState('');\r\n\r\n    // 스토어에서 사용자 데이터 가져오기\r\n    const userData = useSelector(state => state.userData);\r\n    const userId = userData ? userData.mem_id : '';\r\n\r\n    // 이미지 분석 요청 핸들러\r\n    useEffect(() => {\r\n        const analyzeResult = () => {\r\n            if (!userId) {\r\n                console.error(\"User ID is not available\");\r\n                return;\r\n            }\r\n            axios.get(`/member/images/analyze/${userId}`)\r\n                .then(response => {\r\n                    console.log('분석 결과:', response.data);\r\n                    setAnalysis(response.data);\r\n                })\r\n                .catch(error => {\r\n                    console.error('이미지 분석 중 오류 발생:', error);\r\n                    alert('이미지 분석 중 오류 발생');\r\n                });\r\n        };\r\n        analyzeResult();\r\n    }, [userId]);\r\n\r\n    return (\r\n        <div>\r\n            <Menu/>\r\n            <div className=\"analyze-container\">\r\n                <h2>이미지 분석 결과</h2>\r\n                {analysis && (\r\n                    <div>\r\n                        <h3>분석 결과:</h3>\r\n                        <p>{analysis}</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageAnalyze;\r\n*/\r\nimport React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport {useLocation} from 'react-router-dom';\r\nimport Menu from \"../Menu\";\r\nimport '../css/result.css';\r\nimport '../css/recommend.css';\r\n\r\nfunction ImageAnalyze() {\r\n    const [analysis, setAnalysis] = useState({});\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    /*const location = useLocation();\r\n    const imageUrl = location.state?.imageUrl || '';\r\n*/\r\n    // 스토어에서 사용자 데이터 가져오기\r\n    const userData = useSelector(state => state.userData);\r\n    const userId = userData ? userData.mem_id : '';\r\n\r\n    // 이미지 분석 요청 핸들러\r\n    useEffect(() => {\r\n        const analyzeResult = async () => {\r\n            if (!userId) {\r\n                console.error(\"User ID is not available\");\r\n                return;\r\n            }\r\n            try {\r\n                const response = await axios.get(`/member/images/analyze/${userId}`);\r\n                setAnalysis(response.data);\r\n            } catch (error) {\r\n                console.error('이미지 분석 중 오류 발생:', error);\r\n                alert('이미지 분석 중 오류 발생');\r\n            }\r\n        };\r\n\r\n        const imageUrl = async () => {\r\n            try {\r\n                const response = await axios.get(`/member/images/${userId}`);\r\n                setImageUrl(response.data);\r\n            } catch (error) {\r\n                console.error('이미지 URL 가져오기 중 오류 발생:', error);\r\n                alert('이미지 URL 가져오기 중 오류 발생');\r\n            }\r\n        };\r\n\r\n        if (userId) {\r\n            analyzeResult();\r\n            imageUrl();\r\n        }\r\n\r\n    }, [userId]);\r\n\r\n    return (\r\n        <div>\r\n            <Menu/>\r\n            <main className=\"container_result\">\r\n                <div data-case=\"text79\" className=\"userEL15637124\">\r\n                    <div className=\"container_result\">\r\n                        <div className=\"row\" data-matrix-loop=\"true\" data-matrix-column=\"1\">\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 item\">\r\n                                <div className=\"cl_caption\" data-edit=\"true\" data-selector=\".cl_caption\">\r\n                                    <hr className=\"fr-hr\"\r\n                                        style={{borderBottom: '2px solid #d6d7d8', width: '35px', margin: '0 auto'}}\r\n                                        align=\"center\"/>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}><br/></span></span>\r\n                                    </div>\r\n                                    <div><span\r\n                                        style={{\r\n                                            fontFamily: \"'Seoul Namsan'\",\r\n                                            fontSize: '30px'\r\n                                        }}>이미지 분석 결과</span>\r\n                                    </div>\r\n                                    <div><span className=\"fsize13\"><span style={{\r\n                                        color: 'rgb(138, 139, 142)',\r\n                                        fontFamily: \"'Nanum Barun Gothic'\"\r\n                                    }}>​</span></span></div>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}>분석된 이미지를 기반으로 품종을 예측합니다. (최대 3개의 품종이 표시됩니다.)</span></span>\r\n                                    </div>\r\n                                    <div><br/></div>\r\n                                    <hr className=\"fr-hr\"\r\n                                        style={{borderBottom: '2px solid #d6d7d8', width: '35px', margin: '0 auto'}}\r\n                                        align=\"center\"/>\r\n                                    <div><br/></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {imageUrl && <img src={imageUrl} alt=\"Analyzed\" style={{width: '300px', height: '300px'}}/>}\r\n                {analysis && (\r\n                    <div className=\"card_result\">\r\n                        <h3 className=\"h3_result\">분석 결과</h3>\r\n                        <p>[ 품종 비율 1순위 ]<br/>{analysis.className1}<br/>({analysis.probability1.toFixed(2)}%)</p>\r\n                        <p>[ 품종 비율 2순위 ]<br/>{analysis.className2}<br/>({analysis.probability2.toFixed(2)}%)</p>\r\n                        <p>[ 품종 비율 3순위 ]<br/>{analysis.className3}<br/>({analysis.probability3.toFixed(2)}%)</p>\r\n                    </div>\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageAnalyze;","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["navigate","useNavigate","dispatch","useDispatch","state","store","getState","_jsxs","className","children","isLoggedIn","_jsx","onClick","handleLogout","logout","Link","to","analysis","setAnalysis","useState","imageUrl","setImageUrl","userData","useSelector","userId","mem_id","useEffect","async","response","axios","get","concat","data","error","console","alert","analyzeResult","Menu","style","borderBottom","width","margin","align","color","fontFamily","fontSize","src","alt","height","className1","probability1","toFixed","className2","probability2","className3","probability3"],"sourceRoot":""}