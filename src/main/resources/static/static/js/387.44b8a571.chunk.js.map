{"version":3,"file":"static/js/387.44b8a571.chunk.js","mappings":"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","sources":["Menu.jsx","member/MyEdit.jsx","webpack://frontend/./src/css/base.css?4d1b"],"sourcesContent":["import React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport store from \"./member/Store\";\r\nimport {logout} from \"./member/Reducer\";\r\nimport menustyle from \"./css/menu.css\"\r\nfunction Memu() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const state = store.getState();\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n        navigate(\"/main\");\r\n    };\r\n    return(\r\n        <div className=\"menubar\">\r\n            {state.isLoggedIn ? (\r\n                <button className=\"login\" onClick={handleLogout}>로그아웃</button>\r\n            ) : (\r\n                <button className=\"login\" onClick={() => navigate(\"/member/login\")}>로그인</button>\r\n            )}\r\n\r\n            <ul>\r\n                <li onClick={() => navigate(\"/main\")}>홈</li>\r\n                <li onClick={() => navigate(\"/animal\")}>보호 중인 동물</li>\r\n                <li onClick={() => navigate(\"/recommend\")}>반려견 추천</li>\r\n                <li onClick={() => navigate(\"/board/list\")}>게시판</li>\r\n                <li onClick={() => navigate(\"/\")}>유기견 입양 과정</li>\r\n                <li className=\"dropdown\">\r\n                    <span>회원 정보</span>\r\n                    <div className=\"dropdown-content\">\r\n                        <Link to=\"/member/mypage\">정보 확인 및 수정</Link>\r\n                        <Link to=\"/member/mypage/mycart\">찜 목록</Link>\r\n                        <Link to=\"/member/mypage\">내가 작성한 글과 댓글</Link>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Memu;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport store from \"./Store\";\r\nimport Menu from \"../Menu\";\r\nimport styles from \"../css/base.css\"\r\n\r\nfunction MyEdit() {\r\n    const [error, setError] = useState(null);\r\n    const [newMemberInfo, setNewMemberInfo] = useState({\r\n        mem_id: '',\r\n        mem_pw: '',\r\n        nickname: '',\r\n        email: '',\r\n        region: '',\r\n        county_district: '',\r\n        reg_date: '',\r\n        edit_date: ''\r\n    });\r\n    const [updateMessage, setUpdateMessage] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const state = store.getState();\r\n    const userId = state.isLoggedIn ? state.userData.mem_id : null;\r\n\r\n    const [select_region, setRegion] = useState('');\r\n    const [country_district, setCountry_district] = useState('');\r\n    const [regionList, setRegionList] = useState([]);\r\n    const [districtList, setDistrictList] = useState([]);\r\n    const [selectedRegion, setSelectedRegion] = useState('');\r\n\r\n    // 입력받은 수정 정보 처리\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        // Update the new member info state based on input changes\r\n        setNewMemberInfo(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n\r\n        console.log(newMemberInfo);\r\n    };\r\n\r\n    // 회원 정보 가져오기\r\n    const fetchMemberInfo = async () => {\r\n        try {\r\n            const response = await axios.get(`/member/MyPage?mem_id=${userId}`);\r\n            setNewMemberInfo(response.data);\r\n            console.log(userId);\r\n            setError(null);\r\n        } catch (error) {\r\n            setError('사용자 정보를 가져오는 중에 오류가 발생했습니다.');\r\n        }\r\n    };\r\n\r\n    // 컴포넌트가 마운트될 때 회원 정보 가져오기\r\n    useEffect(() => {\r\n        fetchMemberInfo();\r\n        // 페이지가 처음 로드될 때 지역 목록을 가져오는 함수\r\n        const fetchRegionList = async () => {\r\n            try {\r\n                const response = await axios.get('/member/SignUp'); // 백엔드 SignUp 엔드포인트 호출\r\n                setRegionList(response.data); // 가져온 데이터를 상태에 설정\r\n            } catch (error) {\r\n                console.error('Error fetching region list:', error);\r\n            }\r\n        };\r\n\r\n        fetchRegionList(); // 함수 호출\r\n    }, []); // 빈 배열을 전달하여 페이지가 처음 로드될 때만 실행되도록 설정\r\n\r\n    const handleRegionChange = async (event) => {\r\n        const selectedRegion = event.target.value; // 선택된 지역 이름 가져오기\r\n        setSelectedRegion(selectedRegion); // 선택된 지역을 상태에 설정\r\n        setRegion(selectedRegion);\r\n        try {\r\n            const response = await axios.get(`/member/SearchDistrict?reg_name=${selectedRegion}`); // 백엔드 searchDistrict 엔드포인트 호출\r\n            setDistrictList(response.data); // 가져온 데이터를 상태에 설정\r\n        } catch (error) {\r\n            console.error('Error fetching district list:', error);\r\n        }\r\n    };\r\n    const handleDistrictChange = async (event) => {\r\n        const selectedDistrict = event.target.value; // 선택된 지역 이름 가져오기\r\n        setCountry_district(selectedDistrict);\r\n    };\r\n\r\n    // 회원 정보 수정\r\n    const handleUpdateMember = async () => {\r\n        console.log(newMemberInfo);\r\n        try {\r\n            const response = await axios.put('/member/MyPage/Update', newMemberInfo);\r\n            alert('회원정보 수정 성공!');\r\n        } catch (error) {\r\n            console.\r\n            error('Error updating member info:', error);\r\n            alert(error);\r\n            setUpdateMessage('회원정보 수정 실패');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Menu />\r\n            <h1>정보 수정</h1>\r\n            <form>\r\n                <h2>회원 정보 수정</h2>\r\n                <div style={styles.wrapper}>\r\n                    <label style={styles.contentContainer}>\r\n                        PW:\r\n                        <input type=\"text\" placeholder=\"새 비번\" name=\"mem_pw\" value={newMemberInfo.mem_pw}\r\n                               onChange={handleInputChange}/>\r\n                    </label>\r\n                </div>\r\n                <div style={styles.wrapper}>\r\n                    <label style={styles.contentContainer}>\r\n                        Nick Name:\r\n                        <input type=\"text\" placeholder=\"새 닉네임\" name=\"nickname\" value={newMemberInfo.nickname}\r\n                               onChange={handleInputChange}/>\r\n                    </label>\r\n                </div>\r\n                <div style={styles.wrapper}>\r\n                    <label style={styles.contentContainer}>\r\n                        Email:\r\n                        <input type=\"text\" placeholder=\"새 이메일\" name=\"email\" value={newMemberInfo.email}\r\n                               onChange={handleInputChange}/>\r\n                    </label>\r\n                </div>\r\n                <div style={styles.wrapper}>\r\n                    <label htmlFor=\"region\">Region:</label>\r\n                    <select id=\"region\" onChange={handleRegionChange}>\r\n                        <option value=\"\">{newMemberInfo.region}</option>\r\n                        {regionList.map((region) => (\r\n                            <option key={select_region} value={region}>{region}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div style={styles.wrapper}>\r\n                    <label htmlFor=\"district\">District:</label>\r\n                    <select id=\"district\" onChange={handleDistrictChange}>\r\n                        <option value=\"\">{newMemberInfo.county_district}</option>\r\n                        {districtList.map((district) => (\r\n                            <option key={country_district}\r\n                                    value={district.dist_name}>{district.dist_name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </form>\r\n            <form>\r\n                <h2> 이미지 올리는 부분 - 버튼 누르면 파일 탐색기 </h2>\r\n                <button>파일 탐색기 열기</button>\r\n                {message && <p>{message}</p>}\r\n                {error && <p>{error}</p>}\r\n            </form>\r\n            <form>\r\n                <h2> 질문 점수 수정하기</h2>\r\n                <button>점수 수정</button>\r\n            </form>\r\n            <button onClick={handleUpdateMember}>수정 완료하기</button>\r\n            {updateMessage && <p>{updateMessage}</p>}\r\n            <hr/>\r\n            <button type=\"button\" onClick={() => navigate(\"/member/mypage\")}>mypage로</button>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default MyEdit;\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["navigate","useNavigate","dispatch","useDispatch","state","store","getState","_jsxs","className","children","isLoggedIn","_jsx","onClick","handleLogout","logout","Link","to","error","setError","useState","newMemberInfo","setNewMemberInfo","mem_id","mem_pw","nickname","email","region","county_district","reg_date","edit_date","updateMessage","setUpdateMessage","message","setMessage","userId","userData","select_region","setRegion","country_district","setCountry_district","regionList","setRegionList","districtList","setDistrictList","selectedRegion","setSelectedRegion","handleInputChange","e","name","value","target","prevState","console","log","useEffect","async","response","axios","get","concat","data","fetchMemberInfo","fetchRegionList","React","Menu","style","styles","wrapper","contentContainer","type","placeholder","onChange","htmlFor","id","event","map","selectedDistrict","district","dist_name","put","alert"],"sourceRoot":""}