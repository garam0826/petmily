{"version":3,"file":"static/js/387.3fb7b9b4.chunk.js","mappings":"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","sources":["Menu.jsx","member/MyEdit.jsx"],"sourcesContent":["import React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport store from \"./member/Store\";\r\nimport {logout} from \"./member/Reducer\";\r\n\r\nfunction Menu() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const state = store.getState();\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n        navigate(\"/main\");\r\n    };\r\n    return(\r\n        <div className=\"menubar\">\r\n            {state.isLoggedIn ? (\r\n                <button className=\"login\" onClick={handleLogout}>로그아웃</button>\r\n            ) : (\r\n                <button className=\"login\" onClick={() => navigate(\"/member/login\")}>로그인</button>\r\n            )}\r\n\r\n            <ul>\r\n                <li onClick={() => navigate(\"/main\")}>홈</li>\r\n                <li onClick={() => navigate(\"/animal\")}>보호 중인 동물</li>\r\n                <li onClick={() => navigate(\"/recommend\")}>반려견 추천</li>\r\n                <li onClick={() => navigate(\"/board/list\")}>게시판</li>\r\n                <li onClick={() => navigate(\"/\")}>유기견 입양 과정</li>\r\n                <li className=\"dropdown\">\r\n                    <span>회원 정보</span>\r\n                    <div className=\"dropdown-content\">\r\n                        <Link to=\"/member/mypage\">정보 확인 및 수정</Link>\r\n                        <Link to=\"/member/mypage\">찜 목록</Link>\r\n                        <Link to=\"/member/mypage\">내가 작성한 글과 댓글</Link>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport store from \"./Store\";\r\nimport Menu from \"../Menu\";\r\n\r\nfunction MyEdit() {\r\n    const [error, setError] = useState(null);\r\n    const [newMemberInfo, setNewMemberInfo] = useState({\r\n        mem_id: '',\r\n        mem_pw: '',\r\n        nickname: '',\r\n        email: '',\r\n        region: '',\r\n        county_district: '',\r\n        reg_date: '',\r\n        edit_date: ''\r\n    });\r\n    const [updateMessage, setUpdateMessage] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const state = store.getState();\r\n    const userId = state.isLoggedIn ? state.userData.mem_id : null;\r\n\r\n    const styles = {\r\n        wrapper: {\r\n            margin: 8,\r\n            padding: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            border: \"1px solid grey\",\r\n            borderRadius: 16,\r\n        },\r\n        contentContainer: {\r\n            marginLeft: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"colum\",\r\n            justifyContent: \"center\",\r\n        }\r\n    };\r\n\r\n    // 입력받은 수정 정보 처리\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        // Update the new member info state based on input changes\r\n        setNewMemberInfo(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n\r\n        console.log(newMemberInfo);\r\n    };\r\n\r\n    // 회원 정보 가져오기\r\n    const fetchMemberInfo = async () => {\r\n        try {\r\n            const response = await axios.get(`/member/MyPage?mem_id=${userId}`);\r\n            setNewMemberInfo(response.data);\r\n            console.log(userId);\r\n            setError(null);\r\n        } catch (error) {\r\n            setError('사용자 정보를 가져오는 중에 오류가 발생했습니다.');\r\n        }\r\n    };\r\n\r\n    // 컴포넌트가 마운트될 때 회원 정보 가져오기\r\n    useEffect(() => {\r\n        fetchMemberInfo();\r\n    }, []); // 빈 배열을 전달하여 컴포넌트가 마운트될 때 한 번만 실행되도록 함\r\n\r\n    // 회원 정보 수정\r\n    const handleUpdateMember = async () => {\r\n        console.log(newMemberInfo);\r\n        try {\r\n            const response = await axios.put('/member/MyPage/Update', newMemberInfo);\r\n            alert('회원정보 수정 성공!');\r\n        } catch (error) {\r\n            console.\r\n            error('Error updating member info:', error);\r\n            alert(error);\r\n            setUpdateMessage('회원정보 수정 실패');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Menu />\r\n            <form>\r\n                <h2>회원 정보 수정</h2>\r\n                <div style={styles.wrapper}>\r\n                    <label style={styles.contentContainer}>\r\n                        PW:\r\n                        <input type=\"text\" placeholder=\"새 비번\" name=\"mem_pw\" value={newMemberInfo.mem_pw}\r\n                               onChange={handleInputChange}/>\r\n                    </label>\r\n                </div>\r\n                <div style={styles.wrapper}>\r\n                    <label style={styles.contentContainer}>\r\n                        Nick Name:\r\n                        <input type=\"text\" placeholder=\"새 닉네임\" name=\"nickname\" value={newMemberInfo.nickname}\r\n                               onChange={handleInputChange}/>\r\n                    </label>\r\n                </div>\r\n                <div style={styles.wrapper}>\r\n                    <label style={styles.contentContainer}>\r\n                        Email:\r\n                        <input type=\"text\" placeholder=\"새 이메일\" name=\"email\" value={newMemberInfo.email}\r\n                               onChange={handleInputChange}/>\r\n                    </label>\r\n                </div>\r\n                <div style={styles.wrapper}>\r\n                    <label style={styles.contentContainer}>\r\n                        Region:\r\n                        <input type=\"text\" placeholder=\"새 주소(도)\" name=\"region\" value={newMemberInfo.region}\r\n                               onChange={handleInputChange}/>\r\n                    </label>\r\n                </div>\r\n                <div style={styles.wrapper}>\r\n                    <label style={styles.contentContainer}>\r\n                        county_district:\r\n                        <input type=\"text\" placeholder=\"새 주소(도)\" name=\"county_district\" value={newMemberInfo.county_district}\r\n                               onChange={handleInputChange}/>\r\n                    </label>\r\n                </div>\r\n                <button onClick={handleUpdateMember}>수정</button>\r\n                {updateMessage && <p>{updateMessage}</p>}\r\n\r\n            </form>\r\n            <form>\r\n                {message && <p>{message}</p>}\r\n                {error && <p>{error}</p>}\r\n            </form>\r\n            <hr/>\r\n            <button type=\"button\" onClick={() => navigate(\"/member/mypage\")}>mypage로</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyEdit;\r\n"],"names":["navigate","useNavigate","dispatch","useDispatch","state","store","getState","_jsxs","className","children","isLoggedIn","_jsx","onClick","handleLogout","logout","Link","to","error","setError","useState","newMemberInfo","setNewMemberInfo","mem_id","mem_pw","nickname","email","region","county_district","reg_date","edit_date","updateMessage","setUpdateMessage","message","setMessage","userId","userData","styles","wrapper","margin","padding","display","flexDirection","border","borderRadius","contentContainer","marginLeft","justifyContent","handleInputChange","e","name","value","target","prevState","console","log","useEffect","async","response","axios","get","concat","data","fetchMemberInfo","Menu","style","type","placeholder","onChange","put","alert"],"sourceRoot":""}