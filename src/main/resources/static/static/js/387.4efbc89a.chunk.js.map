{"version":3,"file":"static/js/387.4efbc89a.chunk.js","mappings":"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","sources":["member/MyEdit.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport store from \"./Store\";\r\n\r\nfunction MyEdit() {\r\n    const [error, setError] = useState(null);\r\n    const [newMemberInfo, setNewMemberInfo] = useState({\r\n        mem_id: '',\r\n        mem_pw: '',\r\n        nickname: '',\r\n        email: '',\r\n        region: '',\r\n        county_district: '',\r\n        reg_date: '',\r\n        edit_date: ''\r\n    });\r\n    const [updateMessage, setUpdateMessage] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const state = store.getState();\r\n    const userId = state.isLoggedIn ? state.userData.mem_id : null;\r\n\r\n    const styles = {\r\n        wrapper: {\r\n            margin: 8,\r\n            padding: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            border: \"1px solid grey\",\r\n            borderRadius: 16,\r\n        },\r\n        contentContainer: {\r\n            marginLeft: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"colum\",\r\n            justifyContent: \"center\",\r\n        }\r\n    };\r\n\r\n    // 입력받은 수정 정보 처리\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        // Update the new member info state based on input changes\r\n        setNewMemberInfo(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n\r\n        console.log(newMemberInfo);\r\n    };\r\n\r\n    // 회원 정보 가져오기\r\n    const fetchMemberInfo = async () => {\r\n        try {\r\n            const response = await axios.get(`/member/MyPage?mem_id=${userId}`);\r\n            setNewMemberInfo(response.data);\r\n            console.log(userId);\r\n            setError(null);\r\n        } catch (error) {\r\n            setError('사용자 정보를 가져오는 중에 오류가 발생했습니다.');\r\n        }\r\n    };\r\n\r\n    // 컴포넌트가 마운트될 때 회원 정보 가져오기\r\n    useEffect(() => {\r\n        fetchMemberInfo();\r\n    }, []); // 빈 배열을 전달하여 컴포넌트가 마운트될 때 한 번만 실행되도록 함\r\n\r\n    // 회원 정보 수정\r\n    const handleUpdateMember = async () => {\r\n        console.log(newMemberInfo);\r\n        try {\r\n            const response = await axios.put('/member/MyPage/Update', newMemberInfo);\r\n            alert('회원정보 수정 성공!');\r\n        } catch (error) {\r\n            console.\r\n            error('Error updating member info:', error);\r\n            alert(error);\r\n            setUpdateMessage('회원정보 수정 실패');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <h2>회원 정보 수정</h2>\r\n                <div style={styles.wrapper}>\r\n                    <label style={styles.contentContainer}>\r\n                        PW:\r\n                        <input type=\"text\" placeholder=\"새 비번\" name=\"mem_pw\" value={newMemberInfo.mem_pw}\r\n                               onChange={handleInputChange}/>\r\n                    </label>\r\n                </div>\r\n                <div style={styles.wrapper}>\r\n                    <label style={styles.contentContainer}>\r\n                        Nick Name:\r\n                        <input type=\"text\" placeholder=\"새 닉네임\" name=\"nickname\" value={newMemberInfo.nickname}\r\n                               onChange={handleInputChange}/>\r\n                    </label>\r\n                </div>\r\n                <div style={styles.wrapper}>\r\n                    <label style={styles.contentContainer}>\r\n                        Email:\r\n                        <input type=\"text\" placeholder=\"새 이메일\" name=\"email\" value={newMemberInfo.email}\r\n                               onChange={handleInputChange}/>\r\n                    </label>\r\n                </div>\r\n                <div style={styles.wrapper}>\r\n                    <label style={styles.contentContainer}>\r\n                        Region:\r\n                        <input type=\"text\" placeholder=\"새 주소(도)\" name=\"region\" value={newMemberInfo.region}\r\n                               onChange={handleInputChange}/>\r\n                    </label>\r\n                </div>\r\n                <div style={styles.wrapper}>\r\n                    <label style={styles.contentContainer}>\r\n                        county_district:\r\n                        <input type=\"text\" placeholder=\"새 주소(도)\" name=\"county_district\" value={newMemberInfo.county_district}\r\n                               onChange={handleInputChange}/>\r\n                    </label>\r\n                </div>\r\n                <button onClick={handleUpdateMember}>수정</button>\r\n                {updateMessage && <p>{updateMessage}</p>}\r\n\r\n            </form>\r\n            <form>\r\n                {message && <p>{message}</p>}\r\n                {error && <p>{error}</p>}\r\n            </form>\r\n            <hr/>\r\n            <button type=\"button\" onClick={() => navigate(\"/member/mypage\")}>mypage로</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyEdit;\r\n"],"names":["error","setError","useState","newMemberInfo","setNewMemberInfo","mem_id","mem_pw","nickname","email","region","county_district","reg_date","edit_date","updateMessage","setUpdateMessage","message","setMessage","navigate","useNavigate","state","store","getState","userId","isLoggedIn","userData","styles","wrapper","margin","padding","display","flexDirection","border","borderRadius","contentContainer","marginLeft","justifyContent","handleInputChange","e","name","value","target","prevState","console","log","useEffect","async","response","axios","get","concat","data","fetchMemberInfo","_jsxs","children","_jsx","style","type","placeholder","onChange","onClick","put","alert"],"sourceRoot":""}