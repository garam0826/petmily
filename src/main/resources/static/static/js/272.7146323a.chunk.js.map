{"version":3,"file":"static/js/272.7146323a.chunk.js","mappings":"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","sources":["Menu.jsx","recommend/QuestionResult.jsx","recommend/Recommend_Result.jsx","webpack://frontend/./src/css/recommend.css?6bff"],"sourcesContent":["import React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport store from \"./member/Store\";\r\nimport {logout} from \"./member/Reducer\";\r\nimport menustyle from \"./css/menu.css\"\r\nfunction Memu() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const state = store.getState();\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n        navigate(\"/main\");\r\n    };\r\n    return(\r\n        <div className=\"menubar\">\r\n            {state.isLoggedIn ? (\r\n                <button className=\"login\" onClick={handleLogout}>로그아웃</button>\r\n            ) : (\r\n                <button className=\"login\" onClick={() => navigate(\"/member/login\")}>로그인</button>\r\n            )}\r\n\r\n            <ul>\r\n                <li onClick={() => navigate(\"/main\")}>홈</li>\r\n                <li onClick={() => navigate(\"/animal\")}>보호 중인 동물</li>\r\n                <li onClick={() => navigate(\"/recommend\")}>반려견 추천</li>\r\n                <li onClick={() => navigate(\"/board/list\")}>게시판</li>\r\n                <li onClick={() => navigate(\"/\")}>유기견 입양 과정</li>\r\n                <li className=\"dropdown\">\r\n                    <span>회원 정보</span>\r\n                    <div className=\"dropdown-content\">\r\n                        <Link to=\"/member/mypage\">정보 확인 및 수정</Link>\r\n                        <Link to=\"/member/mypage/mycart\">찜 목록</Link>\r\n                        <Link to=\"/member/mypage\">내가 작성한 글과 댓글</Link>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Memu;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport store from \"../member/Store\";\r\nimport Menu from \"../Menu\";\r\n\r\nimport '../css/menu.css';\r\nimport '../css/result.css';\r\nimport Recommend_Result from \"./Recommend_Result\";\r\n\r\nconst QuestionResult = () => {\r\n    const state = store.getState();\r\n    const userId = state.isLoggedIn ? state.userData.mem_id : null;\r\n\r\n    const [matches, setMatches] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    const [animals, setAnimals] = useState([]);\r\n\r\n    // 추천 매치 데이터를 가져오는 useEffect\r\n    useEffect(() => {\r\n        const fetchMatches = async () => {\r\n            try {\r\n                const response = await axios.get(`/member/profile/recommend/${userId}`);\r\n                setMatches(response.data);\r\n            } catch (err) {\r\n                setError('Failed to fetch matches');\r\n                console.error(err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        if (userId) {\r\n            fetchMatches();\r\n        }\r\n    }, [userId]);\r\n\r\n    useEffect(() => {\r\n        // Extract desertionNo from matches and set to animals state\r\n        const desertionNos = matches.map(match => match.desertionNo);\r\n        setAnimals(desertionNos);\r\n    }, [matches]);\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <Menu />\r\n            </header>\r\n            <main>\r\n                <Recommend_Result matches={animals} loading={loading} error={error} title={\"질문\"}/>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuestionResult;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport store from \"../member/Store\";\r\nimport Menu from \"../Menu\";\r\nimport \"../css/recommend.css\"\r\n\r\nimport '../css/menu.css';\r\nimport '../css/result.css';\r\n\r\nconst Recommend_Result = ({ matches, loading, error, title }) => {\r\n    const state = store.getState();\r\n    const userId = state.isLoggedIn ? state.userData.mem_id : null;\r\n\r\n    //const [matches, setMatches] = useState([]);\r\n    //const [loading, setLoading] = useState(true);\r\n    //const [error, setError] = useState(null);\r\n    console.log(matches);\r\n\r\n    const [animalInfos, setAnimalInfos] = useState({});\r\n    const [analysisResults, setAnalysisResults] = useState({});\r\n    const [fetchDataError, setFetchDataError] = useState(null);\r\n\r\n    // 매치된 반려동물 정보를 가져오는 useEffect\r\n    useEffect(() => {\r\n        const fetchData = async (desertionNo) => {\r\n            try {\r\n                const response = await axios.get(`/api/animal/${desertionNo}`);\r\n                setAnimalInfos(prevState => ({\r\n                    ...prevState,\r\n                    [desertionNo]: response.data\r\n                }));\r\n                await handleAnalysis(desertionNo, response.data.popfile);\r\n            } catch (error) {\r\n                console.error('Error fetching animal info:', error);\r\n                setFetchDataError('Error fetching animal info');\r\n            }\r\n        };\r\n\r\n        matches.forEach(desertionNo => {\r\n            if (!animalInfos[desertionNo]) {\r\n                fetchData(desertionNo);\r\n            }\r\n        });\r\n    }, [matches]);\r\n\r\n    const handleAnalysis = async (desertionNo, imageUrl) => {\r\n        try {\r\n            const response = await axios.get(`/api/animal/analyze?desertionNo=${desertionNo}&popfile=${imageUrl}`);\r\n            setAnalysisResults(prevState => ({\r\n                ...prevState,\r\n                [desertionNo]: response.data\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error analyzing image:', error);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    if (fetchDataError) {\r\n        return <div>{fetchDataError}</div>;\r\n    }\r\n\r\n    const formatDate = (dateStr) => {\r\n        if (!dateStr) return '날짜 정보 없음'; // dateStr이 정의되지 않은 경우 대체 문자열 반환\r\n        const year = dateStr.substring(0, 4);\r\n        const month = dateStr.substring(4, 6);\r\n        const day = dateStr.substring(6, 8);\r\n        return `${year}년 ${parseInt(month, 10)}월 ${parseInt(day, 10)}일`;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <main className=\"container\">\r\n                <div data-case=\"text79\" className=\"userEL15637124\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\" data-matrix-loop=\"true\" data-matrix-column=\"1\">\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 item\">\r\n                                <div className=\"cl_caption\" data-edit=\"true\" data-selector=\".cl_caption\">\r\n                                    <hr className=\"fr-hr\"\r\n                                        style={{borderBottom: '2px solid #d6d7d8', width: '35px', margin: '0 auto'}}\r\n                                        align=\"center\"/>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}><br/></span></span>\r\n                                    </div>\r\n                                    <div><span\r\n                                        style={{fontFamily: \"'Seoul Namsan'\", fontSize: '30px'}}>유기견 {title} 추천 결과</span>\r\n                                    </div>\r\n                                    <div><span className=\"fsize13\"><span style={{\r\n                                        color: 'rgb(138, 139, 142)',\r\n                                        fontFamily: \"'Nanum Barun Gothic'\"\r\n                                    }}>​</span></span></div>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}>사용자의 취향에 맞는 유기견 5마리입니다.</span></span>\r\n                                    </div>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}>(사진 위에 마우스를 올리면, 더 자세한 정보를 보실 수 있습니다.)<br/><br/></span></span>\r\n                                    </div>\r\n                                    <hr className=\"fr-hr\"\r\n                                        style={{borderBottom: '2px solid #d6d7d8', width: '35px', margin: '0 auto'}}\r\n                                        align=\"center\"/>\r\n                                    <div><br/></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {matches.length === 0 ? (\r\n                    <div>No matches found</div>\r\n                ) : (\r\n                    <div className=\"grid-container\">\r\n                        {matches.map((desertionNo) => (\r\n                            <div className=\"card\" key={desertionNo}>\r\n                                {animalInfos && (\r\n                                    <div>\r\n                                        <img src={animalInfos[desertionNo]?.popfile} alt=\"Animal\"/>\r\n                                        {analysisResults[desertionNo] && (\r\n                                            <div>\r\n                                                <hr/>\r\n                                                <p>[ 품종 비율 1순위 ]<br/>{analysisResults[desertionNo].className1}<br/>({analysisResults[desertionNo].probability1}%)</p>\r\n                                                <p>[ 품종 비율 2순위 ]<br/>{analysisResults[desertionNo].className2}<br/>({analysisResults[desertionNo].probability2}%)</p>\r\n                                                <p>[ 품종 비율 3순위 ]<br/>{analysisResults[desertionNo].className3}<br/>({analysisResults[desertionNo].probability3}%)</p>\r\n                                            </div>\r\n                                        )}\r\n                                        <div className=\"analysis-results\">\r\n                                            <br/>\r\n                                            {/* 확인용 <p>유기 번호: {animalInfos[match.desertionNo].desertionNo}</p>*/}\r\n                                            <p>발견 날짜: {animalInfos[desertionNo]?.happenDt}</p>\r\n                                            <p>발견 장소: {animalInfos[desertionNo]?.happenPlace}</p>\r\n                                            <p>나이: {animalInfos[desertionNo]?.age}</p>\r\n                                            <p>무게: {animalInfos[desertionNo]?.weight}</p>\r\n                                            <p>공고 시작 날짜: {animalInfos[desertionNo]?.noticeSdt}</p>\r\n                                            <p>공고 종료 날짜: {animalInfos[desertionNo]?.noticeEdt}</p>\r\n                                            <p>성별: {animalInfos[desertionNo]?.sexCd}</p>\r\n                                            <p>중성화 여부: {animalInfos[desertionNo]?.neuterYn}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Recommend_Result;\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["navigate","useNavigate","dispatch","useDispatch","state","store","getState","_jsxs","className","children","isLoggedIn","_jsx","onClick","handleLogout","logout","Link","to","QuestionResult","userId","userData","mem_id","matches","setMatches","useState","loading","setLoading","error","setError","animals","setAnimals","useEffect","async","response","axios","get","concat","data","err","console","fetchMatches","desertionNos","map","match","desertionNo","Menu","Recommend_Result","title","_ref","log","animalInfos","setAnimalInfos","analysisResults","setAnalysisResults","fetchDataError","setFetchDataError","forEach","prevState","handleAnalysis","popfile","fetchData","imageUrl","style","borderBottom","width","margin","align","color","fontFamily","fontSize","length","_animalInfos$desertio","_animalInfos$desertio2","_animalInfos$desertio3","_animalInfos$desertio4","_animalInfos$desertio5","_animalInfos$desertio6","_animalInfos$desertio7","_animalInfos$desertio8","_animalInfos$desertio9","src","alt","className1","probability1","className2","probability2","className3","probability3","happenDt","happenPlace","age","weight","noticeSdt","noticeEdt","sexCd","neuterYn"],"sourceRoot":""}