{"version":3,"file":"static/js/845.78acf688.chunk.js","mappings":"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","sources":["Menu.jsx","recommend/QuestionResult.jsx","recommend/Recommend_Result.jsx","webpack://frontend/./src/css/recommend.css?6bff"],"sourcesContent":["import React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport store from \"./member/Store\";\r\nimport {logout} from \"./member/Reducer\";\r\nimport menustyle from \"./css/menu.css\"\r\n\r\nimport logo from \"./logo/simple.png\"; //logo\r\nimport Button from '@mui/material/Button';\r\nfunction Memu() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const state = store.getState();\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n        navigate(\"/main\");\r\n    };\r\n    return(\r\n        <div className=\"menubar\">\r\n            {state.isLoggedIn ? (\r\n                <button className=\"login\" onClick={handleLogout}>로그아웃</button>\r\n            ) : (\r\n                <button className=\"login\" onClick={() => navigate(\"/member/login\")}>로그인</button>\r\n            )}\r\n\r\n            <ul>\r\n                {/* <li onClick={() => navigate(\"/main\")}>홈</li> */}\r\n                <li onClick={() => navigate(\"/main\")}>\r\n                    <img src={logo} style={{width: '150px', height: 'auto', marginTop: '-20px', marginLeft: '10px'}}/>\r\n                </li>\r\n                <li onClick={() => navigate(\"/animal\")}>보호 중인 동물</li>\r\n                <li onClick={() => navigate(\"/recommend\")}>반려견 추천</li>\r\n                <li onClick={() => navigate(\"/board/list\")}>게시판</li>\r\n                <li className=\"dropdown\">\r\n                    <span>회원 정보</span>\r\n                    <div className=\"dropdown-content\">\r\n                        <Link to=\"/member/mypage\">정보 확인 및 수정</Link>\r\n                        <Link to=\"/member/mypage/mycart\">찜 목록</Link>\r\n                        <Link to=\"/member/mypage/mycontent\">내가 작성한 글과 댓글</Link>\r\n                        <Link to=\"/member/mypage/imgUpload\">이미지 업로드</Link>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Memu;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport store from \"../member/Store\";\r\nimport Menu from \"../Menu\";\r\n\r\nimport '../css/menu.css';\r\nimport '../css/result.css';\r\nimport Recommend_Result from \"./Recommend_Result\";\r\n\r\nconst QuestionResult = () => {\r\n    const state = store.getState();\r\n    const userId = state.isLoggedIn ? state.userData.mem_id : null;\r\n\r\n    const [matches, setMatches] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    const [animals, setAnimals] = useState([]);\r\n\r\n    // 추천 매치 데이터를 가져오는 useEffect\r\n    useEffect(() => {\r\n        const fetchMatches = async () => {\r\n            try {\r\n                const response = await axios.get(`/member/profile/recommend/${userId}`);\r\n                setMatches(response.data);\r\n            } catch (err) {\r\n                setError('Failed to fetch matches');\r\n                console.error(err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        if (userId) {\r\n            fetchMatches();\r\n        }\r\n    }, [userId]);\r\n\r\n    useEffect(() => {\r\n        // Extract desertionNo from matches and set to animals state\r\n        const desertionNos = matches.map(match => match.desertionNo);\r\n        setAnimals(desertionNos);\r\n    }, [matches]);\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <Menu />\r\n            </header>\r\n            <main>\r\n                <Recommend_Result matches={animals} loading={loading} error={error} title={\"질문\"}/>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuestionResult;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport store from \"../member/Store\";\r\nimport Menu from \"../Menu\";\r\nimport \"../css/recommend.css\"\r\n\r\nimport '../css/menu.css';\r\nimport '../css/result.css';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst Recommend_Result = ({ matches, loading, error, title }) => {\r\n    const navigate = useNavigate();\r\n    const state = store.getState();\r\n    const userId = state.isLoggedIn ? state.userData.mem_id : null;\r\n\r\n    //const [matches, setMatches] = useState([]);\r\n    //const [loading, setLoading] = useState(true);\r\n    //const [error, setError] = useState(null);\r\n    console.log(matches);\r\n\r\n    const [animalInfos, setAnimalInfos] = useState({});\r\n    const [analysisResults, setAnalysisResults] = useState({});\r\n    const [fetchDataError, setFetchDataError] = useState(null);\r\n\r\n    const [visibleCount, setVisibleCount] = useState(5); // 초기에는 5마리만 보이도록 설정\r\n\r\n\r\n    // 매치된 반려동물 정보를 가져오는 useEffect\r\n    useEffect(() => {\r\n        const fetchData = async (desertionNo) => {\r\n            try {\r\n                const response = await axios.get(`/api/animal/${desertionNo}`);\r\n                setAnimalInfos(prevState => ({\r\n                    ...prevState,\r\n                    [desertionNo]: response.data\r\n                }));\r\n                await handleAnalysis(desertionNo, response.data.popfile);\r\n            } catch (error) {\r\n                console.error('Error fetching animal info:', error);\r\n                setFetchDataError('Error fetching animal info');\r\n            }\r\n        };\r\n\r\n        matches.forEach(desertionNo => {\r\n            if (!animalInfos[desertionNo]) {\r\n                fetchData(desertionNo);\r\n            }\r\n        });\r\n    }, [matches]);\r\n\r\n    const handleAnalysis = async (desertionNo, imageUrl) => {\r\n        try {\r\n            const response = await axios.get(`/api/animal/analyze?desertionNo=${desertionNo}&popfile=${imageUrl}`);\r\n            setAnalysisResults(prevState => ({\r\n                ...prevState,\r\n                [desertionNo]: response.data\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error analyzing image:', error);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    if (fetchDataError) {\r\n        return <div>{fetchDataError}</div>;\r\n    }\r\n\r\n    const handleDetailAnimal = (DesertionNo) => {\r\n        navigate('/animal/detail', {\r\n            state: {\r\n                desertionNo: DesertionNo,\r\n            },\r\n        });\r\n    };\r\n\r\n    const formatDate = (dateStr) => {\r\n        if (!dateStr) return '날짜 정보 없음'; // dateStr이 정의되지 않은 경우 대체 문자열 반환\r\n        const year = dateStr.substring(0, 4);\r\n        const month = dateStr.substring(4, 6);\r\n        const day = dateStr.substring(6, 8);\r\n        return `${year}년 ${parseInt(month, 10)}월 ${parseInt(day, 10)}일`;\r\n    };\r\n\r\n    const getNeuterYnText = (neuterYn) => {\r\n        switch (neuterYn) {\r\n            case 'Y':\r\n                return 'O';\r\n            case 'N':\r\n                return 'X';\r\n            case 'U':\r\n                return '모름';\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n\r\n    const getSexCdText = (sexCd) => {\r\n        switch (sexCd) {\r\n            case 'M':\r\n                return '수컷';\r\n            case 'F':\r\n                return '암컷';\r\n            case 'Q':\r\n                return '미상';\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n\r\n    const loadMore = () => {\r\n        setVisibleCount(prevCount => prevCount + 5); // 보여줄 강아지 수를 5마리씩 늘림\r\n    };\r\n\r\n    const currentTime = new Date().toISOString();\r\n    const addFavorite = (desertionNo) => {\r\n        axios.post(`/favorites/add?memId=${userId}&desertionNo=${desertionNo}`, {\r\n            mem_id: userId,\r\n            desertionNo: desertionNo,\r\n            created_at: currentTime,\r\n        })\r\n            .then(response => {\r\n                console.log(\"Favorite added successfully\");\r\n                alert(\"찜 목록에 담겼습니다!\");\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error adding favorite: \", error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <main className=\"container_result\">\r\n                <div data-case=\"text79\" className=\"userEL15637124\">\r\n                    <div className=\"container_result\">\r\n                        <div className=\"row\" data-matrix-loop=\"true\" data-matrix-column=\"1\">\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 item\">\r\n                                <div className=\"cl_caption\" data-edit=\"true\" data-selector=\".cl_caption\">\r\n                                    <hr className=\"fr-hr\"\r\n                                        style={{borderBottom: '2px solid #d6d7d8', width: '35px', margin: '0 auto'}}\r\n                                        align=\"center\"/>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}><br/></span></span>\r\n                                    </div>\r\n                                    <div><span\r\n                                        style={{\r\n                                            fontFamily: \"'Seoul Namsan'\",\r\n                                            fontSize: '30px'\r\n                                        }}>유기견 {title} 추천 결과</span>\r\n                                    </div>\r\n                                    <div><span className=\"fsize13\"><span style={{\r\n                                        color: 'rgb(138, 139, 142)',\r\n                                        fontFamily: \"'Nanum Barun Gothic'\"\r\n                                    }}>​</span></span></div>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}>사용자의 취향에 맞는 유기견 5마리입니다. 더 보고 싶으시면 아래 더보기 버튼을 눌러주세요. (최대 15마리까지 가능합니다.)</span></span>\r\n                                    </div>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}><br/>- 사진 위에 마우스를 올리면, 더 자세한 정보를 보실 수 있습니다.</span></span>\r\n                                    </div>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}>- 강아지를 클릭하면, 향후 성장시 특성&보호소 등 더 자세한 정보를 보실 수 있습니다.<br/><br/></span></span>\r\n                                    </div>\r\n                                    <hr className=\"fr-hr\"\r\n                                        style={{borderBottom: '2px solid #d6d7d8', width: '35px', margin: '0 auto'}}\r\n                                        align=\"center\"/>\r\n                                    <div><br/></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {matches.length === 0 ? (\r\n                    <div>No matches found</div>\r\n                ) : (\r\n                    <div className=\"grid-container_result\">\r\n                        {matches.slice(0, visibleCount).map((desertionNo, index) => (\r\n                            <div className=\"card_result\" key={desertionNo} style={{height: '730px'}}>\r\n                                {animalInfos && (\r\n                                    <div className=\"result\">\r\n                                        <h3 className=\"h3_result\">{index + 1}</h3>\r\n                                        <img src={animalInfos[desertionNo]?.popfile} alt=\"Animal\"/>\r\n                                        {analysisResults[desertionNo] && (\r\n                                            <div>\r\n                                                <hr/>\r\n                                                <p>[ 품종 비율 1순위\r\n                                                    ]<br/>{analysisResults[desertionNo].className1}<br/>({(analysisResults[desertionNo].probability1 * 100).toFixed(2)}%)\r\n                                                </p>\r\n                                                <p>[ 품종 비율 2순위\r\n                                                    ]<br/>{analysisResults[desertionNo].className2}<br/>({(analysisResults[desertionNo].probability2 * 100).toFixed(2)}%)\r\n                                                </p>\r\n                                                <p>[ 품종 비율 3순위\r\n                                                    ]<br/>{analysisResults[desertionNo].className3}<br/>({(analysisResults[desertionNo].probability3 * 100).toFixed(2)}%)\r\n                                                </p>\r\n                                            </div>\r\n                                        )}\r\n                                        <button className=\"like_button\" onClick={() => addFavorite(desertionNo)}\r\n                                                style={{width: '100%'}}>찜 추가\r\n                                        </button>\r\n                                        <div className=\"analysis-results\"  onClick={() => handleDetailAnimal(desertionNo)}>\r\n                                            <div className=\"analysis_info-result\">\r\n                                                <br/>\r\n                                                <p>발견 날짜: {formatDate(animalInfos[desertionNo]?.happenDt)}</p>\r\n                                                <p>발견 장소: {animalInfos[desertionNo]?.happenPlace}</p>\r\n                                                <p>나이: {animalInfos[desertionNo]?.age}</p>\r\n                                                <p>무게: {animalInfos[desertionNo]?.weight}</p>\r\n                                                <p>공고 시작 날짜: {animalInfos[desertionNo]?.noticeSdt}</p>\r\n                                                <p>공고 종료 날짜: {animalInfos[desertionNo]?.noticeEdt}</p>\r\n                                                <p>성별: {getSexCdText(animalInfos[desertionNo]?.sexCd)}</p>\r\n                                                <p>중성화 여부: {getNeuterYnText(animalInfos[desertionNo]?.neuterYn)}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n                {visibleCount < matches.length && (\r\n                    <Box style={{ display: 'flex', justifyContent: 'center' }}>\r\n                        <Button variant=\"contained\" style={{marginTop: '5px', width: '300px'}} onClick={loadMore}>더보기</Button>\r\n                    </Box>\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Recommend_Result;\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["navigate","useNavigate","dispatch","useDispatch","state","store","getState","_jsxs","className","children","isLoggedIn","_jsx","onClick","handleLogout","logout","src","logo","style","width","height","marginTop","marginLeft","Link","to","QuestionResult","userId","userData","mem_id","matches","setMatches","useState","loading","setLoading","error","setError","animals","setAnimals","useEffect","async","response","axios","get","concat","data","err","console","fetchMatches","desertionNos","map","match","desertionNo","Menu","Recommend_Result","title","_ref","log","animalInfos","setAnimalInfos","analysisResults","setAnalysisResults","fetchDataError","setFetchDataError","visibleCount","setVisibleCount","forEach","prevState","handleAnalysis","popfile","fetchData","imageUrl","formatDate","dateStr","year","substring","month","day","parseInt","getNeuterYnText","neuterYn","getSexCdText","sexCd","currentTime","Date","toISOString","borderBottom","margin","align","color","fontFamily","fontSize","length","slice","index","_animalInfos$desertio","_animalInfos$desertio2","_animalInfos$desertio3","_animalInfos$desertio4","_animalInfos$desertio5","_animalInfos$desertio6","_animalInfos$desertio7","_animalInfos$desertio8","_animalInfos$desertio9","alt","className1","probability1","toFixed","className2","probability2","className3","probability3","post","created_at","then","alert","catch","addFavorite","happenDt","happenPlace","age","weight","noticeSdt","noticeEdt","Box","display","justifyContent","Button","variant","loadMore","prevCount"],"sourceRoot":""}