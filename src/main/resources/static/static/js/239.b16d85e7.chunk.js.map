{"version":3,"file":"static/js/239.b16d85e7.chunk.js","mappings":"gLA8DA,QAxDA,WACI,MAAOA,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,OACtCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,OAC5BG,EAAeC,IAAoBJ,EAAAA,EAAAA,UAAS,CAC/CK,OAAQ,GACRC,OAAQ,GACRC,SAAU,GACVC,MAAO,GACPC,OAAQ,GACRC,iBAAkB,GAClBC,SAAU,GACVC,UAAW,KAGTC,GAAWC,EAAAA,EAAAA,MAGXC,EAAQC,EAAAA,EAAMC,WACdC,EAAKH,EAAMI,WAAaJ,EAAMK,SAASf,OAAS,KAoBtD,OAJAgB,EAAAA,EAAAA,YAAU,KAbcC,WACpB,IACI,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,yBAADC,OAA0BR,IAC1DnB,EAAcwB,EAASI,MACvBvB,EAAiBmB,EAASI,MAC1BzB,EAAS,KACb,CAAE,MAAOD,GACLC,EAAS,wIACTH,EAAc,KAClB,GAKA6B,EAAiB,GAClB,KAGCC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACKhC,GACG+B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qCACJD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,OAAKhC,EAAWO,WACnBwB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,OAAKhC,EAAWQ,WACnBuB,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,SAAOhC,EAAWS,gBAGzBwB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4CAEPC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASC,QAASA,IAAMpB,EAAS,kBAAkBiB,SAAC,8DAG7E,C","sources":["member/MyInfo.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport store from './Store';\r\n\r\nfunction MyInfo() {\r\n    const [memberInfo, setMemberInfo] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [newMemberInfo, setNewMemberInfo] = useState({\r\n        mem_id: '',\r\n        mem_pw: '',\r\n        nickname: '',\r\n        email: '',\r\n        region: '',\r\n        country_district: '',\r\n        reg_date: '',\r\n        edit_date: ''\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // 세션에서 사용자 아이디 가져오기\r\n    const state = store.getState();\r\n    const id = state.isLoggedIn ? state.userData.mem_id : null;\r\n\r\n    // 회원 정보 가져오기\r\n    const fetchMemberInfo = async () => {\r\n        try {\r\n            const response = await axios.get(`/member/MyPage?mem_id=${id}`);\r\n            setMemberInfo(response.data);\r\n            setNewMemberInfo(response.data);\r\n            setError(null);\r\n        } catch (error) {\r\n            setError('사용자 정보를 가져오는 중에 오류가 발생했습니다.');\r\n            setMemberInfo(null);\r\n        }\r\n    };\r\n\r\n    // 컴포넌트가 마운트될 때 회원 정보 가져오기\r\n    useEffect(() => {\r\n        fetchMemberInfo();\r\n    }, []); // 빈 배열을 전달하여 컴포넌트가 마운트될 때 한 번만 실행되도록 함\r\n\r\n    return (\r\n        <div>\r\n            {memberInfo ? (\r\n                <div>\r\n                    <h2>사용자 정보</h2>\r\n                    <p>ID: {memberInfo.mem_id}</p>\r\n                    <p>PW: {memberInfo.mem_pw}</p>\r\n                    <p>Name: {memberInfo.nickname}</p>\r\n                </div>\r\n            ) : (\r\n                <p>Please log in to view your information</p>\r\n            )}\r\n            <hr/>\r\n            <button type=\"button\" onClick={() => navigate(\"/member/mypage\")}>마이페이지 화면으로</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyInfo;\r\n"],"names":["memberInfo","setMemberInfo","useState","error","setError","newMemberInfo","setNewMemberInfo","mem_id","mem_pw","nickname","email","region","country_district","reg_date","edit_date","navigate","useNavigate","state","store","getState","id","isLoggedIn","userData","useEffect","async","response","axios","get","concat","data","fetchMemberInfo","_jsxs","children","_jsx","type","onClick"],"sourceRoot":""}