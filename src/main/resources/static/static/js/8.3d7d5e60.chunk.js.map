{"version":3,"file":"static/js/8.3d7d5e60.chunk.js","mappings":"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","sources":["Menu.jsx","member/MyContent.jsx"],"sourcesContent":["import React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport store from \"./member/Store\";\r\nimport {logout} from \"./member/Reducer\";\r\nimport menustyle from \"./css/menu.css\"\r\nfunction Memu() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const state = store.getState();\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n        navigate(\"/main\");\r\n    };\r\n    return(\r\n        <div className=\"menubar\">\r\n            {state.isLoggedIn ? (\r\n                <button className=\"login\" onClick={handleLogout}>로그아웃</button>\r\n            ) : (\r\n                <button className=\"login\" onClick={() => navigate(\"/member/login\")}>로그인</button>\r\n            )}\r\n\r\n            <ul>\r\n                <li onClick={() => navigate(\"/main\")}>홈</li>\r\n                <li onClick={() => navigate(\"/animal\")}>보호 중인 동물</li>\r\n                <li onClick={() => navigate(\"/recommend\")}>반려견 추천</li>\r\n                <li onClick={() => navigate(\"/board/list\")}>게시판</li>\r\n                <li onClick={() => navigate(\"/\")}>유기견 입양 과정</li>\r\n                <li className=\"dropdown\">\r\n                    <span>회원 정보</span>\r\n                    <div className=\"dropdown-content\">\r\n                        <Link to=\"/member/mypage\">정보 확인 및 수정</Link>\r\n                        <Link to=\"/member/mypage/mycart\">찜 목록</Link>\r\n                        <Link to=\"/member/mypage\">내가 작성한 글과 댓글</Link>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Memu;","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Menu from \"../Menu\";\r\nimport '../css/mycontent.css';\r\n\r\nfunction MyContent() {\r\n    const [posts, setPosts] = useState([]);\r\n    const [comments, setComments] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // 스토어에서 사용자 ID 가져오기\r\n    const userData = useSelector((state) => state.userData);\r\n    const userId = userData ? userData.mem_id : '';\r\n\r\n    // 사용자 ID를 기반으로 필터링된 글 목록을 가져오는 함수\r\n    const MyContents = async (userId) => {\r\n        try {\r\n            const response = await axios.get(`/board/List?userId=${userId}`);\r\n            return response.data.b_List;\r\n        } catch (error) {\r\n            console.error('Error fetching user posts:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n// 사용자 ID를 기반으로 필터링된 댓글 목록을 가져오는 함수\r\n    const MyReply = async (userId) => {\r\n        try {\r\n            const response = await axios.get(`/board/List?userId=${userId}`);\r\n            return response.data.b_Cnt;\r\n        } catch (error) {\r\n            console.error('Error fetching user comments:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const userPosts = await MyContents(userId);\r\n                const userComments = await MyReply(userId);\r\n\r\n                setPosts(userPosts);\r\n                setComments(userComments);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [userId]);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Menu/>\r\n            <div className=\"user-content-container\">\r\n                <h2>{userData.username}의 작성 글</h2>\r\n                <div className=\"user-posts\">\r\n                    {posts.length > 0 ? (\r\n                        posts.map((post) => (\r\n                            <div key={post.idx} className=\"post-item\">\r\n                                <h3>{post.title}</h3>\r\n                                <p>{post.content}</p>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <p>작성한 글이 없습니다.</p>\r\n                    )}\r\n                </div>\r\n\r\n                <h2>{userData.username}의 작성 댓글</h2>\r\n                <div className=\"user-comments\">\r\n                    {comments.length > 0 ? (\r\n                        comments.map((comment) => (\r\n                            <div key={comment.reply_idx} className=\"comment-item\">\r\n                                <p>{comment.content}</p>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <p>작성한 댓글이 없습니다.</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyContent;"],"names":["navigate","useNavigate","dispatch","useDispatch","state","store","getState","_jsxs","className","children","isLoggedIn","_jsx","onClick","handleLogout","logout","Link","to","posts","setPosts","useState","comments","setComments","loading","setLoading","userData","useSelector","userId","mem_id","useEffect","async","userPosts","axios","get","concat","data","b_List","error","console","MyContents","userComments","b_Cnt","MyReply","fetchData","Menu","username","length","map","post","title","content","idx","comment","reply_idx"],"sourceRoot":""}