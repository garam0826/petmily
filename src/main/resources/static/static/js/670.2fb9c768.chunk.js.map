{"version":3,"file":"static/js/670.2fb9c768.chunk.js","mappings":"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","sources":["board/ReadContent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, useParams, Link } from 'react-router-dom';\r\nimport {useSelector} from \"react-redux\";\r\nimport './readBoard.css';\r\n\r\nfunction ReadContent() {\r\n    const navigate = useNavigate();\r\n    const { idx } = useParams();\r\n    const [board, setBoard] = useState({});\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n\r\n    const userData = useSelector(state => state.userData);\r\n    const reg_name = userData ? userData.mem_id : '';\r\n    const currentTime = new Date().toISOString();\r\n\r\n    useEffect(() => {\r\n        // 게시글 조회 API 호출\r\n        axios.get(`/board/Content?idx=${idx}`)\r\n            .then(response => {\r\n                setBoard(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"There was an error retrieving the board: \", error);\r\n            });\r\n        axios.get(`/board/Reply?boardIdx=${idx}`)\r\n            .then(response => {\r\n                setComments(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"There was an error retrieving the board: \", error);\r\n            });\r\n    }, [idx]);\r\n\r\n    const handleComment = async () => {\r\n        await axios.post(`/board/WriteReply`, {\r\n            boardIdx: idx,\r\n            content: newComment,\r\n            reg_name: reg_name,\r\n            w_date: currentTime,\r\n            u_date: currentTime,\r\n        })\r\n            .then(response => {\r\n                console.log('댓글 작성 성공:', response.data);\r\n                setComments(prevComments => [...prevComments, response.data]);\r\n                setNewComment('');\r\n            })\r\n            .catch(error => {\r\n                console.error('댓글 작성 실패:', error);\r\n            });\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        await axios.delete(`/board/Delete?idx=${idx}`)\r\n            .then(response => {\r\n                console.log('게시글 삭제 성공:', response.data);\r\n                navigate('/board/list');\r\n            })\r\n            .catch(error => {\r\n                console.error('게시글 삭제 실패:', error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content-container\">\r\n                <div className=\"title\">{board.title}</div>\r\n                <div className=\"meta-info\">\r\n                    작성자: {board.reg_name} | 조회수: {board.hit} | 작성 시간: {board.w_date} | 수정 시간: {board.u_date}\r\n                </div>\r\n                <div className=\"content\">{board.content}</div>\r\n                <div className=\"content\">\r\n                    <Link to={`/board/list/edit/${idx}`}>\r\n                        <button>수정</button>\r\n                    </Link>\r\n                    <button onClick={() => navigate(\"/board/list\")}>목록</button>\r\n                    <button onClick={handleDelete}>삭제</button>\r\n                </div>\r\n                <h3>댓글</h3>\r\n                <ul className=\"comment-list\">\r\n                    {comments.map(comment => (\r\n                        <li key={comment.idx} className=\"comment-item\">\r\n                            <div className=\"comment-content\">{comment.content}</div>\r\n                            <div className=\"comment-info\">\r\n                                작성자: {comment.reg_name} | 작성 시간: {comment.w_date}\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <div className=\"comment-input\">\r\n                    <textarea\r\n                        value={newComment}\r\n                        onChange={(e) => setNewComment(e.target.value)}\r\n                        placeholder={\"댓글을 작성하세요\"}\r\n                    ></textarea>\r\n                    <button onClick={handleComment}>댓글 작성</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReadContent;\r\n\r\n"],"names":["navigate","useNavigate","idx","useParams","board","setBoard","useState","comments","setComments","newComment","setNewComment","userData","useSelector","state","reg_name","mem_id","currentTime","Date","toISOString","useEffect","axios","get","concat","then","response","data","catch","error","console","_jsx","className","children","_jsxs","title","hit","w_date","u_date","content","Link","to","onClick","async","delete","log","map","comment","value","onChange","e","target","placeholder","post","boardIdx","prevComments"],"sourceRoot":""}