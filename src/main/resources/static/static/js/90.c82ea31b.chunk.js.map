{"version":3,"file":"static/js/90.c82ea31b.chunk.js","mappings":"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","sources":["Menu.jsx","animal/AnimalInfo.jsx","animal/Pagination.jsx","webpack://frontend/./src/css/recommend.css?6bff"],"sourcesContent":["import React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport store from \"./member/Store\";\r\nimport {logout} from \"./member/Reducer\";\r\nimport menustyle from \"./css/menu.css\"\r\n\r\nimport logo from \"./logo/simple.png\"; //logo\r\nfunction Memu() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const state = store.getState();\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n        navigate(\"/main\");\r\n    };\r\n    return(\r\n        <div className=\"menubar\">\r\n            {state.isLoggedIn ? (\r\n                <button className=\"login\" onClick={handleLogout}>로그아웃</button>\r\n            ) : (\r\n                <button className=\"login\" onClick={() => navigate(\"/member/login\")}>로그인</button>\r\n            )}\r\n\r\n            <ul>\r\n                {/* <li onClick={() => navigate(\"/main\")}>홈</li> */}\r\n                <li onClick={() => navigate(\"/main\")}>\r\n                    <img src={logo} style={{width: '150px', height: 'auto', marginTop: '-20px', marginLeft: '10px'}}/>\r\n                </li>\r\n                <li onClick={() => navigate(\"/animal\")}>보호 중인 동물</li>\r\n                <li onClick={() => navigate(\"/recommend\")}>반려견 추천</li>\r\n                <li onClick={() => navigate(\"/board/list\")}>게시판</li>\r\n                <li className=\"dropdown\">\r\n                    <span>회원 정보</span>\r\n                    <div className=\"dropdown-content\">\r\n                        <Link to=\"/member/mypage\">정보 확인 및 수정</Link>\r\n                        <Link to=\"/member/mypage/mycart\">찜 목록</Link>\r\n                        <Link to=\"/member/mypage/mycontent\">내가 작성한 글과 댓글</Link>\r\n                        <Link to=\"/member/mypage/imgUpload\">이미지 업로드</Link>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Memu;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Menu from \"../Menu\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../css/search.css\";\r\nimport buttonsytle from \"../css/member.css\";\r\nimport \"../css/menu.css\"\r\nimport styles from \"../css/recommend.css\" //멘트\r\nimport store from \"../member/Store\";\r\nimport Pagination from \"../animal/Pagination\"\r\n\r\nconst formatDate = (dateString) => {\r\n    if (!dateString) return '';\r\n    const year = dateString.substring(0, 4);\r\n    const month = dateString.substring(4, 6);\r\n    const day = dateString.substring(6, 8);\r\n    return `${year}년 ${month}월 ${day}일`;\r\n};\r\n\r\nconst AnimalInfo = () => {\r\n    const [animalInfos, setAnimalInfos] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [analysisloading, setAnalysisloading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [kind, setKind] = useState('');\r\n    const [uprCd, setUprCd] = useState('');\r\n    const [orgCd, setOrgCd] = useState('');\r\n    const [analysisResults, setAnalysisResults] = useState([]);\r\n    const [regionList, setRegionList] = useState([]);\r\n    const [districtList, setDistrictList] = useState([]);\r\n    const [selectedRegion, setSelectedRegion] = useState('');\r\n\r\n    const [limit, setLimit] = useState(20);\r\n    const [page, setPage] = useState(1);\r\n    const offset = (page - 1) * limit;\r\n\r\n    const addAnalysisResult = (newResult) => {\r\n        setAnalysisResults(prevAnalysisResults => [...prevAnalysisResults, newResult]);\r\n    };\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const response = await axios.get(`/api/animal/info?startDate=${startDate}&endDate=${endDate}&kind=${kind}&uprCd=${uprCd}&orgCd=${orgCd}`);\r\n            setAnimalInfos(response.data);\r\n            for (const animalInfo of response.data) {\r\n                await handleAnalysis(animalInfo.desertionNo, animalInfo.popfile);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching animal info:', error);\r\n            setError(error);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const fetchRandomAnimals = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const response = await axios.get('/api/animal/random-desertionNos');\r\n            const desertionNos = response.data;\r\n            const animalInfoPromises = desertionNos.map(desertionNo => axios.get(`/api/animal/${desertionNo}`));\r\n            const animalInfoResponses = await Promise.all(animalInfoPromises);\r\n            const animalInfos = animalInfoResponses.map(res => res.data);\r\n            setAnimalInfos(animalInfos);\r\n            for (const animalInfo of animalInfos) {\r\n                await handleAnalysis(animalInfo.desertionNo, animalInfo.popfile);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching random animals:', error);\r\n            setError(error);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchRandomAnimals();\r\n\r\n        const fetchRegionList = async () => {\r\n            try {\r\n                const response = await axios.get('/api/animal/SlctReg_code');\r\n                setRegionList(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching region list:', error);\r\n            }\r\n        };\r\n\r\n        fetchRegionList();\r\n    }, []);\r\n\r\n    const handleAnalysis = async (desertionNo, imageUrl) => {\r\n        try {\r\n            setAnalysisloading(true);\r\n            const response = await axios.get(`/api/animal/analyze?desertionNo=${desertionNo}&popfile=${imageUrl}`);\r\n            addAnalysisResult(response.data);\r\n            setError(null);\r\n        } catch (error) {\r\n            console.error('Error analyzing image:', error);\r\n            setError('An error occurred while analyzing the image.');\r\n            addAnalysisResult('error');\r\n        }\r\n        setAnalysisloading(false);\r\n    };\r\n\r\n    const handleRegionChange = async (event) => {\r\n        const selectedRegion = event.target.value;\r\n        setSelectedRegion(selectedRegion);\r\n        setUprCd(selectedRegion);\r\n        try {\r\n            const response = await axios.get(`/api/animal/SlctDist_code?reg_name=${selectedRegion}`);\r\n            setDistrictList(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching district list:', error);\r\n        }\r\n    };\r\n\r\n    const handleDistrictChange = (event) => {\r\n        const selectedDistrict = event.target.value;\r\n        setOrgCd(selectedDistrict);\r\n    };\r\n\r\n    const state = store.getState();\r\n    const navigate = useNavigate();\r\n\r\n    const userId = state.isLoggedIn ? state.userData.mem_id : null;\r\n    const currentTime = new Date().toISOString();\r\n    const { idx } = useParams();\r\n\r\n    const addFavorite = (desertionNo) => {\r\n        axios.post(`/favorites/add?memId=${userId}&desertionNo=${desertionNo}`, {\r\n            mem_id: userId,\r\n            desertionNo: desertionNo,\r\n            created_at: currentTime,\r\n        })\r\n            .then(response => {\r\n                console.log(\"Favorite added successfully\");\r\n                alert(\"찜 목록에 담겼습니다!\");\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error adding favorite: \", error);\r\n            });\r\n    };\r\n\r\n    const handleDetailAnimal = (animalInfo) => {\r\n        const state = {\r\n            url: '/animal/info',\r\n            desertionNo: animalInfo.desertionNo,\r\n            test: animalInfo.desertionNo,\r\n        };\r\n        navigate('/animal/detail', { state });\r\n    };\r\n\r\n    const getNeuterYnText = (neuterYn) => {\r\n        switch (neuterYn) {\r\n            case 'Y':\r\n                return 'O';\r\n            case 'N':\r\n                return 'X';\r\n            case 'U':\r\n                return '모름';\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n\r\n    const getSexCdText = (sexCd) => {\r\n        switch (sexCd) {\r\n            case 'M':\r\n                return '수컷';\r\n            case 'F':\r\n                return '암컷';\r\n            case 'Q':\r\n                return '미상';\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <Menu/>\r\n            </header>\r\n            <main>\r\n                <br/>\r\n                <div data-case=\"text79\" className=\"userEL15637124\">\r\n                    <div style={styles.container}>\r\n                        <div className=\"row\" data-matrix-loop=\"true\" data-matrix-column=\"1\">\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 item\">\r\n                                <div className=\"cl_caption\" data-edit=\"true\" data-selector=\".cl_caption\">\r\n                                    <hr className=\"fr-hr\"\r\n                                        style={{borderBottom: '2px solid #d6d7d8', width: '35px', margin: '0 auto'}}\r\n                                        align=\"center\"/>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}><br/></span></span>\r\n                                    </div>\r\n                                    <br/>\r\n                                    <div><span\r\n                                        style={{fontFamily: \"'Seoul Namsan'\", fontSize: '30px'}}>유기견 검색</span>\r\n                                    </div>\r\n                                    <div><span className=\"fsize13\"><span style={{\r\n                                        color: 'rgb(138, 139, 142)',\r\n                                        fontFamily: \"'Nanum Barun Gothic'\"\r\n                                    }}>​</span></span></div>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}><br/>공고 시작일, 종료일, 종료, 지역(도/특별시), (시/군)으로 옵션을 선택하여 검색하실 수 있습니다.</span></span>\r\n                                    </div>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}><br/>-사진 위에 마우스를 올리면, 더 자세한 정보를 보실 수 있습니다.<br/>-사진을 클릴하시면, 향후 성장시 특성&보호소 등 더 자세한 정보를 보실 수 있습니다.<br/><br/><br/></span></span>\r\n                                    </div>\r\n                                    <hr className=\"fr-hr\"\r\n                                        style={{borderBottom: '2px solid #d6d7d8', width: '35px', margin: '0 auto'}}\r\n                                        align=\"center\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {state.isLoggedIn ? (\r\n                    <div>\r\n                        <div className=\"container_search\">\r\n                            <div className=\"contentContainer\">\r\n                                <label className=\"label\">공고 시작일: </label>\r\n                                <input type=\"text\" value={startDate} onChange={(e) => setStartDate(e.target.value)}/>\r\n                                (ex. 20240216)\r\n                            </div>\r\n                            <div className=\"contentContainer\">\r\n                                <label className=\"label\">공고 종료일: </label>\r\n                                <input type=\"text\" value={endDate} onChange={(e) => setEndDate(e.target.value)}/>\r\n                                (ex. 20240216)\r\n                            </div>\r\n                            <div className=\"contentContainer\">\r\n                                <label className=\"label\">품종: </label>\r\n                                <input type=\"text\" value={kind} onChange={(e) => setKind(e.target.value)}/>\r\n                            </div>\r\n                            <div className=\"contentContainer\">\r\n                                <label className=\"label\" htmlFor=\"region\">지역(도/특별시):</label>\r\n                                <select id=\"region\" onChange={handleRegionChange}>\r\n                                    <option value=\"\">지역(도/특별시)</option>\r\n                                    {regionList.map((region) => (\r\n                                        <option key={region.reg_code} value={region.reg_name}>{region.reg_name}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <div style={{marginBottom: '20px'}} className=\"contentContainer\">\r\n                                <label className=\"label\" htmlFor=\"district\">지역(시/군):</label>\r\n                                <select id=\"district\" onChange={handleDistrictChange}>\r\n                                    <option value=\"\">지역(시/군)</option>\r\n                                    {districtList.map((district) => (\r\n                                        <option key={district.dist_code}\r\n                                                value={district.dist_name}>{district.dist_name}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            <button className=\"button\" onClick={fetchData} style={{width: '350px'}}>검색하기</button>\r\n                        </div>\r\n                        {animalInfos.length === 0 && !loading && !error && <div>No data available</div>}\r\n                        <div className=\"grid-container\">\r\n                            {animalInfos.slice(offset, offset + limit).map((animalInfo, index) => (\r\n                                <div className=\"card\" key={index}>\r\n                                    <div className=\"card-image\">\r\n                                        <img src={animalInfo.popfile} alt=\"Animal\"/>\r\n                                    </div>\r\n                                    <div className=\"card-content\">\r\n                                    </div>\r\n                                    {analysisloading ? (\r\n                                        <div>Analysis Loading...</div>\r\n                                    ) : (\r\n                                        analysisResults.map((analysisresult, index) => (\r\n                                            <div key={index}\r\n                                                 className={analysisresult.desertionNo === animalInfo.desertionNo ? \"analysis-info\" : \"\"}>\r\n                                                {analysisresult.desertionNo === animalInfo.desertionNo && (\r\n                                                    <div>\r\n                                                        <p>[ 품종 비율 1순위\r\n                                                            ]<br/>{analysisresult.className1} ({(analysisresult.probability1 * 100).toFixed(2)}%)\r\n                                                        </p>\r\n                                                        <p>[ 품종 비율 2순위\r\n                                                            ]<br/>{analysisresult.className2} ({(analysisresult.probability2 * 100).toFixed(2)}%)\r\n                                                        </p>\r\n                                                        <p>[ 품종 비율 3순위\r\n                                                            ]<br/>{analysisresult.className3} ({(analysisresult.probability3 * 100).toFixed(2)}%)\r\n                                                        </p>\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                        ))\r\n                                    )}\r\n                                    <button className=\"button\" onClick={() => addFavorite(animalInfo.desertionNo)}\r\n                                            style={{width: '100%'}}>찜 추가\r\n                                    </button>\r\n                                    <div className=\"analysis\" onClick={() => handleDetailAnimal(animalInfo)}>\r\n                                        <div className=\"analysis_info\">\r\n                                            <br/>\r\n                                            <p>발견 날짜: {formatDate(animalInfo.happenDt)}</p>\r\n                                            <p>발견 장소: {animalInfo.happenPlace}</p>\r\n                                            <p>나이: {animalInfo.age}</p>\r\n                                            <p>무게: {animalInfo.weight}</p>\r\n                                            <p>공고 시작 날짜: {formatDate(animalInfo.noticeSdt)}</p>\r\n                                            <p>공고 종료 날짜: {formatDate(animalInfo.noticeEdt)}</p>\r\n                                            <p>성별: {getSexCdText(animalInfo.sexCd)}</p>\r\n                                            <p>중성화 여부: {getNeuterYnText(animalInfo.neuterYn)}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {loading && <div>Loading...</div>}\r\n                        {error && <div>Error: {error.message}</div>}\r\n                        <footer>\r\n                            <Pagination\r\n                                total={animalInfos.length}\r\n                                limit={limit}\r\n                                page={page}\r\n                                setPage={setPage}\r\n                            />\r\n                        </footer>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <h2 className=\"h2\">(현재 찜 기능으로 인해) 해당 화면은 로그인이 필요한 화면입니다.</h2>\r\n                        <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                            <button className=\"custom-button\" onClick={() => navigate(\"/member/SignUp\")}>회원가입 >\r\n                            </button>\r\n                            <button className=\"custom-button\" onClick={() => navigate(\"/member/login\")}>로그인 >\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </main>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnimalInfo;\r\n","import React from 'react';\r\nimport '../css/paginaion.css'; // 위에서 변환한 CSS 파일을 import 합니다.\r\n\r\nfunction Pagination({ total, limit, page, setPage }) {\r\n    const numPages = Math.ceil(total / limit);\r\n\r\n    return (\r\n        <div className=\"Nav_pagination\">\r\n            <button\r\n                className=\"Button_pagination\"\r\n                onClick={() => setPage(page - 1)}\r\n                disabled={page === 1}\r\n            >\r\n                &lt;\r\n            </button>\r\n            {Array(numPages)\r\n                .fill()\r\n                .map((_, i) => (\r\n                    <button\r\n                        className=\"Button_pagination\"\r\n                        key={i + 1}\r\n                        onClick={() => setPage(i + 1)}\r\n                        aria-current={page === i + 1 ? \"page\" : undefined}\r\n                    >\r\n                        {i + 1}\r\n                    </button>\r\n                ))}\r\n            <button\r\n                className=\"Button_pagination\"\r\n                onClick={() => setPage(page + 1)}\r\n                disabled={page === numPages}\r\n            >\r\n                &gt;\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pagination;\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["navigate","useNavigate","dispatch","useDispatch","state","store","getState","_jsxs","className","children","isLoggedIn","_jsx","onClick","handleLogout","logout","src","logo","style","width","height","marginTop","marginLeft","Link","to","formatDate","dateString","year","substring","month","day","concat","AnimalInfo","animalInfos","setAnimalInfos","useState","loading","setLoading","analysisloading","setAnalysisloading","error","setError","startDate","setStartDate","endDate","setEndDate","kind","setKind","uprCd","setUprCd","orgCd","setOrgCd","analysisResults","setAnalysisResults","regionList","setRegionList","districtList","setDistrictList","selectedRegion","setSelectedRegion","limit","setLimit","page","setPage","offset","addAnalysisResult","newResult","prevAnalysisResults","useEffect","async","animalInfoPromises","axios","get","data","map","desertionNo","Promise","all","res","animalInfo","handleAnalysis","popfile","console","fetchRandomAnimals","response","fetchRegionList","imageUrl","userId","userData","mem_id","currentTime","Date","toISOString","idx","useParams","getNeuterYnText","neuterYn","getSexCdText","sexCd","Menu","styles","container","borderBottom","margin","align","color","fontFamily","fontSize","type","value","onChange","e","target","htmlFor","id","event","region","reg_name","reg_code","marginBottom","selectedDistrict","district","dist_name","dist_code","length","slice","index","alt","analysisresult","className1","probability1","toFixed","className2","probability2","className3","probability3","addFavorite","post","created_at","then","log","alert","catch","url","test","handleDetailAnimal","happenDt","happenPlace","age","weight","noticeSdt","noticeEdt","message","Pagination","total","display","justifyContent","_ref","numPages","Math","ceil","disabled","Array","fill","_","i","undefined"],"sourceRoot":""}