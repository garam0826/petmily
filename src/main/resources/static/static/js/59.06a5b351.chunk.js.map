{"version":3,"file":"static/js/59.06a5b351.chunk.js","mappings":"qKA8CA,QA1CA,WACI,MAAOA,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,KAChCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,IAE7BO,GAAWC,EAAAA,EAAAA,MAkBjB,OACIC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qCACJC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,YAAY,eAAKC,MAAOhB,EAASiB,SAAWC,GAAMjB,EAAWiB,EAAEC,OAAOH,UACzFH,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,YAAY,2BAAOC,MAAOb,EAAOc,SAAWC,GAAMd,EAASc,EAAEC,OAAOH,UACvFH,EAAAA,EAAAA,KAAA,UAAQO,QAtBKC,UACjB,IACI,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,6BAADC,OAA8BzB,EAAO,WAAAyB,OAAUtB,IACvD,MAApBmB,EAASI,QACTpB,EAAWgB,EAASK,MACpBnB,EAAS,MAETF,EAAW,IACXE,EAAS,uGAEjB,CAAE,MAAOD,GACLqB,QAAQrB,MAAM,2BAA4BA,GAC1CD,EAAW,IACXE,EAAS,yEACb,GAQkCI,SAAC,iBAC9BP,IACGM,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACID,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,oCAASP,MACZQ,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAAQO,QAASA,IAAMX,EAAS,iBAAiBG,SAAC,2CAGzDL,IAASM,EAAAA,EAAAA,KAAA,KAAAD,SAAIL,MAG1B,C","sources":["member/Findid.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nfunction FindId() {\r\n    const [memName, setMemName] = useState('');\r\n    const [birth, setBirth] = useState('');\r\n    const [foundId, setFoundId] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n    const handleFindId = async () => {\r\n        try {\r\n            const response = await axios.get(`/member/searchid?mem_name=${memName}&birth=${birth}`);\r\n            if (response.status === 200) {\r\n                setFoundId(response.data);\r\n                setError('');\r\n            } else {\r\n                setFoundId('');\r\n                setError('이름과 생년월일을 다시 확인해보세요');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error finding member id:', error);\r\n            setFoundId('');\r\n            setError('서버에 연결할 수 없습니다.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>아이디 찾기</h2>\r\n            <input type=\"text\" placeholder=\"이름\" value={memName} onChange={(e) => setMemName(e.target.value)}/>\r\n            <input type=\"text\" placeholder=\"생년월일\" value={birth} onChange={(e) => setBirth(e.target.value)}/>\r\n            <button onClick={handleFindId}>조회</button>\r\n            {foundId && (\r\n                <div>\r\n                    <p>찾은 아이디: {foundId}</p>\r\n                    <hr/>\r\n                    <button onClick={() => navigate(\"/member/login\")}> 로그인 화면 >></button>\r\n                </div>\r\n            )}\r\n            {error && <p>{error}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FindId;\r\n"],"names":["memName","setMemName","useState","birth","setBirth","foundId","setFoundId","error","setError","navigate","useNavigate","_jsxs","children","_jsx","type","placeholder","value","onChange","e","target","onClick","async","response","axios","get","concat","status","data","console"],"sourceRoot":""}