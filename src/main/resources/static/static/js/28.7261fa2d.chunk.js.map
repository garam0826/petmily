{"version":3,"file":"static/js/28.7261fa2d.chunk.js","mappings":"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","sources":["Menu.jsx","recommend/KeywordResult.jsx","recommend/Recommend_Result.jsx","webpack://frontend/./src/css/recommend.css?6bff"],"sourcesContent":["import React from 'react';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport store from \"./member/Store\";\r\nimport {logout} from \"./member/Reducer\";\r\nimport menustyle from \"./css/menu.css\"\r\n\r\nimport logo from \"./logo/simple.png\"; //logo\r\nimport Button from '@mui/material/Button';\r\nfunction Memu() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const state = store.getState();\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n        navigate(\"/main\");\r\n    };\r\n    return(\r\n        <div className=\"menubar\">\r\n            {state.isLoggedIn ? (\r\n                <button className=\"login\" onClick={handleLogout}>로그아웃</button>\r\n            ) : (\r\n                <button className=\"login\" onClick={() => navigate(\"/member/login\")}>로그인</button>\r\n            )}\r\n\r\n            <ul>\r\n                {/* <li onClick={() => navigate(\"/main\")}>홈</li> */}\r\n                <li onClick={() => navigate(\"/main\")}>\r\n                    <img src={logo} style={{width: '150px', height: 'auto', marginTop: '-20px', marginLeft: '10px'}}/>\r\n                </li>\r\n                <li onClick={() => navigate(\"/animal\")}>보호 중인 동물</li>\r\n                <li onClick={() => navigate(\"/recommend\")}>반려견 추천</li>\r\n                <li onClick={() => navigate(\"/board/list\")}>게시판</li>\r\n                <li className=\"dropdown\">\r\n                    <span>회원 정보</span>\r\n                    <div className=\"dropdown-content\">\r\n                        <Link to=\"/member/mypage\">정보 확인 및 수정</Link>\r\n                        <Link to=\"/member/mypage/mycart\">찜 목록</Link>\r\n                        <Link to=\"/member/mypage/mycontent\">내가 작성한 글과 댓글</Link>\r\n                        <Link to=\"/member/mypage/imgUpload\">이미지 업로드</Link>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Memu;","import React, { useState, useEffect } from 'react';\r\nimport {useLocation} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport store from \"../member/Store\";\r\nimport Menu from \"../Menu\";\r\n\r\nimport '../css/menu.css';\r\nimport '../css/result.css';\r\nimport Recommend_Result from \"./Recommend_Result\";\r\n\r\nconst KeywordResult = () => {\r\n    const location = useLocation();\r\n    const state = store.getState();\r\n    const userId = state.isLoggedIn ? state.userData.mem_id : null;\r\n    const {desertionNos} = location.state || { desertionNos: [] };\r\n\r\n    const [matches, setMatches] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    //const [keywords, setKeywords] = useState(\"\");\r\n\r\n    // 키워드 매치 데이터를 가져오는 useEffect\r\n    useEffect(() => {\r\n        const fetchMatches = async () => {\r\n            try {\r\n                // keyword 추천 결과로 api 바꿔야함\r\n                setLoading(true);\r\n                setError(null);\r\n                console.log('Sending desertionNos:', desertionNos);\r\n                //console.log('Result:', desertionNos);\r\n                setMatches(desertionNos);\r\n                console.log(setMatches(desertionNos));\r\n            } catch (err) {\r\n                setError('Failed to fetch matches');\r\n                console.error(err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        if (userId && desertionNos.length > 0) {\r\n            fetchMatches();\r\n        }\r\n    }, [userId, desertionNos]);\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <Menu />\r\n            </header>\r\n            <main>\r\n                <Recommend_Result matches={matches} loading={loading} error={error} title={\"키워드\"}/>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default KeywordResult;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport store from \"../member/Store\";\r\nimport Menu from \"../Menu\";\r\nimport \"../css/recommend.css\"\r\n\r\nimport '../css/menu.css';\r\nimport '../css/result.css';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst Recommend_Result = ({ matches, loading, error, title }) => {\r\n    const navigate = useNavigate();\r\n    const state = store.getState();\r\n    const userId = state.isLoggedIn ? state.userData.mem_id : null;\r\n\r\n    //const [matches, setMatches] = useState([]);\r\n    //const [loading, setLoading] = useState(true);\r\n    //const [error, setError] = useState(null);\r\n    console.log(matches);\r\n\r\n    const [animalInfos, setAnimalInfos] = useState({});\r\n    const [analysisResults, setAnalysisResults] = useState({});\r\n    const [fetchDataError, setFetchDataError] = useState(null);\r\n\r\n    const [visibleCount, setVisibleCount] = useState(5); // 초기에는 5마리만 보이도록 설정\r\n\r\n\r\n    // 매치된 반려동물 정보를 가져오는 useEffect\r\n    useEffect(() => {\r\n        const fetchData = async (desertionNo) => {\r\n            try {\r\n                const response = await axios.get(`/api/animal/${desertionNo}`);\r\n                setAnimalInfos(prevState => ({\r\n                    ...prevState,\r\n                    [desertionNo]: response.data\r\n                }));\r\n                await handleAnalysis(desertionNo, response.data.popfile);\r\n            } catch (error) {\r\n                console.error('Error fetching animal info:', error);\r\n                setFetchDataError('Error fetching animal info');\r\n            }\r\n        };\r\n\r\n        matches.forEach(desertionNo => {\r\n            if (!animalInfos[desertionNo]) {\r\n                fetchData(desertionNo);\r\n            }\r\n        });\r\n    }, [matches]);\r\n\r\n    const handleAnalysis = async (desertionNo, imageUrl) => {\r\n        try {\r\n            const response = await axios.get(`/api/animal/analyze?desertionNo=${desertionNo}&popfile=${imageUrl}`);\r\n            setAnalysisResults(prevState => ({\r\n                ...prevState,\r\n                [desertionNo]: response.data\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error analyzing image:', error);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    if (fetchDataError) {\r\n        return <div>{fetchDataError}</div>;\r\n    }\r\n\r\n    const handleDetailAnimal = (DesertionNo) => {\r\n        navigate('/animal/detail', {\r\n            state: {\r\n                desertionNo: DesertionNo,\r\n            },\r\n        });\r\n    };\r\n\r\n    const formatDate = (dateStr) => {\r\n        if (!dateStr) return '날짜 정보 없음'; // dateStr이 정의되지 않은 경우 대체 문자열 반환\r\n        const year = dateStr.substring(0, 4);\r\n        const month = dateStr.substring(4, 6);\r\n        const day = dateStr.substring(6, 8);\r\n        return `${year}년 ${parseInt(month, 10)}월 ${parseInt(day, 10)}일`;\r\n    };\r\n\r\n    const getNeuterYnText = (neuterYn) => {\r\n        switch (neuterYn) {\r\n            case 'Y':\r\n                return 'O';\r\n            case 'N':\r\n                return 'X';\r\n            case 'U':\r\n                return '모름';\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n\r\n    const getSexCdText = (sexCd) => {\r\n        switch (sexCd) {\r\n            case 'M':\r\n                return '수컷';\r\n            case 'F':\r\n                return '암컷';\r\n            case 'Q':\r\n                return '미상';\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n\r\n    const loadMore = () => {\r\n        setVisibleCount(prevCount => prevCount + 5); // 보여줄 강아지 수를 5마리씩 늘림\r\n    };\r\n\r\n    const currentTime = new Date().toISOString();\r\n    const addFavorite = (desertionNo) => {\r\n        axios.post(`/favorites/add?memId=${userId}&desertionNo=${desertionNo}`, {\r\n            mem_id: userId,\r\n            desertionNo: desertionNo,\r\n            created_at: currentTime,\r\n        })\r\n            .then(response => {\r\n                console.log(\"Favorite added successfully\");\r\n                alert(\"찜 목록에 담겼습니다!\");\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error adding favorite: \", error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <main className=\"container_result\">\r\n                <div data-case=\"text79\" className=\"userEL15637124\">\r\n                    <div className=\"container_result\">\r\n                        <div className=\"row\" data-matrix-loop=\"true\" data-matrix-column=\"1\">\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 item\">\r\n                                <div className=\"cl_caption\" data-edit=\"true\" data-selector=\".cl_caption\">\r\n                                    <hr className=\"fr-hr\"\r\n                                        style={{borderBottom: '2px solid #d6d7d8', width: '35px', margin: '0 auto'}}\r\n                                        align=\"center\"/>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}><br/></span></span>\r\n                                    </div>\r\n                                    <div><span\r\n                                        style={{\r\n                                            fontFamily: \"'Seoul Namsan'\",\r\n                                            fontSize: '30px'\r\n                                        }}>유기견 {title} 추천 결과</span>\r\n                                    </div>\r\n                                    <div><span className=\"fsize13\"><span style={{\r\n                                        color: 'rgb(138, 139, 142)',\r\n                                        fontFamily: \"'Nanum Barun Gothic'\"\r\n                                    }}>​</span></span></div>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}>사용자의 취향에 맞는 유기견 5마리입니다. 더 보고 싶으시면 아래 더보기 버튼을 눌러주세요. (최대 15마리까지 가능합니다.)</span></span>\r\n                                    </div>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}><br/>- 사진 위에 마우스를 올리면, 더 자세한 정보를 보실 수 있습니다.</span></span>\r\n                                    </div>\r\n                                    <div><span className=\"fsize13\"><span\r\n                                        style={{color: 'rgb(138, 139, 142)', fontFamily: \"'Nanum Barun Gothic'\"}}>- 강아지를 클릭하면, 향후 성장시 특성&보호소 등 더 자세한 정보를 보실 수 있습니다.<br/><br/></span></span>\r\n                                    </div>\r\n                                    <hr className=\"fr-hr\"\r\n                                        style={{borderBottom: '2px solid #d6d7d8', width: '35px', margin: '0 auto'}}\r\n                                        align=\"center\"/>\r\n                                    <div><br/></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {matches.length === 0 ? (\r\n                    <div>No matches found</div>\r\n                ) : (\r\n                    <div className=\"grid-container_result\">\r\n                        {matches.slice(0, visibleCount).map((desertionNo, index) => (\r\n                            <div className=\"card_result\" key={desertionNo} style={{height: '730px'}}>\r\n                                {animalInfos && (\r\n                                    <div className=\"result\">\r\n                                        <h3 className=\"h3_result\">{index + 1}</h3>\r\n                                        <img src={animalInfos[desertionNo]?.popfile} alt=\"Animal\"/>\r\n                                        {analysisResults[desertionNo] && (\r\n                                            <div>\r\n                                                <hr/>\r\n                                                <p>[ 품종 비율 1순위\r\n                                                    ]<br/>{analysisResults[desertionNo].className1}<br/>({(analysisResults[desertionNo].probability1 * 100).toFixed(2)}%)\r\n                                                </p>\r\n                                                <p>[ 품종 비율 2순위\r\n                                                    ]<br/>{analysisResults[desertionNo].className2}<br/>({(analysisResults[desertionNo].probability2 * 100).toFixed(2)}%)\r\n                                                </p>\r\n                                                <p>[ 품종 비율 3순위\r\n                                                    ]<br/>{analysisResults[desertionNo].className3}<br/>({(analysisResults[desertionNo].probability3 * 100).toFixed(2)}%)\r\n                                                </p>\r\n                                            </div>\r\n                                        )}\r\n                                        <Button variant=\"contained\" onClick={() => addFavorite(desertionNo)}\r\n                                                sx={{\r\n                                                    width: '100%',\r\n                                                    fontWeight: 'bold',\r\n                                                    backgroundColor: 'rgba(236, 172, 181, 0.65)', // 기본 색상\r\n                                                    '&:hover': {\r\n                                                        backgroundColor: 'rgba(236, 172, 181, 1)' // 마우스 올렸을 때 색상\r\n                                                    }\r\n                                                }}>찜 추가</Button>\r\n\r\n                                        <div className=\"analysis-results\"  onClick={() => handleDetailAnimal(desertionNo)}>\r\n                                            <div className=\"analysis_info-result\">\r\n                                                <br/>\r\n                                                <p>발견 날짜: {formatDate(animalInfos[desertionNo]?.happenDt)}</p>\r\n                                                <p>발견 장소: {animalInfos[desertionNo]?.happenPlace}</p>\r\n                                                <p>나이: {animalInfos[desertionNo]?.age}</p>\r\n                                                <p>무게: {animalInfos[desertionNo]?.weight}</p>\r\n                                                <p>공고 시작 날짜: {animalInfos[desertionNo]?.noticeSdt}</p>\r\n                                                <p>공고 종료 날짜: {animalInfos[desertionNo]?.noticeEdt}</p>\r\n                                                <p>성별: {getSexCdText(animalInfos[desertionNo]?.sexCd)}</p>\r\n                                                <p>중성화 여부: {getNeuterYnText(animalInfos[desertionNo]?.neuterYn)}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n                {visibleCount < matches.length && (\r\n                    <Box style={{ display: 'flex', justifyContent: 'center' }}>\r\n                        <Button variant=\"contained\" style={{marginTop: '5px', width: '300px'}} onClick={loadMore}>더보기</Button>\r\n                    </Box>\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Recommend_Result;\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["navigate","useNavigate","dispatch","useDispatch","state","store","getState","_jsxs","className","children","isLoggedIn","_jsx","onClick","handleLogout","logout","src","logo","style","width","height","marginTop","marginLeft","Link","to","KeywordResult","location","useLocation","userId","userData","mem_id","desertionNos","matches","setMatches","useState","loading","setLoading","error","setError","useEffect","length","async","console","log","err","fetchMatches","Menu","Recommend_Result","title","_ref","animalInfos","setAnimalInfos","analysisResults","setAnalysisResults","fetchDataError","setFetchDataError","visibleCount","setVisibleCount","forEach","desertionNo","response","axios","get","concat","prevState","data","handleAnalysis","popfile","fetchData","imageUrl","formatDate","dateStr","year","substring","month","day","parseInt","getNeuterYnText","neuterYn","getSexCdText","sexCd","currentTime","Date","toISOString","borderBottom","margin","align","color","fontFamily","fontSize","slice","map","index","_animalInfos$desertio","_animalInfos$desertio2","_animalInfos$desertio3","_animalInfos$desertio4","_animalInfos$desertio5","_animalInfos$desertio6","_animalInfos$desertio7","_animalInfos$desertio8","_animalInfos$desertio9","alt","className1","probability1","toFixed","className2","probability2","className3","probability3","Button","variant","post","created_at","then","alert","catch","addFavorite","sx","fontWeight","backgroundColor","happenDt","happenPlace","age","weight","noticeSdt","noticeEdt","Box","display","justifyContent","loadMore","prevCount"],"sourceRoot":""}